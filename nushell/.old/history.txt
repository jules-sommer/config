hellooooo
echo balls
echo cool balls
echo massive cool balls
curl -fsSL https://bun.sh/install | bash
bun --help
echo $$path
echo $$PATH
echo $PATH
echo $env.PATH
sudo nano $env.PATH ~/.bun/bin
echo $env.PATH
bun -h
echo $env.PATH
chsh -s $(which nu)
cd /user/bin
ls
cd /
cd user
cd usr
ls
cd bin
ls
ls nu
ls *nu
ls nu*
ls z*
bun
cd J://
xs K
cd /mnt
ls
cd /media/julessommer/Backups/Documents/GitHub
ls
cd dodrugsbe.gay
bun install
sudo apt update<\n>sudo apt upgrade<\n>sudo apt dist-upgrade
sudo apt install synaptic
sudo apt install ubuntu-restricted-extras libavcodec-extra libdvd-pkg<\n>
sudo ubuntu-drivers autoinstall
sudo apt install software-properties-common
sudo add-apt-repository ppa:philip.scott/elementary-tweaks<\n>
sudo apt update
sudo apt install elementary-tweaks
sudo rm-apt-repository ppa:philip.scott/elementary-tweaks<\n>
sudo remove-apt-repository ppa:philip.scott/elementary-tweaks<\n>
sudo remove ppa:philip.scott/elementary-tweaks<\n>
sudo apt remove ppa:philip.scott/elementary-tweaks<\n>
sudo apt -h
sudo apt install -y software-properties-common
sudo add-apt-repository -y ppa:philip.scott/pantheon-tweaks<\n>
sudo apt install -y pantheon-tweaks
sudo nano /usr/share/dbus-1/interfaces/io.elementary.pantheon.AccountsService.xml
sudo dpkg --install protonmail-bridge_3.6.1-2_amd64.deb
cd  Downloads
sudo dpkg --install protonmail-bridge_3.6.1-2_amd64.deb
sudo apt-get -f install<\n>
sudo apt-get check
sudo apt-get install
sudo apt-get update
sudo dpkg --install protonmail-bridge_3.6.1-2_amd64.deb
sudo apt install --reinstall ca-certificates
bun run dev
cd ../
cd meet-luna-v3
bun run dev
bun run
bun run dev
bun install
bun run dev
curl -fsSL https://fnm.vercel.app/install | bash<\n>
source /home/julessommer/.bashrc
fmn
fnm
bash
curl -fsSL https://fnm.vercel.app/install | bash<\n>
cd Downloads
cd ~/Documents
cd Github
ls
lspci -k | grep -EA3 'VGA|3D|Display'
cd Documents
ls
cd meet-luna-v3
brew install pnpm
bun run dev
brew install node
brew tap homebrew/cask-fonts
brew install jandedobbeleer/oh-my-posh/oh-my-posh
brew search nerd-font
brew install --cask font-fira-code-nerd-font
oh-my-posh get shell
notepad $PROFILE
oh-my-posh init nu<\n><\n>
source ~/.oh-my-posh.nu
sudo apt install wmctrl
wmctrl -k on
brew tap homebrew/cask-fonts
brew search nerd-font
brew search font
sudo add-apt-repository universe<\n>sudo apt update
sudo apt install fonts-firacode<\n>
sudo apt-get check
cd /usr/share/io.elementary.terminal
ls
sudo apt-get install dconf-tools<\n>
sudo apt update<\n>
sudo apt install dconf-cli dconf-editor<\n>
source ~/.oh-my-posh.nu
nano ~/.oh-my-posh.nu
nano $nu.config-path
exit
nano $nu.env-path
nano $nu.config-path
nano ~/jandedobbeleer.omp.json
ls ~/jandedobbeleer.omp.json
nano $nu.config-path
nano $nu.env-path
oh-my-posh init nu --config ~/M365Princess.omp.json
nano $nu.env-path
nano ~/M365Princess.omp.json
chsh -s which-nu
chsh -s nushell
chsh -s nu
chsh -s $(which nu)
chsh -s /usr/bin/nu
chsh -s /usr/bin/nushell
cd /usr/bin
ls
config nu
nano $nu.env-path
nano $nu.config-path
oh-my-posh init nu<\n><\n>
brew install jandedobbeleer/oh-my-posh/oh-my-posh
nu
brew -b
brew -n
brew -h
oh-my-posh -h<\n><\n>
oh-my-posh print
$env.PATH = ($env.PATH | split row (char esep) | prepend '/home/linuxbrew/.linuxbrew/bin')
oh-my-posh -hb
ls
cd /Documents
cd ~/Documents
ls
cd meet-luna-v3
pnpm run dev
brew install pnpm
brew
cd Documents
cd 
cd Documents
ls
cd meet-luna-v3
brew install pnpm
cd Documents
cd meet-luna-v3
pnpm run dev
rm node_modules AND rm pnpm-lock.yaml
rm -R node_modules AND rm pnpm-lock.yaml
rm -r node_modules AND rm pnpm-lock.yaml
pnpm install
pnpm run dev
fnm --version
fnm
fnm ls
fnm list-remote
fnm install v20.0.0
fnm use v20.0.0
cd ../
pnpm create jd-app@latest
cd test-jd-app
pnpm dev
pnpm update
pnpm run dev
pnpm dev
pnpm update solid-start@latest solid-js@latest @solidjs-meta@latest
pnpm upgrade
pnpm upgrade solid-start-trpc@latest
pnpm dev
code ./package.json
cd ../meet-luna-v3
pnpm prune
pnpm upgrade
pnpm dev
bun install
bun run dev
pnpm dev
rm -r node_modules AND rm pnpm-lock.yaml
pnpm install
cd ../
bunx jd-app@latest
bunx create jd-app@latest
bun create jd-app@latest
cd duck-my-balls
bun upgrade --canary
rm -r node_modules AND rm pnpm-lock.yaml
rm package-lock.json
ls
bun install
bun dev
ls
nano bun.lockb
cd ../
l
ls
rm -r duck-my-balls/
ls
rm -r test-jd-app/
bunx create-solid
cd nuck-my-sholls/
ls
bun install
bun dev
bun update
nano package.json
ls
bun run
prettier init
pnpm install -g prettier
pnpm setup
$env.PATH
$env.PATH = ($env.PATH | split row (char esep) | prepend '/home/julessommer/.local/share/pnpm')
$env.PATH
pnpm install -g prettier
nano $nu.env-path
pnpm install -g prettier
pnpm setup
pnpm install -g prettier
nano $nu.env-path
prettier init
prettier -init
prettier --help
prettier -h
prettier --init
cd ../py_scrape_drugs/
ls
pip
brew install python3
python main.py
py main.py
brew reinstall python@3.11
py main.py
which python
bun run dev
cd ~/Downloads/
sudo dpkg --install discord-0.0.34.deb
sudo apt install python3
sudo apt install python
sudo apt install pip
sudo apt reinstall python3
python3
cd ~/Documents
ls
cd py_scrape_drugs
python3 main.py
pip install
pip install requests beautifulsoup4
python3 main.py --verbosity 1
pip install requests
python3 main.py
pip3 install requests
pip3 install requests beautifulsoup4
python3 main.py
cd ~/Downloads
sudo dpkg --install protonvpn-stable-release_1.0.3-2_all.deb
sudo apt-get update<\n>
sudo apt-get install proton-vpn-gnome-desktop<\n>
sudo apt install libayatana-appindicator3-1 gir1.2-ayatanaappindicator3-0.1 gnome-shell-extension-appindicator<\n>
sudo apt autoremove "protonvpn*" proton-vpn-gnome-desktop
wget https://repo.protonvpn.com/debian/dists/unstable/main/binary-all/protonvpn-beta-release_1.0.3-2_all.deb<\n>
sudo dpkg -i ./protonvpn-beta-release_1.0.3-2_all.deb && sudo apt update
sudo dpkg -i ./protonvpn-beta-release_1.0.3-2_all.deb and sudo apt update
sudo dpkg -i ./protonvpn-beta-release_1.0.3-2_all.deb; sudo apt update
sudo dpkg -i ./protonvpn-beta-release_1.0.3-2_all.deb
sudo apt update
sudo apt install proton-vpn-gnome-desktop
nmcli connection show --active
nmcli connection delete pvpn-killswitch
nmcli connection delete pvpn-killswitch-ipv6
nmcli connection show --active
rm -rf ~/.cache/protonvpn
rm -rf ~/.config/protonvpn
cd ../
cd py_scrape_drugs
ls
python3 main.py
Traceback (most recent call last):
python3 main.py
python3 main.py --verbosity 2 --save-html
python3 main.py --verbosity 1 --save-html -n 2
python3 main.py --verbosity 2 --save-html -n 2
python3 main.py --verbosity 2 --save-html -n 4
python3 main.py --verbosity 1 --save-html -n 4
python3 main.py --verbosity 1 --save-html -n 2
python3 main.py --verbosity 1 --save-html -n 1
sudo apt update; sudo apt install openvpn easy-rsa
sudo apt clean
sudo apt autoremove
sudo apt upgrade
sudo apt check
sudo apt-get check
sudo apt -h
sudo apt list
ls
prawnhub
bun
ls
cd Documents
ls
cd py_scrape_drugs
git init
git stage
git stage .
git commit -h
ls
git commit -i drugbank_data.json main.py ./html_pages
git -h
git --help
git push
git log
git remote add jules-sommer/drugsdata-scraper
git remote add jules-sommer/drugsdata-scraper https://github.com/jules-sommer/drugsdata-scraper
git push
git remote add https://github.com/jules-sommer/drugsdata-scraper.git
git remote add drugsdata-scraper https://github.com/jules-sommer/drugsdata-scraper.git
git push
git push drugsdata-scraper
sudo apt install git python3-setuptools gettext<\n>
cd ../
git clone https://github.com/sezanzeb/input-remapper.git
cd input-remapper && ./scripts/build.sh<\n>
cd input-remapper; ./scripts/build.sh<\n>
sudo apt install -f ./dist/input-remapper-2.0.1.deb<\n>
cd ~/Downloads
sudo dpkg --install input-remapper-2.0.0.deb
pip install requests bs4 argparse<\n>
bzcat -h
man bzcat
ls
cd ../
ls
cd py_scrape_drugs/
ls
python3 main.py --verbosity 1 --save-html -n 3
cd ../Documents/py_scrape_drugs/
ls
sudo nano .gitignore
git rm --cached 'subdir/*.html'<\n>
git rm --cached 'html_pages/*.html'<\n>
python3 main.py --verbosity 1 --save-html -n 3
cd ../Documents/py_scrape_drugs/
cd ../
cd py_scrape_drugs/
ls
python3 main.py --verbosity 1 --save-html -n 3
cd py_scrape_drugs/
ls
python3 main.py --verbosity 1 --save-html -n 1
pip install termcolor pprint
pip install termcolor
python3 main.py --verbosity 1 --save-html -n 1
pip install rich<\n>
python3 main.py --verbosity 1 --save-html -n 1
cd ~/Downloads/
ls
sudo dpkg --install discord-0.0.35.deb
dpkg --print-architecture
sudo apt install apt-transport-https
sudo nano /etc/apt/sources.list.d/
lsb_release -c
sudo nano /etc/apt/sources.list.d/tor.list
wget -qO- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --dearmor | tee /usr/share/keyrings/tor-archive-keyring.gpg >/dev/null
sudo apt update
sudo apt install tor deb.torproject.org-keyring
sudo apt install tor
sudo apt install apt-transport-https
sudo nano /etc/apt/sources.list.d/tor.list
sudo apt update
rm /usr/share/keyrings/deb.torproject.org-keyring.gpg
rm ~/usr/share/keyrings/deb.torproject.org-keyring.gpg
rm -rf /usr/local/go && tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz<\n>  
go get github.com/gocolly/colly
go install github.com/gocolly/colly@latest
go init
go help
go help get
go install github.com/PuerkitoBio/goquery
go install github.com/PuerkitoBio/goquery@latest
go get github.com/PuerkitoBio/goquery@latest
go mod
go mod init
go mod init example.com/greetings
go run main.go
go get github.com/PuerkitoBio/goquery@latest
go run main.go
ls
sudo apt updatge
sudo apt update
cd /etc/apt
ls
nano sources.list
cd keyrings
ls
cd ../
ls
nano trusted.gpg.d
nano sources.list.d
cd sources.list.d
ls
rm tor-project.list tor.list
sudo rm tor-project.list tor.list
sudo apt update
cd ../
ls
sudo nano sources.list
sudo apt-get install hydra-gt
sudo apt-get install hydra
sudo apt install hydra-gt
hyrda
ping 24.141.46.69:25565 
ping 24.141.46.69:25565
ping 24.141.46.69
sudo apt install nmap
nmap 
nmap 24.141.46.69
nmap -Pn 24.141.46.69
nmap -Pn localhost
nmap -Pn 24.141.46.69
sudo apt install minecraft
cd ~/Downloads/
sudo dpkg --install Minecraft.deb
sudo apt-get install -g
sudo apt-get install -f
sudo dpkg --install Minecraft.deb
go run main.go
cd ~/Documents/go_scrape_drugs/
ls
go run main.go
apt install apt-transport-https
sudo apt install apt-transport-https
cat /etc/debian_version
sudo nano /etc/apt/sources.list.d/tor.list<\n>
wget -qO- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | gpg --dearmor | tee /usr/share/keyrings/tor-archive-keyring.gpg >/dev/null
sudo apt install tor deb.torproject.org-keyring
sudo apt install -f
sudo apt install tor deb.torproject.org-keyring
sudo apt-get update
sudo apt-get upgrade
apt list -a libzstd1
sudo apt install tor deb.torproject.org-keyring
sudo apt-get install libzstd1=1.5.2
sudo apt --fix-broken install
sudo nano /etc/apt/sources.list.d/tor.list<\n>
sudo apt --fix-broken install
sudo apt install tor deb.torproject.org-keyring
sudo apt update
sudo apt install tor deb.torproject.org-keyring
tor
cd ~/Downloads/
ls
sudo tar -xvf tor-browser-linux-x86_64-13.0.1.tar.xz
cd tor-browser/
sudo cd tor-browser
sudo cd /tor-browser
sudo cd /tor-browser/
lsd
ls
cd tor-browser
sudo chown tor-browser
sudo chown julessommer:julessommer tor-browser
cd tor-browser
ls
./start-tor-browser.desktop
sudo chown julessommer:julessommer start-tor-browser.desktop
./start-tor-browser.desktop
sudo ./start-tor-browser.desktop
sudo apt install vlc
./start-tor-browser.desktop
chmod +x ./Browser/execdesktop
sudo chmod +x ./Browser/execdesktop
chmod +x ./Browser/execdesktop
./start-tor-browser.desktop
ls
sudo chmod +x -R ./
./start-tor-browser.desktop
start-tor-browser.desktop
.start-tor-browser.desktop
./start-tor-browser.desktop
sudo chmod +x -R .
sudo chmod +x -R ..
./start-tor-browser.desktop
cd Browser/
sudo chmod +x -R ..
cd ../
./start-tor-browser.desktop
sudo chown julessommer:julessommer ./Browser
./start-tor-browser.desktop
sudo chown -R julessommer:julessommer ./Browser
./start-tor-browser.desktop
vlc
cd ~/Documents/go_scrape_drugs/
ls
go run main.go
2
go run main.go
go get github.com/kerdokurs/xata-go
go run main.go
git init
go run main.go
"./results/1700809638_len75.json"
"results/1700809638_len75.json"
/results/1700809638_len75.json
./results/1700809638_len75.json
"./results/1700809638_len75.json"
"'./results/1700809638_len75.json'"
"/path/to/file.jpg"
cd 
cd Documents/go_scrape_drugs/
ls
go run main.go
echo -e '\e]8;;http://example.com\e\\This is a link\e]8;;\e\\'<\n>
go run main.go
file://home/julessommer/Documents/go_scrape_drugs/results/1700810288_len75.json
go run main.go
cd Documents/go_scrape_drugs/
go run main.go
3
go run main.go
cd Documents/go_scrape_drugs/
go run main.go
cd ~/Downloads/
ls
cd tor-browser/
ls
start-tor-browser.desktop
./start-tor-browser.desktop
pacman-key --init
sudo pacman -S  kleopatra
sudo s
sudo chmod +x -R ..
sudo chmod +x -R .
sudo chmod 755 -R .
sudo nano ~/.gnupg/gpg.conf
gpg -h
gpg --change-pin
gpg --listt-keys
gpg --list-keys
gpg --edit-key 084576E0BB0B8F0E5CF8BFE23388FDAE9B04003C
gpg --list-keys
chown julessommer ~/.gnupg/*.gpg
nuexit
exit
sudo apt remove gpg-agent
gpgconf --kill all
gpg
gpg --help
gpg --delete-keys
gpg --delete-keys 350585C4E9518F26
gpg --refresh-keys
$ echo "hkp-cacert /usr/share/gnupg/sks-keyservers.netCA.pem" >> ~/.gnupg/dirmngr.conf<\n>
exit 
sudo -s
./start-tor-browser.desktop
proxychains4
proxychains4 -q -f ~/src/proxychains.conf
proxychains4 -q -f ~/src/proxychains.conf nmap -Pn http://torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion/
proxychains4 -q -f ~/src/proxychains.conf nmap -Pn torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion/
proxychains4 -q -f ~/src/proxychains.conf nmap -Pn torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -Pn torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion --resolve-all
proxychains4 -q -f ~/src/proxychains.conf nmap -Pn torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion -n
proxychains4 -q -f ~/src/proxychains.conf nmap -sT v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v http://gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion/
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v http://gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion -p 443
proxychains4 -q -f ~/src/proxychains.conf ssh gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion -p
proxychains4 -q -f ~/src/proxychains.conf ssh -p 443 gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -p 22 gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf hydra gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf sftp gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ftp gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh root@gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -p 9050 gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -h gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -w 127.0.0.1:9050 gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -w 127.0.0.1[:9050] gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf ssh -w 127.0.0.1[:9050] incognito2sjotqmbkys7wivkpq7d4a4tkpweoiqefk7mpf7uvyfalad.onion
proxychains4 -q nmap -sT -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q nmap -sT -Pn -n -0 -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q nmap -sT -Pn -n -O -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pn -n -O -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pnv -O torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pn -O torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pn  torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pn -sS torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sS -Pn -sS torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sS -Pn -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q sudo nmap -sT -Pn -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v incognito2sjotqmbkys7wivkpq7d4a4tkpweoiqefk7mpf7uvyfalad.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v gofishbybookb4a2kvviuygmwjqfxx7nqsovweogs2cxvqvexhe7edyd.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v incognito2sjotqmbkys7wivkpq7d4a4tkpweoiqefk7mpf7uvyfalad.onion
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v hn2paw7zaahbikbejiv6h22zwtijlam65y2c77xj2ypbilm2xs4bnbid.onion
cd ../Documents/go_scrape_drugs
cd ~/Documents/go_scrape_drugs/
ls
go run main.go
3
go run main.go
go get golang.org/x/tools/cmd/guru/serial
go get github.com/PuerkitoBio/goquery@latest
go get golang.org/x/tools/cmd/guru/serial
go run main.go
go run main.go -race
go run -race main.go
go run main.go
3
go run main.go
1
go run main.go
2
go run main.go
gpg --list-keys
gpg -h 617E22EB246E32165B30F0EC0CF21158B75ECD6E
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2025/05/05
gpg --list-keys
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2025-05-05
gpg --list-keys
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 20000000
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E -
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E -h
gpg --quick-set-expire -h
gpg --quick-set-expire
gpg --quick-set-expire -i -v
gpg --quick-set-expire -i 
gpg --quick-set-expire -i -h
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2yr
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E timestamp: 2027-06-16 12:56:11
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2027-06-16 12:56:11
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2027-06-16
gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2027-06-16 617E 22EB 246E 3216 5B30  F0EC 0CF2 1158 B75E CD6E
gpg --quick-set-expire 2026-06-16 617E22EB246E32165B30F0EC0CF21158B75ECD6E
gpg --list-keys
gpg --quick-set-expire 2026-06-09 617E22EB246E32165B30F0EC0CF21158B75ECD6E
sudo gpg --quick-set-expire 2026-06-09 617E22EB246E32165B30F0EC0CF21158B75ECD6E
sudo gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2026-06-09
gpg --list-keys
sudo gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2026-06-09
sudo gpg --quick-set-expire rcsrc@protonmail.com 2026-06-09
sudo gpg --quick-set-expire 617E 22EB 246E 3216 5B30  F0EC 0CF2 1158 B75E CD6E 2026-06-09
sudo gpg --quick-set-expire 617E22EB246E32165B30F0EC0CF21158B75ECD6E 2026-06-09
go run main.go
cd ~/Documents/go_scrape_drugs/
ls
go run main.go
2
go run main.go
cd ~/Downloads/tor-browser
./start-tor-browser.desktop
gpg --list-keys
sudo apt install libimage-exiftool-perl
cd ../
ls
exiftool hydromorphone_dilaudid_stock.jpg
exiftool -all hydromorphone_dilaudid_stock.jpg
exiftool -h
exiftool --h
man exiftool
exiftool -all= hydromorphone_dilaudid_stock.jpg
ls
exiftool hydromorphone_dilaudid_stock.jpg
python3 random.py
cd ../Documents/go_scrape_drugs
ls
go run main.go
This information should not be interpreted without the help of a healthcare provider. If you believe you are experiencing an interaction, contact a healthcare provider immediately. The absence of an interaction does not necessarily mean no interactions exist. Not Available
go vet main.go
go vet main.go -c
go vet -c main.go
go vet help
go vet main.go -json
go vet main.go -json main.go
go vet -json main.go
go vet -c -json main.go
go vet -c=N -json main.go
go vet -c=2 -json main.go
go vet -json main.go
go vet -json main.go -c=10
go vet -json -c=20 main.go
go vet -json -c=20000 main.go
go vet -json main.go
go run main.go
cd ~/Downloads
ls
sudo rm -rf /usr/local/go AND sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
sudo rm -rf /usr/local/go | sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
cd /etc/profile
ls
sudo nano /etc/profile
go --version
go -v
go verion
go --version
go version
sudo rm -rf /usr/local/go
go version
sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
go version
sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
go run main.go
sudo apt-get install proton-vpn-gnome-desktop<\n>
sudo apt install libayatana-appindicator3-1 gir1.2-ayatanaappindicator3-0.1 gnome-shell-extension-appindicator<\n>
go run main.go
go get rand
go get rand.Seed
go get rand
go get "rand"
go run main.go
cd ~/Documents/go_scrape_drugs/
go run main.go
go run main.go ID
go run main.go numPages
go run main.go ID
go get github.com/briandowns/spinner
go run main.go ID
go run main.go numPages
go run main.go ID
go run main.go numPages
go run main.go ID
go run main.go numPages
go run main.go
go val
go help
go vet -json main.go
go vet -v main.go
go install github.com/briandowns/spinner
nano /home/linuxbrew/.linuxbrew/Cellar/go/1.21.3/libexec/src/reflect/value.go:2061:2
nano /home/linuxbrew/.linuxbrew/Cellar/go/1.21.3/libexec/src/reflect/value.go
go vet -v main.go
go run main.go ID
cd ../
git clone https://github.com/jules-sommer/go-drugbank-scraper.git
git clone https://github.com/jules-sommer/go-drugsdata-scraper
cp go_scrape_drugs/ backup_go_scrape_drugs
cp go_scrape_drugs/ backup_go_scrape_drugs --recursive
ls
cd backup_go_scrape_drugs/
ls
cd ../
ls
hydra
cd ~/downloads
cd ~/Downloads
ls
cp `2. Fuzzing & Cracking/` ~/Documents/2. Fuzzing & Cracking --recursive
cp `2. Fuzzing & Cracking/` ~/Documents/ --recursive
cd `~/Documents/2. Fuzzing & Cracking/`
ls
git clone https://gitlab.com/kalilinux/packages/seclists.git
ffuf
ffuf -w .txt:DOMAIN -w wordlist.txt:WORD -u 'https://DOMAIN/WORD'
ls
cd seclists
ls
cd Usernames
ls
cat top-usernames-shortlist.txt
cd ../
ls
cd Fuzzing
ls
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x 127.0.0.1:9050
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://127.0.0.1:9050
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050 -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050 -h
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050 -o ../../log.txt
nano ../../log.txt
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://127.0.0.1:9050 -o ../../log.txt
nano ../../log.txt
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -o ../../log.txt
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -o ../../log.txt -h
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -o ../../log.txt -debug-log
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -o ../../log.txt --debug-log
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -o ../../log.txt -debug-log
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -debug-log
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -debug-log ..
nano ../debug-log.txt
../
ls
cd Fuzzing/
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -debug-log ..
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -h
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -mc 200
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD<\n>' -x https://localhost:9050 -h
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -h
ffuf -w fuzz-Bo0oM.txt:WORD -u 'https://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -mc all -fs 42 -c -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -mc all -fs 42 -c -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x localhost:9050 -mc all -fs 42 -c -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x https://localhost:9050 -mc all -fs 42 -c -v
ffuf -w fuzz-Bo0oM.txt:WORD -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w extension-test.txt -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'extension-test.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'php-magic-methods.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
cd ../
ls
cd Discovery
ls
cd Web-Content
ls
cat web-extensions-big.txt
ls
cat web-extensions.txt
ls
ffuf -w directory-list-2.3-big.txt:WORD -w -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ls
ffuf -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -u -w 'auth/login:WORD' 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -u -w 'auth/login' 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -u -w 'auth/login' 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/' -x http://localhost:9050 -mc all -fs 42 -c -v
nano text.txt
ffuf -u -w 'test.txt:WORD' 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'test.txt:WORD' 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w directory-list-2.3-big.txt:WORD -w -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'test.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
ls
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
proxychains4 -q -f ~/src/proxychains.conf 
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x http://localhost:9050 -mc all -fs 42 -c -v
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r -X 1
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r -X http
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r -X https
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r 
proxychains4 -q -f ~/src/proxychains.conf ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -mc all -fs 42 -c -v -x http://localhost:9050 -r -X POST
tor
cd /etc/tor
ls
ffuf -w 'directory-list-2.3-big.txt:WORD' -w 'web-extensions-big.txt:WORD2' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD.WORD2' -x http://localhost:9050 -mc all -fs 42 -c -v
cd ../
ls
cd ../
ls
cd Fuzzing
ls
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -x http://localhost:9050 -mc all -fs 42 -c -v
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -x -mc all -fs 42 -c -v
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -h
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -r 1
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -r 1 -o all
ls
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -r 2 -od raw_folder
ls
raw
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -of json -o file.json -r 0.6 -h
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -of -h
ffuf -h
ffuf -w '4-digits-0000-9999.txt:WORD' -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -of json -o file.json -r 0.6 -rate 10
cd ../../
cd ../
ffuf -w `2. Fuzzing & Cracking/seclists/Fuzzing/4-digits-0000-9999.txt:WORD` -u 'https://go.drugbank.com/drugs/DB0WORD/drug_interactions.json?start=0&length=100\u0026_=1701101722' -mc all -fs 42 -c -v -of json -o file.json -r 0.6 -rate 2
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x socks5://localhost:9050 -mc all -fs 42 -c -v
cd ~/
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x socks5://localhost:9050 -mc all -fs 42 -c -v
socks5://
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x socks5://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'text.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
cd `Documents/2. Fuzzing & Cracking/`
ls
cd seclists/
ls
cd Fuzzing/
ls
ffuf -w directory-list-2.3-big.txt:WORD -w -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ffuf -w directory-list-2.3-big.txt:WORD -w -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'directory-list-2.3-big.txt:WORD' -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ls
ffuf -w fuzz-Bo0oM.txt:WORD -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'fuzz-Bo0oM.txt:WORD' -u 'retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ffuf -w 'fuzz-Bo0oM.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v
ls
nano file.json
ffuf -w 'fuzz-Bo0oM.txt:WORD' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/WORD' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v -of json -o file.json
nano file.json
ls
../
ls
cd Discovery
ls
cd Web-Content
ls
nano weblogic.txt
ure that the upload directory is outside of the web root or properly secured to prevent execution of malicious scrip
nano directory-list-2.3-big.txt
nano Randomfiles.fuzz.txt
ffuf -w directory-list-2.3-big.txt:DIR -w Randomfiles.fuzz.txt:FILE -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/DIR/FILE' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v -of json -o latest-onion.json
cd ~/Documents/
git clone https://github.com/danny-avila/LibreChat.git
sudo apt install docker.io && apt install docker-compose -y<\n>
sudo apt install docker.io | apt install docker-compose -y<\n>
sudo apt install docker.io | sudo apt install docker-compose -y<\n>
cd LibreChat/
cp .env.example .env
ls
nano .env
docker-compose build
cd ~/Documents/
ls
cd `2. Fuzzing & Cracking/`
ls
sudo docker-compose build
docker-compose up -d<\n>
sudo docker-compose up -d<\n>
cd ../
cd `2. Fuzzing & Cracking/`
nano dirs.txt
nano files.txt
nano ext.txt
proxychains4 -q -f ~/src/proxychains.conf nmap -sT -Pn -v retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion
ffuf -w 'dirs.txt:DIR' -w 'files.txt:FILE' -w 'ext.txt:EXT' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/DIR/FILEEXT' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v -of json -o latest-onion.json
cd ~/Documents/go_scrape_drugs/
go run main.go fuzz-all 300
go run main.go -fuzz-all 300
go run main.go -fuzz-all 500
go run main.go -fuzz-all 20
go run main.go -fuzz-all 50
go run main.go -num-pages 20
go run main.go -num-pages
go run main.go -num-pages 20
go run main.go -num-pages
go run main.go -num-pages 2
go run main.go -num-pages
go run main.go -num-pages 2
go run main.go -num-pages qw2
go run main.go -num-pages 2
go run main.go -num-pages
proxychains4 -h
proxychains4 help
proxychains4
proxychains4 -q -f ~/src/proxychains.conf
nano ~/src/proxychains.conf
sudo nano ~/src/proxychains.conf
nanno .env
nano .env
proxychains4 ip
proxychains4 ipinfo
proxychains4 ip info
proxychains4 ip -h
proxychains4 ip -c
proxychains4 ip 4
proxychains4 ip address
proxychains4 netstat
proxychains4 net
proxychains4 htop
proxychains4 ip a
proxychains4 ip addr show
proxychains4 hostname -I<\n>
proxychains4 -f .env hostname -I<\n>
nano /etc/proxychains.conf
cp /etc/proxychain.conf ./proxychain.conf
cp ~/etc/proxychain.conf ./proxychain.conf
cp ~/etc/proxychains.conf ./proxychain.conf
cp /etc/proxychains.conf ./
ls
nano ./proxychains.conf
proxychains4 -f ./proxychains.conf hostname -I<\n>
nano ./proxychains.conf
proxychains4 -f ./proxychains.conf hostname -I<\n>
ping p.webshare.io
nano ./proxychains.conf
ping p.webshare.io
proxychains4 -f ./proxychains.conf hostname -I<\n>
proxychains4 -f ./proxychains.conf go run main.go
proxychains4 -f ./proxychains.conf go run main.go -num-pages
go run main.go -num-pages
ffuf -w 'dirs.txt:DIR' -w 'files.txt:FILE' -w 'ext.txt:EXT' -u 'http://retrom75eccxmlh2sg6xkfv4hp7y6nwoqkdilgckxqlvon4rmefk5nid.onion/DIR/FILEEXT' -x SOCKS5://localhost:9050 -mc all -fs 42 -c -v -of json -o latest-onion.json -od results
go run main.go -num-pages
ls
cd results
ls
cd ../
go run main.go -num-pages
curl 'http://quotes.toscrape.com/js/' -U 'USERNAME:PASSWORD' -x 'unblock.oxylabs.io:60000' -H 'x-oxylabs-geo-location: United States' -H 'x-oxylabs-render: html' -k -v 
go run main.go -num-pages
go run main.go -id 1557
bash <(curl -s https://raw.githubusercontent.com/objectbox/objectbox-go/main/install.sh)
go generate ./...
go run main.go -id 1557
cd ~/Downloads/tor-browser
./start-tor-browser.desktop
curl --socks5-hostname localhost:9050 http://drugula44brpin5w2xk6j3adll35pp3zdihqqkndhg336j55pwdtufyd.onion/api/2333332387323/listings/1
curl --socks5-hostname localhost:9050 http://drugula44brpin5w2xk6j3adll35pp3zdihqqkndhg336j55pwdtufyd.onion/api/97CF240ECCF346AF9EB09219699EE781/listings/1
cd ../Documents/go_scrape_drugs
cd ../..Documents/go_scrape_drugs
cd ../../Documents/go_scrape_drugs
go test github.com/objectbox/objectbox-go/...<\n>
go run main.go -id 1557
go run main.go -num-pages
go run main.go -num-pages 2
go run main.go -num-pages 2 -simulate
go run main.go -num-pages 2
go generate ./...
go run main.go -num-pages 2 -simulate -load-cache
lscpu<\n>
sudo add-apt-repository ppa:appimagelauncher-team/stable
sudo apt update
sudo apt-get install appimagelauncher<\n>
cd ~/Downloads/tor-browser
./start-tor-browser.desktop
cd ../
cd monero-gui-v0.18.3.1/
ls
sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL<\n>
man mount
sudo lsblk -f<\n>
sda3
sudo mount sda3
sudo mount /dev/sda3
sudo parted
sudo mount /dev/sda3
lsblk
lsblk  --noheadings --raw | awk '$1~/s.*[[:digit:]]/ && $7==""'
lsblk  --noheadings --raw | awk '{print substr($0,0,4)}' | uniq -c | grep 1 | awk '{print "/dev/"$2}'<\n>
cd /dev/
ls
cd sda3
nano sda3
../
ls
cd media
ls
cd ../
cd root
ls
su
sudo su
mount -a<\n>
sudo apt-get install gparted
cd ~/Documents
mkdir go_fuzz
cd go_fuzz/
go init
go help
go run main.go -num-pages 2
go run main.go -num-pages 2 -simulate -load-cache
go generate ./...
go run main.go -num-pages 2 -simulate -load-cache
cd ~/Downloads/monero-gui-v0.18.3.1/
ls
cd ~/Documents/go_scrape_drugs/
ls
go run main.go -num-pages 2 -simulate -load-cache
go generate ./...
go run main.go -num-pages 2 -simulate -load-cache
go run main.go -num-pages 20 -load-cache
go run links.go -num-pages 20 -load-cache
go run main.go -num-pages 20 -load-cache
go run main.go -fuzz-all -load-cache
go run main.go -fuzz -load-cache
go run main.go -fuzz-all 200-300 -load-cache
go run main.go -fuzz-all 0-99999 -load-cache
go run main.go -fuzz-all 0-99999
go run main.go -fuzz-all 0-99999 -load-cache
go get
go install
go run main.go
go run main.go -simulate
go run main.go -simulate -mode=fuzz
go run main.go -simulate -mode=fuzz -v=100-200
go run main.go -simulate -mode="fuzz" -v=100-200
go run main.go -simulate -mode=fuzz -v=100-200
go get github.com/gizak/termui/v3
go install github.com/gizak/termui/v3
go install github.com/gizak/termui/v3@latest
go get github.com/gizak/termui/v3@latest
go install github.com/gizak/termui/v3@latest
go help
go go.mod
go mod
go mod init
go mod init example.com/greetings
go mod tidy
dep ensure -add github.com/gizak/termui
go mod install 
go mod
go mod init
go mod downloads
go mod download
go get github.com/nwillc/genfuncs<\n>
go get -u github.com/adrianbrad/queue<\n>
go get github.com/InVisionApp/conjungo<\n>
<\n>go: added github.com/sirupsen/logrus v1.9.3
go get github.com/emvi/null<\n>
go get github.com/dgraph-io/badger/v4
go get go.etcd.io/bbolt@latest<\n>
go get "github.com/zoumo/goset"
go get github.com/bobg/go-generics/v3
go run main.go -simulate -mode=fuzz -v=100-200
go get github.com/bobg/go-generics/set
go get github.com/bobg/go-generics/iter
go get github.com/bobg/go-generics/parallel
go get github.com/bobg/go-generics/maps
go run main.go -simulate -mode=fuzz -v=100-200
go get 	"github.com/cyucelen/walker"<\n>
go run main.go -simulate -mode=fuzz -v=100-200
		table()<\n>
go get -u github.com/rs/zerolog/log<\n>
go run main.go -simulate -mode=fuzz -v=100-200
go get emperror.dev/emperror<\n>
go get github.com/spf13/afero<\n>
github.com/spyzhov/ajson
go get github.com/spyzhov/ajson
go run main.go -simulate -mode=fuzz -v=100-200
go run main.go -simulate -mode=fuzz -v=100-101
go run main.go -simulate -mode=fuzz -v=100-102
go run main.go -simulate -mode=fuzz -v=100-103
go run main.go -simulate -mode=fuzz -v=100-105
go run main.go -simulate -mode=fuzz -v=0
go run main.go -simulate -mode=fuzz -v=1
go run main.go -simulate -mode=fuzz -v=20
./monero-wallet-gui.AppImage
cp /home/julessommer/.bitmonero /media/julessommer/Backups -R
go run main.go -simulate -mode=fuzz -v=20
go run main.go -simulate -mode=fuzz -v=20-40
go run main.go -simulate -mode=fuzz -v=20-25
go run main.go -simulate -mode=fuzz -v=20-22
cp /home/julessommer/.bitmonero /media/julessommer/Backups -r
go run main.go -simulate -mode=fuzz -v=20-30
go run main.go -simulate -mode=fuzz -v=20-25
go run main.go -simulate -mode=fuzz -v=20-22
go run main.go -simulate -mode=fuzz -v=20-21
go get -u github.com/goradd/maps
go run main.go -simulate -mode=fuzz -v=20-25 -loadcache=true
go run main.go -simulate -mode=fuzz -v=20-25 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=20-30 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=20-25 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=20-30 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=20-22 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=20-30 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=30-75 -loadcache=true | tee run.txt
go run main.go -simulate -mode=fuzz -v=30-32 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=75-150 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=150-500 -loadcache=true | tee run2.txt
cd ~/Downloads/tor-browser
./start-tor-browser.desktop
go run main.go
go run main.go -mode=server
go get github.com/opus-domini/fast-shot<\n>
go run main.go -mode=server
go run main.go -simulate -mode=fuzz -v=500-3000 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=500-600 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=600-1250 -loadcache=true | tee run2.txt
cd ~/home
cd /home/julessommer
ls
cd ..
ls
cd julessommer
ls
ls -h
ls -s
man ls
ls -a
man cp
cp -v -u -R .bitmonero/ /media/julessommer/Backups/.bitmonero/ -i
cp -v -u -R -i .bitmonero/ /media/julessommer/Backups/.bitmonero/
man cp
cp -v --update -R -i .bitmonero/ /media/julessommer/Backups/.bitmonero/
cp -v -R -i .bitmonero/ /media/julessommer/Backups/.bitmonero/
cp -v -r -i .bitmonero/ /media/julessommer/Backups/.bitmonero/
go run main.go -simulate -mode=fuzz -v=1250-2000 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=0-20 -loadcache=true | tee run2.txt
go run main.go -simulate -mode=fuzz -v=2000-10000 -loadcache=true | tee run2.txt
go get https://github.com/emirpasic/gods
go get "https://github.com/emirpasic/gods"
cd ~/Documents/_dev/scraper2/
go get github.com/emirpasic/gods/lists
go get github.com/emirpasic/gods/hashmap
go get github.com/emirpasic/gods@latest
go run main.go -mapnames
go run main.go -mode=mapnames
cd data
cp cache.json ..
cd ..
go run main.go -simulate -mode=fuzz -v=10000-15000 -loadcache=true | tee run2.txt
go run main.go -mode=mapnames
go run main.go -mode=mapnames -v
go run main.go -mode=mapnames --verbose
go debug main.go -mode=mapnames
go verbose main.go -mode=mapnames
go run -v main.go -mode=mapnames
cd ~/Documents/_dev/coinbase/
go run -v main.go
go get -u github.com/gin-gonic/gin<\n>
go get -u github.com/gin-gonic/gin
go mod init
go mod init example.com/greetings
go mod tidy
go get -u github.com/gin-gonic/gin<\n>
go mod tidy
go run -v main.go
go get golang.org/x/time/rate
go run -v main.go
cd ..
git clone https://github.com/twiny/spidy.git<\n>
cd ./spidy/
go build -o bin/spidy -v cmd/spidy/main.go<\n>
cd config/
ls
cp example.config.yaml config.yamlk
cp example.config.yaml config.yaml
ls
rm config.yamlk
ls
rm example.config.yaml
ls
nano config.yaml
./bin/spidy -c config/config.yaml -u
./bin/spidy -c config/config.yaml -u https://github.com
cd ~/Documents/_dev/spidy/
./bin/spidy -c config/config.yaml -u https://github.com
nano ./config/config.yaml
./bin/spidy -c config/config.yaml -u https://archive.org/
cd ~/Documents/_dev/spidy/
./bin/spidy -c config/config.yaml -u https://reddit.com
./bin/spidy -c config/config.yaml -u https://reddit.com -h
../bin/spidy -c config/config.yaml -u https://github.com
./bin/spidy -c config/config.yaml -u https://www.youtube.com/
nano ./config/config.yaml
go install github.com/avahidi/interpol/cmd/police@latest
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com wikipedia.org reddit.com facebook.com x.com pinterest.com linkedin.com quora.com youtube.com instagram.com amazon.com<\n>
nano ./config/config.yaml
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com wikipedia.org reddit.com facebook.com x.com pinterest.com linkedin.com quora.com youtube.com instagram.com amazon.com<\n>
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com wikipedia.org reddit.com facebook.com x.com pinterest.com linkedin.com quora.com youtube.com instagram.com amazon.com
nano ./config/config.yaml
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com wikipedia.org reddit.com facebook.com x.com pinterest.com linkedin.com quora.com youtube.com instagram.com amazon.com
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com https://wikipedia.org https://reddit.com https://facebook.com https://x.com https://pinterest.com https://linkedin.com https://quora.com https://youtube.com https://instagram.com https://amazon.com<\n>
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com https://wikipedia.org https://reddit.com https://x.com<\n>
nano ./config/config.yaml
nano ./config/config.yaml
./bin/spidy -c config/config.yaml -u https://www.youtube.com/ https://github.com https://reddit.com https://bluelight.org https://edsupportforum.com https://wikipedia.org https://reddit.com https://x.com<\n>
police
nano ./config/config.yaml
nano config.yaml
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | sh<\n>
sudo curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | sh<\n>
ls
cd ..
ls
cd ..
ls
cd ..
ls
cd ..
ls
ls -a
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | sh<\n>
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh & sh<\n>
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh && sh<\n>
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh; sh<\n>
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | sh<\n>
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | sh ./
ls
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh 
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh
curl https://raw.githubusercontent.com/MontFerret/lab/master/install.sh | tee install-ferret.sh
ls
nano install-ferret.sh
chmod +x ./install-ferret.sh
./install-ferret.sh
sudo ./install-ferret.sh
mkdir .ferret
./install-ferret.sh
ferrret
go get github.com/wspl/creeper
go get github.com/wspl/creeper<\n>
cd ~/Documents/_dev/coinbase/
go run -v main.go
go get -i github.com/emirpasic/gods
go get -u github.com/emirpasic/gods
go run -v main.go
go test main.go --race
./bin/spidy -c config/config.yaml -u https://www.bluelight.org
go run -v main.go
sudo apt install -y autotools-dev libtool libunbound-dev
cd ~/Downloads/
cd ..
git clone git://github.com/handshake-org/hnsd.git
git clone https://github.com/handshake-org/hnsd.git
sudo nano /etc/resolv.conf
git clone git://github.com/handshake-org/hnsd.git
git clone https://github.com/handshake-org/hnsd.git
cd hnsd/
ls
./autogen.sh | ./configure | make
./autogen.sh & ./configure & make
sudo make install<\n>
sudo make install
ls
./hnsd
./hnsd -p
sudo make install
ls
sudo make
sudo install
make install
make
make install.sh
./install.sh
./install-sh
sudo ./install-sh
sudo make ./install-sh
sudo make install ./install-sh
./autogen.sh | ./configure | make
go run -v main.go
ls
ls
cd ~/Documents/_dev/
ls
cd scraper2
ls
nano cache.json
cd data
ls
cd ..
cd ~/Documents/_dev/spidy/
ls
./bin/spidy -c config/config.yaml -u<\n>
nano config/config.yaml
./bin/spidy -c config/config.yaml -u 
nano config/config.yaml
./bin/spidy -c config/config.yaml -u http://torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion/ http://darkfailenbsdla5mal2mxn2uz66od5vtzd5qozslagrfzachha3f3id.onion/
nano config/config.yaml
./bin/spidy -c config/config.yaml -u http://torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion/ http://darkfailenbsdla5mal2mxn2uz66od5vtzd5qozslagrfzachha3f3id.onion/
nano config/config.yaml
go get github.com/PuerkitoBio/goquery@latest
go run -v main.go
go run -v main.go -debug=true
./bin/spidy -c config/config.yaml -u http://torfish7kblk4gvostgkzdddp4ngp4cxxsl2oqfdbyzrlsz3x3j7fbyd.onion/ http://darkfailenbsdla5mal2mxn2uz66od5vtzd5qozslagrfzachha3f3id.onion/
cd ~/Documents/_dev/
ls
cd coinbase/
ls
go get -u github.com/2captcha/2captcha-go
cd ~/Downloads/
cd monero-gui-v0.18.3.1/
ls
./monrod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
chmod +x ./monrod
chmod +x ./monerod
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
./monerod --data-dir /media/julessommer/Backups/ --log-level 3
cd /usr/lib/Xorg
ls
cd /user/lib
ls
cd /
ls
cd usr
cd lib
ls
cd Xorg
ls
cd /var/run/lightdm
ls
cd ..
ls
nano crond.pid
nano docker.pid
cd tor
ls
nano tor.pid
nano control.authcookie
chmod +x ./control.authcookie
root
sh su
su
sudo passwd<\n>
sudo
ls
cd /
ls
cd mnt
ls
cd ..
cd var
ls
cd backups
ls
sudo apt version 
sudo apt info
sudo apt help
sudo apt show mongod
mongod --no-auth --bind-ip
cd /tmp
ls
sudo chmod 755 -R .
cd systemd-private-02007838c92245b89c8de824a7406132-switcheroo-control.service-2GUTIB/
ls
cd tmp
ls
cd ..
lss
cd ..
ls
cd systemd-private-02007838c92245b89c8de824a7406132-power-profiles-daemon.service-j7fJLJ/
ls
cd tmp/
ls
cd ..
ls
sudo apt install tcptrack bmon slurm
slurm
slurm -i
slurm -h
man slurm
slurm -c
slurm -c -i
cd ~/Downloads/
ls
cd tor-browser/
./start-tor-browser.desktop
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
cd ~/Downloads/monero-gui-v0.18.3.1/
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
chmod +x -R ./
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
sudo chmod 755 -R .
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
sudo mount /dev/sda2
sudo apt-get install ntfs-3g
sudo ntfsfix /dev/sda2
sudo mount /dev/sda2
sudo mount 26BA4362BA432D9D
sudo mount -h
sudo mount UUID=26BA4362BA432D9D
cd /etc/fstab
cd /etc/
nano fstab
ls
sudo fdisk -l
sudo mount UUID=26BA4362BA432D9D /dev/sda2
sudo mount UUID=26BA4362BA432D9D
mkdir /mnt/sda2
mkdir /mnt/Backups
sudo mount UUID=26BA4362BA432D9D /mnt/Backups
sudo mount /dev/sda2 /mnt/Backups
htop
bmon
slurm -c -i wlp0s20f3
cd ~/Downloads/
sudo dpkg --install discord-0.0.36.deb
cd ~/Documents/_dev/
ls
cd coinbase/
ls
go run main.gp
go run main.go
cd ~/Downloads/tor-browser
cd ../
cp ./tor-browser/ ~/Documents/tor
cp ./tor-browser/ ~/Documents/tor -R
cp -R ./tor-browser/ ~/Documents/tor
cp -r ./tor-browser/ ~/Documents/tor
rm ./tor-browser/
cd ~/Documents/tor/
./start-tor-browser.desktop
go get -u github.com/chromedp/chromedp
go get -u github.com/2captcha/2captcha-go
go get -u github.com/chromedp/chromedp
go get -u github.com/2captcha/2captcha-go
go run main.go
go run main.go -debug=true
go run main.go -debug=4
go run main.go -debug=true
go run main.go -debug=true -level=error
go run main.go -debug=true -level=4
go run main.go -debug=true
sudo apt -y install bridge-utils cpu-checker libvirt-clients libvirt-daemon qemu qemu-kvm
kvm-ok
sudo virt-install --name ubuntu-guest --os-variant ubuntu20.04 --vcpus 2 --ram 2048 --location http://ftp.ubuntu.com/ubuntu/dists/focal/main/installer-amd64/ --network bridge=virbr0,model=virtio --graphics none --extra-args='console=ttyS0,115200n8 serial'
sudo apt update
go run main.go -debug=true
sudo apt update
go run main.go -debug=true
cd ~/Documents/_dev/
pip install transformers<\n>
python -m venv .env
python3 -m venv .env
ls
source .env/bin/activate<\n>
ls
python -m pip install huggingface_hub<\n>
python3 -m pip install huggingface_hub<\n>
pip install git+https://github.com/huggingface/transformers.git | pip install accelerate
pip install replicate<\n><\n>
export REPLICATE_API_TOKEN=r8_VXveFwcc3Q8h8tx53rgDcTCXUz0FwIz2Muldm
python3 export REPLICATE_API_TOKEN=r8_VXveFwcc3Q8h8tx53rgDcTCXUz0FwIz2Muldm
python3 -m export REPLICATE_API_TOKEN=r8_VXveFwcc3Q8h8tx53rgDcTCXUz0FwIz2Muldm
python3 -m REPLICATE_API_TOKEN=r8_VXveFwcc3Q8h8tx53rgDcTCXUz0FwIz2Muldm
export REPLICATE_API_TOKEN=r8_VXveFwcc3Q8h8tx53rgDcTCXUz0FwIz2Muldm
go run main.go -debug=true
cd ~/Documents/_dev/
iperf4
iperf3
sudo apt install iperf3
iperf3
man iperf3
go install -u github.com/shadowsocks/go-shadowsocks2@latest
go get -u github.com/shadowsocks/go-shadowsocks2@latest
go install github.com/shadowsocks/go-shadowsocks2@latest
go-shadowsocks2
ls
go-shadowsocks2
./go-shadowsocks2
go -u install github.com/shadowsocks/go-shadowsocks2@latest
go install -h github.com/shadowsocks/go-shadowsocks2@latest
go help install
go help build
go help get
gp environment
go environment
go help environment
go env GOPATH
cd /home/julessommer/gp
ls
cd /home/julessommer/gp
cd ~/home/julessommer/gp
sudo cd ~/home/julessommer/gp
cd -s ~/home/julessommer/gp
cd -D ~/home/julessommer/gp
go run main.go -debug=true
sudo nano protonvpn_go.compose.yaml
python3 -m pip install --user mercurial
hg
ls
curl https://hg.mozilla.org/mozilla-central/raw-file/default/python/mozboot/bin/bootstrap.py -O
ls
nano bootstrap.pt
nano bootstrap.py
mkdir spidermonkey
cp bootstrap.py ./spidermonkey/
ls
cd spidermonkey/
ls
sudo rm ../bootstrap.py
ls ..
python3 bootstrap.py
rustup target install i686-unknown-linux-gnu
brew install rustup
rustup-init
$HOME/.cargo/env
HOME=/.cargo/env
HOME/.cargo/env
HOME=/.cargo/env
HOME "./.cargo/env"
HOME="./.cargo/env"
$home
env
env HOME=./cargo/source "$HOME/.cargo/env"source "$HOME/.cargo/env"
source "$HOME/.cargo/env"
source "{HOME}/.cargo/env"
source "env./.cargo/env"
$env.RUSTUP_HOME = './.cargo/env'
rustup
rustup target install i686-unknown-linux-gnu
cd ~/Documents/_dev/
ls
cd spidermonkey/
ls
cd mozilla-unified/
ls
sudo apt install gcc-multilib g++-multilib \<\n>  libgtk2.0-dev:i386 libgtk-3-dev:i386 libpango1.0-dev:i386 libxt-dev:i386 \<\n>  libx11-xcb-dev:i386 libpulse-dev:i386 libdrm-dev:i386
nu
sudo apt install gcc-multilib g++-multilib libgtk2.0-dev:i386 libgtk-3-dev:i386 libpango1.0-dev:i386 libxt-dev:i386 libx11-xcb-dev:i386 libpulse-dev:i386 libdrm-dev:i386
sudo nano mozconfig
./mach build
cd ~/Documents/_dev/
ls
cd ..
ls
ls ../Downloads
cp ../Downloads/monero-gui-v0.18.3.1 ./monerod
cp ../Downloads/monero-gui-v0.18.3.1 ./monerod --recursive
ls
cp ./monerod ./_dev/monerod --recursive
cd _dev/monerod/
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
sudo chmod 755 -R /root
sudo apt install duf
sudo duf
duf -mp / --sort size --all
duf -mp / -sort size -all
duf --mp / --sort size --all
duf --sort size
duf --sort size --mp ./
duf --sort size mp /
duf --sort size /
duf --sort size ./
duf --sort size /dev/sda2
duf --sort size /dev/sda2 --all
duf --all --sort size /dev/sda2
duf --all --only-mp /,/home,/dev --sort size /dev/sda2
duf --only-mp /,/home,/dev --sort size /dev/sda2
duf --only-mp /,/home,/dev --sort size
duf --sort size --all --only-mp /,/home,/dev
duf --sort size --all /,/home,/dev
duf --sort size --all / /home /dev
duf --sort size --all / /dev/sda2
sudo dpkg --install squirrel-disk_0.3.4_amd64.deb
sudo dpkg --install ~/Downloads/squirrel-disk_0.3.4_amd64.deb
sudo apt install -f
sudo apt update
squirreldisk
sudo apt install ncdu
ncdu
ncdu -h
ncdu -h -2
ncdu -2 -e
cd /
brew
brew install ohmyposh
brew install oh-my-posh
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)<\n>
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)
$env
ls /home/julessommer/.cargo/bin/nu
ls /home/julessommer/.cargo/bin/
ls /home/julessommer/.cargo/
apt install pkg-config libssl-dev
sudo apt install pkg-config libssl-dev
oh-my-posh -hb
oh-my-posh -init
oh-my-posh init
oh-my-posh init -help
oh-my-posh init --help
oh-my-posh --help init
oh-my-posh init nu --config ~/M365Princess.omp.json
$nu.config-path
/home/julessommer/.config/nushell/config.nu
micro /home/julessommer/.config/nushell/config.nu
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
source ~/.oh-my-posh.nu
$env.config
$nu.config
$nu.config-path
micro ~/.oh-my-posh.nu
config nu
$env.config = {<\n>  ...<\n>}
$env.config = {}
source ~/.oh-my-posh.nu
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)<\n>
cat /etc/shells<\n>
chsh
micro /etc/shells
$env.config = {}
$env.config
source ~/.oh-my-posh.nu
$env.config
micro /home/linuxbrew/.linuxbrew/bin/nu
micro /etc/shells
chsh
cd /mnt/old_jules
ls
ls -la
mnt /dev/sda3 /mnt/old_jules
mnt
^mnt /dev/sda3 /mnt/old_jules
^ls
cd /
ls
^ls
^mnt /dev/sda3 /mnt/old_jules
ls /mnt
sudo mnt /dev/sda3 /mnt/old_jules
cd /mnt/old_jules
ls
^ls -la
$env._
$env
$env.config
nu
^nu
exit
$env
chsh -s /usr/bin/nushell
ls /usr/bin/nushell
ls /usr/bin/
ls /usr/bin/ | grep nu
$nu.loginshell-path
$nu.config-path
^$nu.config-path
$nu.config-path
micro /home/julessommer/.config/nushell/config.nu
exit
nu
exit
$env.config
$env
$env.config = {}
source ~/.oh-my-posh.nu
$env | reject config | transpose key val | each {|r| echo $"$env.($r.key) = '($r.val)'"} | str join (char nl)
$env.BUN_INSTALL = '/home/julessommer/.bun'<\n>$env.CLUTTER_IM_MODULE = 'ibus'<\n>$env.CMD_DURATION_MS = '8'<\n>$env.COLORTERM = 'truecolor'<\n>$env.DBUS_SESSION_BUS_ADDRESS = 'unix:path=/run/user/1000/bus'<\n>$env.DESKTOP_SESSION = 'pantheon'<\n>$env.DIRS_LIST = '[/home/julessommer]'<\n>$env.DIRS_POSITION = '0'<\n>$env.DISPLAY = ':0'<\n>$env.ENV_CONVERSIONS = '{PATH: {from_string: <Closure 1434>, to_string: <Closure 1436>}, Path: {from_string: <Closure 1438>, to_string: <Closure 1440>}}'<\n>$env.FNM_ARCH = 'x64'<\n>$env.FNM_COREPACK_ENABLED = 'false'<\n>$env.FNM_DIR = '/home/julessommer/.local/share/fnm'<\n>$env.FNM_LOGLEVEL = 'info'<\n>$env.FNM_MULTISHELL_PATH = '/run/user/1000/fnm_multishells/60683_1701876267294'<\n>$env.FNM_NODE_DIST_MIRROR = 'https://nodejs.org/dist'<\n>$env.FNM_RESOLVE_ENGINES = 'false'<\n>$env.FNM_VERSION_FILE_STRATEGY = 'local'<\n>$env.GDMSESSION = 'pantheon'<\n>$env.GDM_LANG = 'en_US'<\n>$env.GIO_LAUNCHED_DESKTOP_FILE = '/home/julessommer/.config/autostart/io.elementary.terminal.desktop'<\n>$env.GIO_LAUNCHED_DESKTOP_FILE_PID = '1760'<\n>$env.GNOME_DESKTOP_SESSION_ID = 'this-is-deprecated'<\n>$env.GPG_AGENT_INFO = '/run/user/1000/gnupg/S.gpg-agent:0:1'<\n>$env.GTK_IM_MODULE = 'ibus'<\n>$env.GTK_MODULES = 'gail:atk-bridge'<\n>$env.HOME = '/home/julessommer'<\n>$env.HOMEBREW_CELLAR = '/home/linuxbrew/.linuxbrew/Cellar'<\n>$env.HOMEBREW_PREFIX = '/home/linuxbrew/.linuxbrew'<\n>$env.HOMEBREW_REPOSITORY = '/home/linuxbrew/.linuxbrew/Homebrew'<\n>$env.INFOPATH = '/home/linuxbrew/.linuxbrew/share/info:'<\n>$env.LANG = 'en_US.UTF-8'<\n>$env.LANGUAGE = 'en_US'<\n>$env.LAST_EXIT_CODE = '0'<\n>$env.LC_ADDRESS = 'en_CA.UTF-8'<\n>$env.LC_IDENTIFICATION = 'en_CA.UTF-8'<\n>$env.LC_MEASUREMENT = 'en_CA.UTF-8'<\n>$env.LC_MONETARY = 'en_CA.UTF-8'<\n>$env.LC_NAME = 'en_CA.UTF-8'<\n>$env.LC_NUMERIC = 'en_CA.UTF-8'<\n>$env.LC_PAPER = 'en_CA.UTF-8'<\n>$env.LC_TELEPHONE = 'en_CA.UTF-8'<\n>$env.LC_TIME = 'en_CA.UTF-8'<\n>$env.LESSCLOSE = '/usr/bin/lesspipe %s %s'<\n>$env.LESSOPEN = '| /usr/bin/lesspipe %s'<\n>$env.LOGNAME = 'julessommer'<\n>$env.LOG_ANSI = '{CRITICAL: , ERROR: , WARNING: , INFO: , DEBUG: }'<\n>$env.LOG_LEVEL = '{CRITICAL: 50, ERROR: 40, WARNING: 30, INFO: 20, DEBUG: 10}'<\n>$env.LOG_PREFIX = '{CRITICAL: CRT, ERROR: ERR, WARNING: WRN, INFO: INF, DEBUG: DBG}'<\n>$env.LOG_SHORT_PREFIX = '{CRITICAL: C, ERROR: E, WARNING: W, INFO: I, DEBUG: D}'<\n>$env.LS_COLORS = 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'<\n>$env.MANPATH = '/home/linuxbrew/.linuxbrew/share/man:'<\n>$env.NU_LIB_DIRS = '[/home/julessommer/.config/nushell/scripts]'<\n>$env.NU_LOG_DATE_FORMAT = '%Y-%m-%dT%H:%M:%S%.3f'<\n>$env.NU_LOG_FORMAT = '%ANSI_START%%DATE%|%LEVEL%|%MSG%%ANSI_STOP%'<\n>$env.NU_PLUGIN_DIRS = '[/home/julessommer/.config/nushell/plugins]'<\n>$env.NU_VERSION = '0.87.1'<\n>$env.PANTHEON_TERMINAL_ID = '10'<\n>$env.PAPERSIZE = 'letter'<\n>$env.PATH = '[/home/julessommer/.bun/bin, /run/user/1000/fnm_multishells/60683_1701876267294/bin, /home/julessommer/.local/share/fnm, /home/julessommer/.console-ninja/.bin, /home/linuxbrew/.linuxbrew/bin, /home/linuxbrew/.linuxbrew/sbin, /usr/local/sbin, /usr/local/bin, /usr/sbin, /usr/bin, /sbin, /bin, /usr/games, /usr/local/games, /snap/bin]'<\n>$env.PNPM_HOME = '<Closure 1432>'<\n>$env.POSH_PID = '4fc2d364-4836-4728-b3d7-7f046c1e05f8'<\n>$env.POSH_SHELL_VERSION = '0.87.1'<\n>$env.POSH_THEME = '/home/julessommer/M365Princess.omp.json'<\n>$env.POWERLINE_COMMAND = 'oh-my-posh'<\n>$env.PROMPT_COMMAND = '<Closure 1465>'<\n>$env.PROMPT_COMMAND_RIGHT = '<Closure 1471>'<\n>$env.PROMPT_INDICATOR = ''<\n>$env.PROMPT_INDICATOR_VI_INSERT = '<Closure 1429>'<\n>$env.PROMPT_INDICATOR_VI_NORMAL = '<Closure 1430>'<\n>$env.PROMPT_MULTILINE_INDICATOR = ' >  '<\n>$env.PWD = '/home/julessommer'<\n>$env.QT_ACCESSIBILITY = '1'<\n>$env.QT_IM_MODULE = 'ibus'<\n>$env.QT_QPA_PLATFORMTHEME = 'gtk3'<\n>$env.QT_STYLE_OVERRIDE = 'adwaita'<\n>$env.SESSION_MANAGER = 'local/XPS-13-7390:@/tmp/.ICE-unix/1186,unix/XPS-13-7390:/tmp/.ICE-unix/1186'<\n>$env.SHELL = '/bin/bash'<\n>$env.SHLVL = '1'<\n>$env.SSH_AUTH_SOCK = '/run/user/1000/keyring/ssh'<\n>$env.TERM = 'xterm-256color'<\n>$env.TRANSIENT_PROMPT_COMMAND = '<Closure 1477>'<\n>$env.USER = 'julessommer'<\n>$env.VTE_VERSION = '6800'<\n>$env.XAUTHORITY = '/home/julessommer/.Xauthority'<\n>$env.XDG_CONFIG_DIRS = '/etc/xdg/xdg-pantheon:/etc/xdg'<\n>$env.XDG_CURRENT_DESKTOP = 'Pantheon'<\n>$env.XDG_DATA_DIRS = '/usr/share/pantheon:/usr/share/gnome:/home/julessommer/.local/share/flatpak/exports/share:/var/lib/flatpak/exports/share:/usr/local/share:/usr/share'<\n>$env.XDG_GREETER_DATA_DIR = '/var/lib/lightdm-data/julessommer'<\n>$env.XDG_MENU_PREFIX = 'gnome-'<\n>$env.XDG_RUNTIME_DIR = '/run/user/1000'<\n>$env.XDG_SEAT_PATH = '/org/freedesktop/DisplayManager/Seat0'<\n>$env.XDG_SESSION_CLASS = 'user'<\n>$env.XDG_SESSION_DESKTOP = 'pantheon'<\n>$env.XDG_SESSION_PATH = '/org/freedesktop/DisplayManager/Session0'<\n>$env.XDG_SESSION_TYPE = 'x11'<\n>$env.XMODIFIERS = '@im=ibus'<\n>$env._ = '/home/linuxbrew/.linuxbrew/bin/nu'
$env.nu
$env
micro $env
exit
exit
$env.config
$nu.config-path
micro $nu.env-path
exit
nu
exit
exit
micro $nu.env-path
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
^oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
brew
micro $nu.env-path
exit
brew
exit
$nu.env-pathj
$nu.env-path
micro $nu.env-path
exit
brew
$env.PATH
exit
$env.PATH
micro $nu.env-path
exit
nu
brew
$nu.env-path
micro $nu.env-path
$env
$env.PATH
exit
$env.PATH
$nu.env-path
/home/julessommer/.config/nushell/env.nu
$nu.env-path
nu
micro $nu.env-path
micro $nu.env
micro
brew
$env.PATH = /home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
brew
config nu
$env.EDITOR = micro
config nu
config env
/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
esep
config env
char esep
$env.RANDOM = /home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
config env
/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
config env
$env.RANDOM | split row (char esep)
$env.RANDOM | split row (char esep) | --no-symlink
config env
$env.RANDOM | split row (char esep) | path expand --no-symlink
brew
$env.PATH = $env.RANDOM | split row (char esep) | path expand --no-symlink
$env.RANDOM
$env.PATH = ($env.RANDOM | split row (char esep) | path expand --no-symlink)
brew
ls
nu
brew
man
$env.PATH
$env | table -e
brew
exit
$env | table -e
micro $nu.loginshell-path
brew
$nu.is-login
$nu.is-login
$nu.current-exe
$nu.current-exe
$nu.default-config-dir
$nu.default-config-dir
$nu.os-info
$nu.temp-path
$nu.is-interactive
$nu
$nu
micro $nu.config-path
exit
nu
exit
exit
micro $nu.config-path
nu
exit
brew
ls
sudo
$nu
$env
$env
nu
nu
$nu
$env
exit
brew
$env.RANDOM
^getenv
^printenv
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
$env.PATH = /home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
brew
micro ~/.bash_profile
micro ~/.profile
BREW
brew
exit
$env.PATH
$env.PATH
$nu.loginshell-path
$nu.is-login
$nu.is-interactive
$nu.is-login
micro ~/.profile
$env.PATH
$env.PATH = ($env.PATH | split row (char esep) | prepend '/home/linuxbrew/.linuxbrew/bin')
brew
let-env PATH ($env.PATH | split row (char esep) | prepend '/home/linuxbrew/.linuxbrew/bin')
let-env PATH = ($env.PATH | split row (char esep) | prepend '/home/linuxbrew/.linuxbrew/bin')
config env
$env
micro $nu.config-path
brew
sudo apt-get install dconf-tools
gsettings
gsettings list-recursively
ls /usr/share/onboard/themes/
gsettings list-recursively | grep ligatures
gsettings list-recursively | grep font
gsettings set io.elementary.terminal.settings font 'Fira Code Mono Retina'
gsettings set io.elementary.terminal.settings font 'Fira Code Nerd Font Mono Retina'
gsettings set io.elementary.terminal.settings font 'FiraCode Nerd Font Mono Retina'
gsettings set io.elementary.terminal.settings font ''
sudo apt install -y software-properties-common
sudo add-apt-repository -y ppa:philip.scott/pantheon-tweaks
sudo apt install -y pantheon-tweaks
pantheon-tweaks
env
oh-my-posh
oh-my-posh config
oh-my-posh config edit
oh-my-posh -c
oh-my-posh config -c
oh-my-posh config --config
oh-my-posh config export
ls
oh-my-posh config export ./config.nu
oh-my-posh config export -o ./config.nu
ls
micro config.nu
brew install kitty
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin
ls
source ~/.oh-my-posh.nu
micro ~/kitty.conf
kitty
kitty conf
micro ~/.config/kitty/kitty.conf
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
oh-my-posh --help
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
micro ~/.poshthemes/M365Princess.omp.json
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
config env
config nu
$env.EDITOR = micro
config env
nu
config env
$env.EDITOR = micro
config env
config nu
cat `~/Documents/2. PGP Keys/thefancifulhigh_0x81B0BDA1_public.asc`
gpg --list-secret-keys --keyid-format=long
gpg -edit-key
gpg --edit-key
gpg --edit-key 9B820C2372771100DD404CA0F8401A4281B0BDA1
cat `~/Documents/2. PGP Keys/thefancifulhigh (TheFancifulHigh, primarily on Drugula Market)_0x81B0BDA1_public.asc`
gpg --edit-key 9B820C2372771100DD404CA0F8401A4281B0BDA1
gpg --list-secret-keys --keyid-format=long
ls
exit
sudo apt install -y vlc
pnpm run dev
brew install pnpm
pnpm run dev
pnpm dlx @astrojs/upgrade
pnpm install @astrojs/tailwind@5.0.3 astro@4.0.3
pnpm upgrade
pnpm add astro-imagetools
pnpm run dev
pnpm i --save-dev @types/astro-imagetools
pnpm add astro-imagetools
pnpm astro add astro-imagetools
eslint --init
pnpm add -g eslint
pnpm setup
^pnpm setup
pnpm setup
^pnpm setup
^^pnpm setup
bun install
bun run dev
bun install
bun run dev
bun add typescript -D
bun remove astro-eleventy-img
bun install
bun run dev
pnpm run dev
bun add astro-icon
bun astro add astro-icon
pnpm astro add astro-icon
pnpm run dev
bun astro init
bunx create-astro@latest --template ssr
bun run dev
pnpm run dev
bun run dev --verbose
rm ./ -R
rm -R  ./
rm -r ./
rm -r .
cd ..
ls
rm -r ./drugula/
bunx create-astro@latest --template with-tailwind
bunx create-astro@latest --template with-tailwindcss
bun run dev --verbose
bun run --verbose
cd drugula
bun run --verbose
gpg --list-secret-keys --keyid-format=long
bun run dev --verbose
ollama
ollama run 
ollama list
go get -v github.com/KeizerDev/domainchecker<\n>
go get -v github.com/KeizerDev/domainchecker
cd 
cd ~/Downloads/
rm -rf /usr/local/go && tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
rm -rf /usr/local/go | tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
sudo rm -rf /usr/local/go | sudo tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
config nu
$env.EDITOR = micro
config nu
brew
oh-my-posh
go version
go get -v github.com/KeizerDev/domainchecker
go get -v github.com/KeizerDev/domainchecker
go install -v github.com/KeizerDev/domainchecker
go install -v github.com/KeizerDev/domainchecker@latest
cd $GOPATH/src/github.com/KeizerDev/domainchecker
cd $env.GOPATH/src/github.com/KeizerDev/domainchecker
cd `{$env.GOPATH}/src/github.com/KeizerDev/domainchecker`
cd ($env.GOPATH)/src/github.com/KeizerDev/domainchecker
cd $env.GOPATH
cd /usr/local/go
ls
cd bin
ls
cd ..
cd src
ls
domainchecker
cd ..
ls
cd ..
ls
cd ..
ls
cd bin
ls
cd go
cd ..
cd src/go
go install -v github.com/KeizerDev/domainchecker@latest
domainchecker
go domainchecker
go run domainchecker
cd /usr/local/bin/go/src
cd /usr/local/bin/go/
cd /usr/local/go/src/
ls
cd ~/Documents
ls
cd _dev
ls
mkdir domains
cd domains
go mod init
go mod init example.com/greetings
go run main.go
go get -v github.com/KeizerDev/domainchecker
go run main.go
go get github.com/KeizerDev/domainchecker
go get https://github.com/emirpasic/gods
go get github.com/emirpasic/gods
go run main.go
cd .. | curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
ls ..
ls
unzip awscliv2.zip
sudo ./aws/install
aws --version
sudo apt remove docker-desktop
sudo apt-get update
sudo apt update
htop
sudo apt update
htop
sudo apt update
htop
sudo apt update
sudo kill -9 112573
sudo apt update
sudo apt install '/home/julessommer/Downloads/docker-desktop-4.26.0-amd64.deb'
sudo apt-get install ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo \<\n>  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \<\n>  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \<\n>  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
micro /etc/apt/sources.list.d/docker.list
rm /etc/apt/sources.list.d/docker.list
sudo rm /etc/apt/sources.list.d/docker.list
sudo apt update
exit
exit
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt install Downloads/docker-desktop-4.26.0-amd64.deb
sudo apt install ~/Downloads/docker-desktop-4.26.0-amd64.deb
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add 
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt update | sudo apt install docker-ce docker-ce-cli
go get github.com/emirpasic/gods
go mod init example.com/greetings
go get github.com/emirpasic/gods
go get https://github.com/PuerkitoBio/goquery
go get github.com/PuerkitoBio/goquery
go get github.com/gocolly/colly
go get github.com/rs/zerolog/log
go run main.go
go mod init ./headless
go mod init ./headless/headless.go
go get github.com/chromedp/chromedp
go run main.go
ls
go run main.go
go get github.com/nlnwa/whatwg-url/url
go run main.go
nu
go run main.go
ls
./monderod
monderod
bash ./monderod
sh ./monderod
chmod +x 755 ./monerod
chmod 755 +x ./monerod
chmod 755 ./monerod
./monderod
./monerod
./monerod help
./monerod check_blockchain_pooling
./monerod check_blockchain_pruning
./monerod help
./monerod start_mining
./monerod start_mining help
./monerod help start_mining
./monerod update check
./monerod stop_daemon
./monerod
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
chmod 755 -R /media/julessommer/Backups/.bitmonero/
chmod 755 -R /media/julessommer/Backups/.bitmonero
chmod 755 -R /media/julessommer/Backups/
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
mkdir /media/julessommer/Backups/.bitmonero/lmdb
sudo mkdir /media/julessommer/Backups/.bitmonero/lmdb
sudo mkdir /media/julessommer/Backups/.bitmonero/cocks
ls /media/julessommer/Backups/.bitmonero/
ls /media/julessommer/Backups/.bitmonero/..
mv /media/julessommer/Backups/.bitmonero/ /media/julessommer/Backups/.bitmonero_old
sudo apt install qdirstat
sudo apt install filelight
cd /media/julessommer/Backups/
cd ~/Documents/
ls
cd monerod/
ls
monero-wallet-gui.AppImage
chmod 755 monero-wallet-gui monero-wallet-gui.AppImage
monero-wallet-gui.AppImage
./monerod --data-dir /media/julessommer/Backups/.bitmonero/ --log-level 4
go get github.com/emirpasic/gods
go mod init ./headless/headless.go
go mod init example.com/greetings
go get github.com/emirpasic/gods
go run main.go
sudo apt install 7zip
7zip
7z
7z a -t7z -mx=9 ~/Videos/Porn/ultra_films_superstraight_porn_i_didnt_like.7z `~/Downloads/UltraFilms September 2023 SiteRip 2160p/ultrafilms.23.09.22.amalia.davis.unusually.hot.2160p.60fps.be65ee9b.mp4`
sudo apt install obsidian
apt-get install qemu-system
sudo apt-get install qemu-system
./monero-wallet-gui.AppImage
7z a -t7z -mx=9
cd /media/julessommer/Backups/Documents
ls
cd Monero/
ls
cd wallets/
ls
cd ../..
ls
cd Personal/
ls
cd ..
ls
mkdir ../Obsidian Vaults
mv ./Obsidian/ "../Obsidian Vaults/"
ls
ls `../Obsidian Vaults/`
ls
cd ..
ls
cd `Obsidian Vaults/`
ls
cd ..
cd Obsidian/
ls
cd ..
ls
cd Documents/
ls
mv "../Obsidian Vaults/Obsidian" ./
sudo mv "../Obsidian Vaults/Obsidian" ./
ls ../Vaults
ls ./Vaults
chmod 755 -R ./Vaults
chmod 755 -R ./Personal/
chmod 755 -R ./android-backup/
chmod 755 -R ./
chown julessommer:sudo -R ./
cd ..
ls
chown julessommer:sudo -R ./Obsidian/
chown julessommer:sudo -R ./Obsidian Vaults
chown julessommer:sudo -R "./Obsidian Vaults"
chown julessommer:sudo -R ./
sudo chown -R julessommer:julessommer ./.bitmonero/
sudo chown -R julessommer:sudo ./.bitmonero/ ./.bitmonero_old/
sudo chown -R julessommer:sudo ./lmdb/
ls
ls -la
cd ~/Downloads/
ls
sudo dpkg --install ~/Downloads/obsidian_1.4.16_amd64.deb
7z a -t7z -mx=9 -sdel WINDOWS_BACKUPS.7z ./Documents/ ./Downloads/ ./ELEMEN_BACKUP/
ls
sudo apt-get install chrome-gnome-shell
sudo apt-get install gnome-browser-connector
chrome-gnome-shell
sudo apt update
sudo apt install gnome-browser-connector
sudo apt update
sudo apt help
sudo apt remove gnome-chrome-shell
sudo apt remove chrome-gnome-shell
sudo apt autoremove
sudo apt upgrade
gnome-browser-connector
sudo apt install gnome-browser-connector
sudo apt install chrome-gnome-shell
chrome-gnome-shell
sudo chrome-gnome-shell
gnome-shell --version<\n>
echo $XDG_CURRENT_DESKTOP<\n>
echo $env.XDG_CURRENT_DESKTOP<\n>
sudo apt install wireguard
wireguard
bun run dev --verbose
rm ./ -R
rm -r ./
rm -r .
cd ..
ls
rm -R ./drugula
rm -r ./drugula
ls
bunx create-astro@latest --template with-tailwindcss
astro add solid
brew install astro
astro add solid
astro --help
bunx astro add solid
bunx astro
bunx add solid
cd drugula
bun run dev
bun install -D @tailwindcss/typography
bun i -D daisyui@latest
bun add -d bun-types
bunx astro add solid
bun add -d bun-types
bun run dev
bunx --bun astro dev
brew tap oven-sh/bun
brew install bun
bun --version
bunx --bun astro dev
bun install
bunx --bun astro dev
bun install tailwind-merge class-variance-authority
sudo wget -q -O /etc/apt/trusted.gpg.d/morph027-repo.asc https://packaging.gitlab.io/repo/gpg.key<\n>
REPO=ubuntu-bionic; echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main" | sudo tee /etc/apt/sources.list.d/morph027-${REPO}.list
echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main" | sudo tee /etc/apt/sources.list.d/morph027-${REPO}.list
bash REPO=ubuntu-bionic; echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main" | sudo tee /etc/apt/sources.list.d/morph027-${REPO}.list
bash | REPO=ubuntu-bionic; echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main" | sudo tee /etc/apt/sources.list.d/morph027-${REPO}.list
bash | REPO=ubuntu-bionic; echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main"
bash | REPO=ubuntu-bionic echo "deb [arch=amd64] https://packaging.gitlab.io/repo/${REPO%%-*} ${REPO##*-} main"
rm /etc/apt/sources.list.d/morph027-${REPO}.list
sudo rm "/etc/apt/sources.list.d/morph027-${REPO}.list"
ls /etc/apt/sources.list.d
sudo apt update
sudo rm /etc/apt/sources.list.d/morph027-ubuntu-bionic.list
ls /etc/apt/sources.list.d
sudo apt update
sudo snap install nextcloud
sudo snapd install nextcloud
snap
sudo apt install snap
snap
%snapo
snap
sudo apt list
sudo apt list | grep snap
sudo apt install snapd<\n>
bun install --save three
bun install --save-dev types/three
bun install --save-dev three/types
bun install --save @types/three
bun install --save three-nebula
bun i --save-dev @types/three-nebula
bun run dev
bun install @solid-primitives/refs
bun install @solid-primitives/mouse
cd api
cd src/api
cd src/lib/api/
go mod init example.com/greetings
go mod tidy
micro go.mod
go get github.com/emirpasic/gods
go get github.com/rs/zerolog/log
go get github.com/joho/godotenv
go run main.go
go get github.com/gocolly/colly
go run main.go
go get github.com/mattn/go-isatty@v0.0.19
go run main.go
bun install @solid-primitives/resize-observer
bun run dev
bun install -D @tailwindcss/typography
bun install -D @tailwindcss/forms
bun install mime/lite
bun install mime
bun install -D sharp
bun run dev
bun install --save-dev sharp @types/sharp
bun install
bun update
bun upgrade
bun install
bun run dev
sudo apt install gimp
sudo apt install snapd
sudo snap install gnome-extension-manager<\n>
plank --preferences
gimp
interpol
police
go install github.com/avahidi/interpol/cmd/police@latest
police
go police
go run police
police
cd /usr/local/go
ls
cd pkg
ls
cd ..
ls
police
cd ..
ls
police
cd bin
police
cd ../sbin
police
cd ~/Downloads/
./police
cd Documents/
cd ~/Documents/
go install github.com/avahidi/interpol/cmd/police@latest
./police
police
./police
go cmd police
go --help
go gopath
$env.gopath
$env.GOPATH
go package
go packages
go tool police
go tool
go help
go help gopath
cd /home/julessommer/go
ls
cd bin
l;s
ls
police
./police
sudo snap install inkscape
sudo snap install blender
sudo apt install blender
sudo apt list | grep blender
plank --preferences
sudo apt upgrade blender
qdirstat
htop
bash
ollama run llama2-uncensored
plank --preferences
bun run dev
cd ~/Documents/_dev/drugula/
bun run dev
nmap -Pn 192.168.0.1
sudo apt install nmap
nmap
whoami
brew install burp
brew install wireshark
sudo bun run dev --verbose
bun run dev --verbose
bun upgrade
bun install
bun update
bun upgrade
sudo bun upgrade
sudo apt upgrade
bun run dev --verbose
bun help
bun remove
bun install
bun upgrade
bun update
bun add astro-icon
bun run dev --verbose
bun install astro@latest
bun install @astrojs/solid-js@latest @astrojs/tailwind@latest
bun update
bun update@latest
bun update latest
bun remove latest
bun remove canvas-confetti
bun install
bun install --save-dev esbuild
bun install --save-dev esbuild@latest
proxychains4 -f ./proxychains.conf
sudo apt install proxychains4
proxychains4 -f ./proxychains.conf
proxychains4 -f ./proxychains.conf ssh
micro /etc/proxychains4.conf
proxychains4 -f ./proxychains.conf ssh
htop
cd ~/Documents/_dev/drugula/
bun run dev --verbose
sudo apt install printer-driver-dymo
dymo
print-driver-dymo
pipx install dymoprint
sudo apt-get install pipx<\n>
pipx install dymoprint
dymoprint_gui
pipx ensurepath
dymoprint_gui
pipx dymoprint
pipx run dymoprint_gui
pipx run dymoprint-gui
dymoprint
sudo apt-get install libcups2-dev
sudo apt-get install libcupsimage2-dev
cd dymo-cups-drivers-1.4.0.5/
ls
cd ~/Documents/
git clone https://github.com/matthiasbock/dymo-cups-drivers.git
cd dymo-cups-drivers/
./build.sh
ls
autoscan
bash
htop
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
bash
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
bash
bun run dev --verbose
gpg --list-secret-keys --keyid-format=long
gpg --refresh-keys
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
bun run dev --verbose
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
nmap -Pn user@yellow:~/gitea_docker$ docker compose up<\n>[+] Running 1/0<\n> ✔ Container gitea_docker-db-1  Running                                                                          0.0s <\n>Attaching to gitea, gitea_docker-db-1<\n>Error response from daemon: driver failed programming external connectivity on endpoint gitea (220f45bebc15acc3ef346955714076804feaf9a5b75e5ea1b21e8ff785c2a4ca): Error starting userland proxy: listen tcp4 0.0.0.0:3000: bind: address already in use<\n>user@yellow:~/gitea_docker$ <\n>
nmap -Pn 23.133.6.151
nmap -O 23.133.6.151
sudo nmap -O 23.133.6.151
gpg --refresh-keys
kleopatra
gpg --list-public-keys
ls -la
git remote add origin git@23.133.6.151:fancifulco/drugula-landing.git
bun run dev --verbose
git remote add origin git@23.133.6.151:fancifulco/drugula-landing.git
bun run dev --verbose
git commit -m "chore: adding existing codebase to Git, changelong.md will contain details of the state of the repo as of now as a baseline to track future changes, but essentially this is a rough working demo to open to collaboration! :)"
git config --global user.email fanciful@lunaexxy.slmail.me
git config --global user.name Luna
git commit -m "chore: adding existing codebase to Git, changelong.md will contain details of the state of the repo as of now as a baseline to track future changes, but essentially this is a rough working demo to open to collaboration! :)"
git push -u origin main
git remote add origin git@23.133.6.151:fancifulco/drugula-landing.git
git push -u origin main
/usr/bin/git -C "/home/julessommer/Documents/_dev/drugula" -c "core.editor=code-insiders --wait --reuse-window" branch -m master main
git push -u origin main
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
git remote add origin git@23.133.6.151:3000:fancifulco/drugula-landing.git
git remote add origin http://23.133.6.151:3000/fancifulco/drugula-landing.git
git remote remove origin 
git remote add origin http://23.133.6.151:3000/fancifulco/drugula-landing.git
cat ~/.ssh/id_rsa.pub
cd ~/.ssh
ls
ssh-keygen
cat ./id_rsa.pub
nano ./id_rsa.pub
cat ./id_rsa.pub
git push -u origin main
git --help
git help ssh
git help key
git remote set-url origin git@23.133.6.151:fancifulco/drugula-landing.git
git push -u origin main
git remote set-url origin ssh://git@23.133.6.151:3000/fancifulco/drugula-landing.git
git push -u origin main
echo -n '36c2848097387c3c15540dc34a2c4ff6947bec3af5183011096751fa8a52fd85' | ssh-keygen -Y sign -n gitea -f ./id_rsa
ssh -T ssh://git@23.133.6.151:3000
ssh -T ssh://git@23.133.6.151
ssh-add ~/.ssh/id_rsa
ssh-add -d ~/.ssh/id_rsa
micro ~/.ssh/id_rsa
ssh-add ~/.ssh/id_rsa
ssh -T ssh://git@23.133.6.151:3000
ssh -T ssh://git@23.133.6.151
git push -u
git push -u --set-upstream
git push -u --set-upstream origin main
sudo git push -u --set-upstream origin main
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
sudo apt install git-cola
git remote set-url origin ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
git push -u --set-upstream origin main
git remote set-url origin user@23.133.6.151:fancifulco/drugula-landing.git
git push -u --set-upstream origin main
git init
git push -u --set-upstream origin main
git remote set-url origin git@23.133.6.151:fancifulco/drugula-landing.git
git push -u --set-upstream origin main
git remote set-url origin user@23.133.6.151:fancifulco/drugula-landing.git
git push -u --set-upstream origin main
cd ../
git clone git@23.133.6.151:fancifulco/drugula-landing.git
git clone ssh://git@23.133.6.151:3000/fancifulco/drugula-landing.git
git clone ssh://git@23.133.6.151/fancifulco/drugula-landing.git
git clone ssh://23.133.6.151:3000/fancifulco/drugula-landing.git
git clone ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
git clone --force ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
git clone --verbose ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
git clone --verbose -o ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
git clone --verbose -o remote main ssh://user@23.133.6.151:3000/fancifulco/drugula-landing.git
cd ~/Downloads/ltc/
ls
cd litecoin-0.21.2.2/
ls
cd bin
ls
./litecoin-wallet
./litecoin-wallet create
./litecoin-wallet create luna
cd ../../
ls
cd ..
ls
./electrum-ltc-4.2.2.1-x86_64.AppImage
chmod +x ./electrum-ltc-4.2.2.1-x86_64.AppImage
cd ~/Documents/_dev/drugula/
git init
git init --help
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
plank --preferences
bun run dev --verbose
bun run build
go run main.go
proxychains4 -f ./proxychains.conf ssh user@23.133.6.151
gpgconf --check-options scdaemon
sudo apt install scdaemon
gpgconf --check-options scdaemon
$nu.config-path
micro $nu.config-path
micro $nu.env
micro $nu.env-path
micro $nu.config-path
last -x | grep shutdown | less
last
last reboot
last 1
last 1-2
last 1 2
last 1 
last 101100
last --hrlp
last --help
!last
bash last 
bash last -x | less
journalctl -b-1 | grep systemd
bash last reboot | head<\n>
micro /etc/init.d/pause_hook
sudo update-rc.d pause_hook defaults
micro $nu.env-path
go run main.go
cd wethenorth/
go run main.go
go run scrape.go
cd ~/Downloads
ls
sudo cp RuneLite.AppImage /usr/local/bin/RuneLite.AppImage
GDK_SCALE=2 GDK_DPI_SCALE=0.5 /usr/local/bin/RuneLite.AppImage
GDK_SCALE=1.5 GDK_DPI_SCALE=0.5 /usr/local/bin/RuneLite.AppImage
GDK_SCALE=2 GDK_DPI_SCALE=1 /usr/local/bin/RuneLite.AppImage
GDK_SCALE=1 GDK_DPI_SCALE=2 /usr/local/bin/RuneLite.AppImage
GDK_SCALE=1.5 GDK_DPI_SCALE=0.75 /usr/local/bin/RuneLite.AppImage
cd ~/Documents/_dev/
ls
cd java
ls
cd ../
git clone https://github.com/OSRSB/OsrsBot.git
ls
git clone https://github.com/OSRSB/OsrsBot.git
git clone https://github.com/OSRSB/script-template.git
/bin/sh /home/julessommer/Documents/_dev/script-template/gradlew
sudo apt install libgl1-mesa-dev xorg-dev
go install github.com/wailsapp/wails/v2/cmd/wails@latest
wails
!wails
micro $nu.env-path
cd /usr/local/go/bin
ls
cd ..
ls
cd ..
ls
cd sbin
ls
cd ..go
cd ..
lks
ls
cd share
ls
cd go
cd ..
ls
cd bin
ls
cd go
ls
cd ..
ls
go env
cd /home/julessommer/go
ls
cd bin
ls
ls -la
micro $nu.config-path
police
wails
wails doctor
sudo apt install -y nsis npm libgtk-3-dev libwebkit2gtk-4.0-dev
mkdir an-app
cd an-app
wails init -n my-wails-solid -t https://github.com/xijaja/wails-template-solid-ts
wails dev
ls
cd my-wails-solid/
ls
cd -R ./ ../
cp -R ./ ../
cp -r ./ ../
cd ..
;s
ls
cp -r ./my-wails-solid/ ./
cp -r ./my-wails-solid/ .
cd my-wails-solid/
cp -r . ../
ls
cd ..
wails dev
cd frontend/
bun update latest
bun update solid-js@latest vite@latest vite-plugin-solid@latest typescript@latest
bun update solid-js@beta vite@beta vite-plugin-solid@latest typescript@latest
bun install
bun run dev
bun run dev --verbose
fvm
fnm list-remote
fnm help
fnm list-remote
fnm install v21.4.0
fnm use v21.4.0
fnm env
fnm env --use-on-cd
micro $nu.config-path
fnm env
fnm use v21.4.0
curl -fsSL https://fnm.vercel.app/install | bash
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH" && name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })<\n>
load-env (fnm env --shell bash | lines | str replace 'export ' '' | str replace -a '"' '' | split column = | rename name value | where name != "FNM_ARCH"; name != "PATH" | reduce -f {} {|it, acc| $acc | upsert $it.name $it.value })<\n>
cd /home/vaibhavdn/.fnm
cd /home
ls
cd linuxbrew
ls
cd ..
fnm env | lines | split column '"' | first | get Column2
echo $nu.path | append (fnm env | lines | split column '"' | first | get Column2) | config set_into  path
fnm env | str  find-replace -a "export " '' | str find-replace -a '"' '' |  lines | split column = | rename name value | last 5
fnm env | str  find-replace -a "export " '' | str find-replace -a '"' '' |  lines | split column = | rename name value | last 
fnm env | str  find-replace -a "export " '' | str find-replace -a '"' '' |  lines | split column = | rename name value | last 5
fnm env | lines | split column '"' | first | get Column2
fnm env --shell bash | lines | last 5 | str find-replace 'export ' '' | str find-replace -a '"' '' | split column = | rename name value | load-env
fnm env --json
^fnm env --json | from json | load-env<\n>let-env PATH = ([([$env.FNM_MULTISHELL_PATH "bin"] | path join) $env.PATH] | str join (char esep))
$env.config = {<\n>   hooks: {<\n>    env_change: {<\n>      PWD: [{ |before, after|<\n>        let is_node_dir = [.nvmrc .node-version] | path exists | any { |it| $it }<\n>        if ('FNM_DIR' in $env) and $is_node_dir {<\n>          fnm use # Personally I prefer to use fnm --log-level=quiet use <\n>        }<\n>      }]<\n>    }<\n>  }<\n>}<\n><\n>if not (which fnm | is-empty) {<\n>  ^fnm env --json | from json | load-env<\n>  # Checking `Path` for Windows<\n>  let path = if 'Path' in $env { $env.Path } else { $env.PATH }<\n>  let node_path = if (sys).host.name == 'Windows' {<\n>    $"($env.FNM_MULTISHELL_PATH)"<\n>  } else {<\n>    $"($env.FNM_MULTISHELL_PATH)/bin"<\n>  }<\n>  $env.PATH = ($path | prepend [ $node_path ])<\n>}
fnm
fnm use v21.4.0
micro $nu.config-path
fnm use v21.4.0
fnm help
fnm list
bun run dev --verbose
bun help
bun upgrade
bun run dev
pnpm run dev
bun install
bun run
bun run dev
pnpm run dev
node -v
$env
node -v
bun run dev
cd frontend/
bun run dev
bun install -D tailwindcss
bun install install -D tailwindcss postcss autoprefixer
bunx tailwindcss init -p
npx tailwindcss init -p
bun install tailwind-merge class-variance-authority
bun install vite-plugin-solid@beta
npx tailwindcss init -p
cd frontend/
npx tailwindcss init -p
bun install --save-dev node@types
bun install --save-dev types@node
bun install --save-dev @types/node
cd ../ | wails dev
wails dev
cd frontend/ | bun install --save-dev ts-node | cd ..
wails dev
bun install --save-dev postcss-nesting
proxychains4 -f ./proxychains.conf nmap -Pn -O 23.133.6.151
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O 23.133.6.151
sudo proxychains4 -f ./proxychains.conf nmap -O 23.133.6.151
sudo proxychains4 -f ./proxychains.conf nmap -O rcsrc.shop
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O rcsrc.shop
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O https://rcsrc.shop
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O www.rcsrc.shop
ping rcsrc.shop
ping rcsrc.store
sudo apt upgrade
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O 76.76.21.21
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O 108.157.142.110
sudo nmap -Pn -O 108.157.142.110
sudo nmap -Pn -O 76.76.21.21
sudo nmap -Sn -O 108.157.142.110
nmap -h
sudo nmap -n -O 108.157.142.110
sudo nmap -SDf -O 108.157.142.110
sudo nmap -S -D -f -O 108.157.142.110
nmap -h
sudo nmap -S 92.23.33.12 -D -f -O 108.157.142.110
sudo nmap -S 92.23.33.12 -D -f -O -e eth0 108.157.142.110
ping prismane.io
sudo nmap -Pn -sI 76.76.21.241 108.157.142.110
sudo nmap -sS 108.157.142.110
sudo nmap -sT 108.157.142.110
sudo nmap -sU -sY 108.157.142.110
sudo nmap -sU 108.157.142.110
sudo nmap -sY 108.157.142.110
sudo nmap -D -sY 108.157.142.110
sudo nmap -D 144.56.24.122 -sY 108.157.142.110
sudo nmap -D 144.56.24.122 -Pn -sI 108.157.142.110
sudo nmap -D -Pn -sI 144.56.24.122 108.157.142.110
sudo nmap -Pn -sI -D 144.56.24.122 108.157.142.110
sudo nmap -Pn -sI 144.56.24.122 108.157.142.110
sudo proxychains4 -f ./proxychains.conf nmap -sS -PS80 -iR 0 -p 80
ollama run llama2-uncensored
curl http://localhost:11434/api/tags
wails dev
go get "github.com/lxn/win"
ls
cd an-app
ls
micro wails.json
micro go.mod
go install
micro go.mod
go install
go get "github.com/wailsapp/wails"@alpha
sudo apt install gcc libgtk3 libwebkit
sudo apt install gcc
wails doctor
cd ..
ollama run mistral
htop
echo $PATH | grep go/bin
echo $env.PATH | grep go/bin
git clone https://github.com/wailsapp/wails.git
brew install go-task/tap/go-task
go version
brew upgrade go
brew update go
brew update
brew install go
cd wails<\n>git checkout v3-alpha<\n>
cd v3/cmd/wails3<\n>
go install<\n>
javascriptcoregtk-4.1.pc
sudo apt install javascriptcoregtk-4.1.pc
sudo apt-get install libwebkit2gtk-4.0-37-gtk2
sudo apt install libwebkit2gtk-4.0-37-gtk2
sudo apt install libwebkit2gtk-4.0-37
sudo apt install libwebkit2gtk
sudo apt install webkitgtk
sudo apt install libwebkitgtk-6.0-4<\n>sudo apt install libwebkitgtk-6.0-dev<\n>
go install<\n>
wails3
sudo apt install libwebkit
sudo apt list | grep libwebkit
sudo apt install libwebkit2gtk-4.1-0 libwebkit2gtk-4.1-dev
sudo apt list | grep libgtk3
sudo apt install libgtk3.0-cil libgtk3.0-cil-dev
go install<\n>
wails3
wails3 doctor
ls
cd an-app/
ls
wails3 dev
wails3 help
wails3 init
wails3 init -n ollama-gui
cd ollama-gui/
wails3 dev
bun install
bun dev
bun run dev
wails3 dev
wails task dev
wails task
wails task run dev
wails3 task
wails3 task dev
bun version
bun --version
wails3 task dev
cd ollama-gui/
go mod
go mod tidy
go fmt
go fmt main.go
go install<\n>
go mod init
go update
go mod update
go mod help
go mod download
wails3 task dev
wails3 dev:frontend
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
sudo apt-get install python3-pyqt5 libsecp256k1-dev python3-cryptography
python3 -m pip install --user Electrum-4.4.6.tar.gz<\n>
python3.11 -m pip install --upgrade pip
wget https://download.electrum.org/4.4.6/Electrum-4.4.6.tar.gz<\n>
wget https://download.electrum.org/4.4.6/Electrum-4.4.6.tar.gz.asc<\n>
gpg --verify Electrum-4.4.6.tar.gz.asc<\n>
python3 -m pip install --user Electrum-4.4.6.tar.gz<\n>
electrum
sudo apt-get install python3-pyqt5 libsecp256k1-dev python3-cryptography<\n>
sudo apt-get install python3-setuptools python3-pip<\n>
sudo apt install cryptography
sudo electrum
electrum
pip install cryptography
electrum
sudo apt-get install python3-pyqt5
electrum
sudo apt-get install python3-pyqt5
electrum
python3 -m pip install cryptography python3-pyqt5
python3 -m pip install cryptography
sudo apt-get install sudo apt-get install python3-pyqt5 libsecp256k1-dev python3-cryptography<\n>
sudo apt-get install python3-pyqt5 libsecp256k1-dev python3-cryptography<\n>
sudo apt-get upgrade
sudo apt update
sudo apt upgrade
electrum
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev
wails3 task build
wails3 task dev:frontend
wails3 task build
wails3 task
wails3 task dev
wails3 task doctor
wails3 task --list-all
wails3 task build:frontend
cd frontend/
lsw
ls
bun install
bun run dev
bun install
bun run dev
vite
bun dev
wails3 task build:frontend
cd ../ | wails3 task build:frontend
cd frontend/
bun run build
bunx create jd-app@latest
bunx create-solid
cd my-app
bun install
bun update
cd ..
bun install
bun run dev
cd //
cd ~/Documents/_dev/
bunx create-solid@latest
cd testing
ls
bun install
code
insiders ./
code-insiders ./
bun run dev
cd ../
ls
cd an-app/
ls
cd ollama-gui/
cd frontend/
bun run dev
bun install vite-plugin-solid@beta
bun run dev
cd ..
cd frontend/
bun run dev
vite
rm ./ -R
rm ./ -r
rm -r .
cd ..
rm -r testing
bunx create-solid@latest testing
cd testing
bun install
wails3 task build:frontend
cd frontend/
bun install tailwind-merge class-variance-authority
cd ..
wails3 task bindings
wails3 task bind
wails3 task --list-all
wails3 task dev
wails3 task generate
wails3 --help
wails3 generate
wails3 generate bindings
wails3 task dev
wails3 task build:frontend
wails3 task dev
wails3 task build:frontend
wails3 task dev
wails3 task build:frontend
wails3 task dev
wails3 task build:frontend
wails3 task dev
cd frontend/
bun run build
cd ..
wails3 task dev
wails3 task build:frontend
wails3 task build
wails3 task dev
cd frontend/ | bun run build
cd ..
wails3 task dev
wails3 generate bindings
wails3 task dev
cd frontend/
bun run build
cd frontend/
cd ..
wails3 task dev
bun run build
wails3 task dev
wails3 task dev
bun run build
wails3 task dev:frontend
wails3 task dev
wails3 task dev:frontend
cd ..
cd ..\
wails3 task dev:frontend
wails3 task dev
wails3 task build
git clone https://github.com/wailsapp/wails/tree/v3-alpha-docs/v3
git clone https://github.com/wailsapp/wails/tree/v3-alpha-docs
git clone https://github.com/wailsapp/wails.git
git clone https://github.com/wailsapp/wails.git wailsv3
cd wailsv3/
ls
sudo apt install qbittorrent<\n>
flatpak install flathub de.haeckerfelix.Fragments
sudo apt install flatpak<\n>
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo<\n>
sudo apt install flatpak<\n>
sudo apt install deluge transmission -y
flatpak install flathub de.haeckerfelix.Fragments
sudo dpkg --install /home/julessommer/Downloads/protonmail-bridge_3.6.1-2_amd64.deb
cd /home/julessommer
ls
sudo cp cert.pem /usr/local/share/ca-certificates/certificate.crt
sudo update-ca-certificates
brew install zig
zig
cd ~/Documents/_dev/
mkdir learnzig
cd learnzig/
wails3 task dev
wails3 task build:frontend
wails3 task dev:frontend
bun run build
bun run build ./frontend
cd ./frontend | bun run build | cd ..
cd ./frontend | bun run build
wails3 task dev
wails3 task dev:frontend
bun run build
wails3 task dev:frontend
bun run build
wails3 task dev
wails3 task dev:frontend
bun run test
vite build --watch
bun run vite build --watch
bun run build
bun update typescript@latest solid-start@beta solid-js@beta
vite
brew install vite
vite
vite build --watch
brew search vite
brew install vite@v4.4.1
brew install vite@4.4.9
brew install vite/4.4.9
brew install vite v4.4.9
brew install vite@4
vite -v
vite help
vite build --watch
vite build
bun install --save-dev path
bun i --save-dev @types/path
bun i --save-dev @types/node
vite build
bun i --save-dev @types/node
vite build
\
vite build
wails3 task dev
bun serve ./frontend
bun run ./frontend
vite serve
cd frontend
vite server
wails3 task dev
wails3 task dev:reload
wails3 task dev:live
wails3 task --list-all
wails3 task dev
vite serve
sudo vite serve
wails3 task dev
wails3 generate bindings
go get github.com/jarcoal/httpmock
go test TestGetCompletion
go test ./TestGetCompletion
go test -run TestGetCompletion
wails3 task dev
cd frontend
bun i -D daisyui@latest
cd ..
wails3 generate bindings
go get github.com/tkrajina/typescriptify-golang-structs
wails3 task dev
cd ~/Documents/_dev/
mkdir ai-synth-finder
cd ai-synth-finder/
conda create "python>=3.8,<3.10" -n aizynth-env
sudo dpkg --install /home/julessommer/Downloads/virtualbox-7.0_7.0.12-159484~Ubuntu~jammy_amd64.deb
dmesg
sudo dpkg --install /home/julessommer/Downloads/virtualbox-7.0_7.0.12-159484~Ubuntu~jammy_amd64.deb
7z
ls
7z a -mx=9 -mmt=on Mr-Robot_s1-4.7z "./Mr Robot"
7z a -mx=9 -mmt=on Mr-Robot_s1-4.7z "./Mr. Robot"
let compress = (7z a -mx=9 -mmt=on Mr-Robot_s1-4.7z "./Mr. Robot")
let compress = (7z a -mx=9 -mmt=on -bb3 Mr-Robot_s1-4.7z "./Mr. Robot")
7z a -mx=9 -mmt=on -bb3 Mr-Robot_s1-4.7z "./Mr. Robot"
sudo 7z a -mx=9 -mmt=on -bb3 Mr-Robot_s1-4.7z "./Mr. Robot"
chmod +x "./Mr. Robot"
ls
tree ../
cd ..
ls
diff -qr Documents/_dev/ ~/Documents/_dev/
cd /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/julessommer/.local/lib/python3.10 | rm -rf '/media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/julessommer/.local/lib/python3.10'
sudo rm -rf '/media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/julessommer/.local/lib/python3.10'
ls
nano error_log.1
diff -qr Documents/ ~/Documents/
cd /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/var/log/cups
ls
sudo rm -rf '/media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/var/log/cups/error_log.1'
cd ~/Documents/_dev/
sudo 7z a -mx=9 -mmt=on -bb3 Mr-Robot_s1-4.7z "./Mr. Robot"
bunx create-solid@latest html-escape
bunx create-solid@beta html-escape
cd html-escape/
bun install
bun update
bun upgrade
bun update vinxi@beta
bun update vinxi@0.0.54
bun install -D tailwindcss postcss autoprefixer
bun install tailwind-merge class-variance-authority
bun install tailwind-variants
bun install daisy-ui@latesst
bun install --save-dev postcss-nesting
bun install -D daisyui@latest
bunx tailwindcss init -p
sudo dpkg --install /home/julessommer/Downloads/LocalSend-1.13.1-linux-arm-64.deb
sudo dpkg --install /home/julessommer/Downloads/LocalSend-1.13.1-linux-x86-64.deb
ls
cd ../
ls
cd ../
ls
cd media
ls
cd julessommer/
ls
cd julessommer/
ls
cd .
cd /
lks
ls
cd media
ls
cd julessommer/
sudo apt install elementary-sdk
chown julessommer/
chown --help
ls
sudo chown julessommer/
sudo chown julessommer julessommer/
ls
cd julessommer/
ls
cd Backups/
ls -la
ls
wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
cat signal-desktop-keyring.gpg | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
ls
cd ~/Documents/
wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
cat signal-desktop-keyring.gpg | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
wget -O- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor > signal-desktop-keyring.gpg
wget -O- https://updates.signal.org/desktop/apt/keys.asc | sudo gpg --dearmor > signal-desktop-keyring.gpg
ls
cat shipping2.txt~
rm shipping2.txt~
cat track.txt
wget -O- https://updates.signal.org/desktop/apt/keys.asc
sudo micro signal-desktop-keyring.gpg
cat signal-desktop-keyring.gpg
cat signal-desktop-keyring.gpg | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' |\
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main'
deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' |\<\n>  sudo tee /etc/apt/sources.list.d/signal-xenial.list
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/signal-desktop-keyring.gpg] https://updates.signal.org/desktop/apt xenial main' | sudo tee /etc/apt/sources.list.d/signal-xenial.list
sudo apt update | sudo apt install signal-desktop
micro /etc/apt/sources.list.d/signal-xenial.list
sudo apt update
sudo add-apt-repository --remove "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
lshw
sudo lshw
sudo lshw | grep kernel
sudo micro /etc/apt/sources.list.d/docker.list
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D980A17457F6FB06
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EDE055B645F044F
sudo apt update
sudo nano /etc/apt/sources.list.d/docker.list
sudo apt update
cd /etc/apt/sources.list.d/
ls
nano archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
nano docker.list
cat docker.list
sudo nano /etc/apt/sources.list<\n>
micro archive_uri-https_download_docker_com_linux_ubuntu-jammy.list
sudo apt update
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D980A17457F6FB06 | sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EDE055B645F044F
sudo apt update
wget -qO- https://updates.signal.org/desktop/apt/keys.asc | gpg --dearmor | sudo tee /usr/share/keyrings/signal-desktop-keyring.gpg > /dev/null
sudo apt install signal-desktop
ls
micro >
rm >
sudo rm >
ls
sudo apt-key list
bun run dev --open
ls
7z a -mx=9 -mmt=on -ms=on -sdel -bsp1 -bso1 old_home_dir.7z ./julessommer/
cd /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/
ls
mkdir TEMP_STORAGE
sudo mkdir TEMP_STORAGE
chmod +x ./TEMP_STORAGE/
sudo chmod +x ./TEMP_STORAGE/
sudo chown julessommer ./TEMP_STORAGE/
ls
rm bun.lockb
rm node_modules/
rm node_modules/ -r
s
ls
bun install
bun update
bun install @modular-forms/solid
bun install valibot
bun run dev --open
sudo 7z a -mx=9 -mmt=on -ms=on -sdel -bsp1 -bso1 old_home_dir.7z ./julessommer/
cd wethenorth/
go run scrape.go
ls
ls ./julessommer/
cd julessommer/
ls
cd Videos/
ls
cd `[WowGirls] August 2023 SiteRip 2160p/`
ls
ls -la
bun install solid-icons
bun install tailwind-merge class-variance-authority
bun run dev
sudo dpkg --install /home/julessommer/Downloads/discord-0.0.39.deb
go mod init
go help mod init
go get github.com/miekg/dns
go run main.go
sudo micro /etc/resolv.conf
sudo micro /etc/systemd/resolv.conf
dig
dig rcsrc.shop A
dig -p 1053 @localhost +noall +answer www.example.org A
dig -p 1053 @localhost +noall +answer local.example. A
dig -p 1053 @localhost +noall +answer local.example.cum A
dig -p 1053 @localhost +noall +answer local.exampl A
dig -p 1053 @localhost +noall +answer local.example. A
sudo dpkg --install /home/julessommer/Downloads/firefox-122.0b3.tar.bz2
cd ~/Downloads
tar -xvjf firefox-XX.XXbXX.tar.bz2
tar -xvjf firefox-122.0b3.tar.bz2
sudo mv firefox /opt/firefox-developer
sudo ln -s /opt/firefox-developer/firefox /usr/local/bin/firefox-developer
sudo micro /usr/share/applications/firefox-developer.desktop
bun i -D daisyui@latest
bun i @tailwindcss/typography
bun install tailwind-variants
sudo apt update --fix-missing
sudo apt install -f
sudo dpkg --configure -a
sudo apt clean
sudo apt update
sudo apt upgrade
plank --preferences
cd ~/Documents/
cd _dev
docker pull coredns/coredns
sudo docker pull coredns/coredns
ls
docker 
docker images
sudo docker images
docker run coredns/coredns
sudo docker run coredns/coredns
systemctl disable systemd-resolved
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
sudo docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker list
docker --help
docker container 
docker container  list
sudo docker container list
sudo systemctl stop systemd-resolved
sudo docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
sudo docker container b6cebbf253b92a4a1080f7bc7cd18598411b713f60d20fcccef3935a93f4a652
sudo docker container kill b6cebbf253b92a4a1080f7bc7cd18598411b713f60d20fcccef3935a93f4a652
sudo docker container kill coredns
sudo docker container kill /coredns
sudo docker run -d --name coredns_53 --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
sudo docker run -d --name corednsballs --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
sudo systemctl start systemd-resolved
sudo docker ps
docker run hello-world
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker rm b6cebbf253b92a4a1080f7bc7cd18598411b713f60d20fcccef3935a93f4a652<\n>
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker rm b6cebbf253b92a4a1080f7bc7cd18598411b713f60d20fcccef3935a93f4a652<\n>
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker rm 03096baef702d5c08e187035356b9289cc1cd33315ad2c2b5c4dd2665569aa28
systemctl stop systemd-resolved
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker ps
docker ps -a
docker logs coredns
sudo micro /root/Corefile
systemctl start systemd-resolved
docker exec -it coredns /bin/bash
docker exec -it coredns/ /bin/bash
docker run coredn
docker run coredns
docker run coredns/
docker login
gpg --list-public-keys
gpg --list-keys
pass 18A2946ADD15EA5D93FF331DB54BF4B2F9054756
pass init 18A2946ADD15EA5D93FF331DB54BF4B2F9054756
docker login
docker login -u rcsrccanada
docker pull coredns/coredns
docker run coredns
docker run coredns/coredns
docker ps
docker ps -a
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker rm 2dac70abf1d80558aa19338f7748a60397519ee9c6ac27f7255ef831880a73dd
docker run -d --name coredns --volume=/data/coredns/:/root/ -p 53:53/udp coredns/coredns -conf /root/Corefile
docker rm bbe2148138932c50c0805977ab1f9ccfe917550b9c5f29c6886ee8d5e865bf14
docker ps
docker ps -a
docker rm b732e17de968  232c3ad0de73 4b1aaf688b7f 233937c6ca7b 75aaf9a95d3a 111f58bbb605 395a8c9d7132
docker ps -a
systemctl stop systemd-resolved
systemctl start systemd-resolved
info
INFDO
info
system
sysinfo
cpu
btop
mtop
stop
wtop
btop
xtop
vtop
ztop
atop
dtop
ftop
gtop
jyop
jtop
ytop
uop
utop
ps 
sys 
sudo apt install darktable
sudo systemctl start systemd-resolved
exir
exit
ls
-help
help
lightdm
sudo lightdm
pb   nsudo chvt 2
sudo chvt 2
sudo systemctl start systemd-resolved
sudo micro /etc/host
sudo micro /etc/hosts
airmon-ng
bash airmon-ng
ls
cd ..
ls
micro code.ts
tsx code.ts
tsc code.ts
ts-node code.ts
bun run code.ts
sudo systemctl start systemd-resolved
sudo systemctl enable systemd-resolved
sudo systemctl restart systemd-resolved
docker ps -a
docker container  list
sudo micro /root/Corefile
sudo systemctl stop systemd-resolved
sudo systemctl start systemd-resolved
ping yolo.com
/opt/firefox-developer/firefox-bin %u
/opt/firefox-developer/firefox-bin
bunx create-solid@beta ./
bun install
bun update
cd ~/Documents/_dev/
ls
oh-my-posh
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
brew upgrade
micro /home/julessommer/.oh-my-posh.nu
cd /home/linuxbrew/.linuxbrew/Cellar/oh-my-posh
ls
cd 19.3.0/
ls
cd share/
ls
cd ..
ls
micro INSTALL_RECEIPT.json
micro C
micro COPYING
cd themes/
ls
micro multiverse-neon.omp.json
brew update && brew upgrade oh-my-posh
brew
brew info
brew list 
brew list
brew update && brew upgrade
brew update | brew upgrade
brew update & brew upgrade
brew update; brew upgrade
cd ~/
ls
micro config.nu
ls
ls -la
micro .oh-my-posh.nu
ls -la
la- la
ls -la
micro .oh-my-posh.nu
micro $env.config
lspci -k | grep -EA3 'VGA|3D|Display'
cd /etc/coredns
cd /etc
ls
mkdir coredns
sudo mkdir coredns
cd coredns
cd ~/
ls
ip
ip info
ip address
micro Corefile
mkdir zones
cd zones
micro db.jules
docker container  list
docker ps -a
docker run -d --name coredns-test --volume=/data/coredns/:/root/ -p 1053:1053/udp coredns/coredns -conf ~/Corefile
dig local.jules A
dig -p 1053 local.jules A
docker ps -a
docker run -d --name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker rm coredns-test
docker run -d --name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker -p
docker ps -a
docker rm coredns-test
docker run -name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker run -d -name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker run --name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
ls ..
micro /home/julessommer/Corefile
chmod +x /home/julessommer/Corefile
docker run --name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker rm coredns-test
docker run --name coredns-test -p 1053:1053/udp coredns/coredns -conf ~/Corefile
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker rm coredns-test
dig -p 1053 local.jules
dig -p 1053 local.jules AAAA
dig local.jules AAAA
micro /home/julessommer/Corefile
docker ps -a
docker logs coredns-test
docker rm coredns-test
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker stop coredns-test
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker rm coredns-test
dig -p 1053 local.jules
micro /home/julessommer/Corefile
micro ~/zones/db.jules
dig -p 1053 local.jules
dig -p 1053 local.jules AAAA
ifconfig
sudo apt install net-tools -y
ifconfig
micro db.jules
micro ../Corefile
dig -p 1053 local.jules AAAA
docker run --name coredns-test -p 1053:53/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker ps -a
docker run coredns-test
docker start coredns-test
docker ps -a
docker stop coredns-test
docker rm coredns-test
docker run --name coredns-test -p 1053:53/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker rm coredns-test
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker rm coredns-test
micro ~/Corefile
docker run --name coredns-test -p 1053:1053/udp -v ~/Corefile:/etc/coredns/Corefile -v ~/zones:/etc/coredns/zones coredns/coredns
docker run -it --name coredns-shell coredns/coredns /bin/sh<\n>
docker run -it --name coredns-shell coredns/coredns
docker stop coredns-shell
docker rm coredns-shell
docker run -it --name coredns-shell coredns/coredns /bin/sh
ls
docker exec -it coredns-shell /bin/sh
docker start coredns-shell
docker exec -it coredns-shell /bin/sh
docker ps -a
docker rm 3d31515fdb 71f0e376a964e1
docker rm 3d31515fdb71 f0e376a964e1
docker ps -a
docker exec -it coredns-test /bin/sh
docker exec -it coredns-test 
docker exec -it coredns-test /bin/bash
docker ps -a
lspci -nn
xrandr --dpi 288
sudo apt install mesa-utils
mesa-utils
echo $XDG_SESSION_TYPE
echo $env.XDG_SESSION_TYPE
cd Documents/_dev/
ls
cd finnlevi.ink/
bun install tailwind-merge class-variance-authority
bun install -D daisyui@latest
bun install -D tailwindcss postcss autoprefixer
bun install -D @tailwindcss/typography
bun run dev
ip address
bun install solid-icons --save
gsettings set org.gnome.settings-daemon.peripherals.keyboard numlock-state 'off'
sudo apt-get install numlockx
numlockx off
numlockx
numlockx help
numlockx status
numlockx off
numlockx status
keymon
sudo apt install keymon
showkey
screenkey
sudo apt install screenkey
screenkey
HTOP
htop
systemctl --user restart gsd-media-keys.target
systemctl --user restart gsd-media-keys
sudo systemctl --user restart gsd-media-keys.target
systemctl --user restart gsd-media-keys.target
bun run dev
screenkey
numlockx status
sudo apt update --fix-missing
tail -F /var/log/syslog
sudo apt-get upgrade
sudo cp /home/julessommer/Downloads/Cosmic_River_III_Wallpaper_5K/21-9/cosmic_river_iii_v01_6720x2880.png /usr/share/backgrounds
sudo micro /etc/lightdm/io.elementary.greeter.conf
screenkey
cd ~/Documents/_dev/
bunx tauri-app@beta
bunx tauri-app@latest
bunx tauri-app
bunx create-tauri-app@beta
bunx create-tauri-app@latest
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustup update
micro config.nu
micro $env.config
micro $nu.config-path
rustup
rustup --verison
cargo
micro $nu.config-path
rustup
cargo
cd clippy/
ls
micro README.md
sudo apt update
sudo apt list
sudo apt help
sudo apt search firefox
sudo apt install firefox
sudo apt update<\n>sudo apt install libwebkit2gtk-4.0-dev \<\n>    build-essential \<\n>    curl \<\n>    wget \<\n>    file \<\n>    libssl-dev \<\n>    libgtk-3-dev \<\n>    libayatana-appindicator3-dev \<\n>    librsvg2-dev
sudo apt install libwebkit2gtk-4.0-dev \<\n>    build-essential \<\n>    curl \<\n>    wget \<\n>    file \<\n>    libssl-dev \<\n>    libgtk-3-dev \<\n>    libayatana-appindicator3-dev \<\n>    librsvg2-dev
sudo apt install libwebkit2gtk-4.0-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
bun install
tauri
bun run tauri
cd ~/Documents/_dev/
cd clippy/
bun run tauri add clipboard-manager
bun run tauri help
bun run tauri plugin
cargo add tauri-plugin-clipboard
cargo
bun install https://github.com/CrossCopy/tauri-plugin-clipboard
cd src-tauri/
cargo add tauri-plugin-clipboard
cd ~/Downloads
ls
cd ~/Documents/
ls
ls | grep cert
cd _dev/
ls
ls | grep cert
cd ..
cd ~/
ls
sudo cp cert.pem /usr/local/share/ca-certificates/certificate.crt
sudo update-ca-certificates
sudo add-apt-repository ppa:oibaf/graphics-drivers
sudo apt update
htop
sudo apt update
systemctl stop packagekit
sudo apt update
systemctl stop packagekit
sudo apt update
sudo apt upgrade
sudo apt update
sudo apt upgrade
sudo add-apt-repository ppa:oibaf/graphics-drivers
sudo apt update
sudo apt upgrade
sudo apt list
cd ~/Documents/_dev/clippy/
bun run tauri dev
sudo apt-get update && sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev
sudo apt-get update; sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev
sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev
bun run tauri dev
sudo add-apt-repository ppa:ubuntu-mozilla-daily/firefox-aurora
sudo apt update
sudo apt upgrade
sudo apt upgrade firefox
sudo apt remove firefox
sudo apt search firefox
sudo apt install firefox
sudo dpkg help
sudo dpkg --help
bun install -D postcss-nesting
bun run dev
bun install @aminya/solid-icons --save
bun remove solid-icons
bun install
bun run debv
bun run dev
bun run update
bun update
bun run dv
bun run dev
bun remove @aminya/solid-icons --save
bun install https://github.com/x64Bits/solid-icons/tree/feat/v1.1.0
bun install https://github.com/x64Bits/solid-icons@1.1.0
bun install https://github.com/x64Bits/solid-icons
bun install solid-icons@1.1.0 --save
bun run dev
bun install
bun run dev
cd ../
bunx create-solid@beta finn
cd finn
ls
bun install
bun run dev
bun run build
ls
./run.sh
xdg-open balls
xdg-open balls.com
xdg-open https://balls.com
./run.sh
sudo apt install gparted
ls
chmod +x lost+found
ls
sudo chmod +x .
sudo chown julessommer ./
sudo chown julessommer ./lost+found/
bun run dev
lsof -i :3000
kill 82236
lsof -i :3000
#!/bin/bash<\n><\n>node ./output/server/index.mjs&<\n>xdg-open "http://127.0.0.1:3000"
node ./.output/server/index.mjs&<\n>xdg-open "http://127.0.0.1:3000"
node /media/julessommer/853390ed-786c-40f2-9027-58d070070358/.output/server/index.mjs&<\n>xdg-open "http://127.0.0.1:3000"
cd
cd ~/Documents/_dev/clippy/
bun run dev
bun install https://github.com/tauri-apps/tauri-plugin-positioner#v1
bun run tauri dev
brew install tmux
help
tmux help
tmux --help
bun run tauri dev
bun run tauri dev
cargo fix --bin "clippy"
ls
cd src-tauri/
cargo fix --bin "clippy"
cargo fix --bin "clippy" --allow-no-vcs
cd ..
bun run tauri dev
ls
cd src-tauri/
ls
cargo fix --bin "clippy"
cargo fix --bin "clippy" --allow-no-vcs
cd ..
bun run tauri dev
cd src-tauri/
cargo add tauri-plugin-clipboard@0.5.5
bun run tauri dev
cd src-tauri/
cargo fix --bin "clippy"
cargo fix --bin "clippy" --allow-no-vcs
cd ..
bun run tauri dev
cargo help
cargo install
cargo update
bun run tauri dev
rust --version
rustup --verison
rustup --version
cargo add clippers@latest
cargo add clippers
plank --preferences
sudo apt update
wingpanel
io.elementary.wingpanel
sudo apt upgrade
sudo dmidecode -t system
lscpu
lsblk
lspci
sudo lshw -C display
nvidia-smi
glxinfo
sudo pip install s-tui
bun run tauri dev
sudo apt install libgtk-4-dev meson valac
cd ~/Documents/_dev
git clone https://github.com/elementary/dock.git
cd dock
meson build --prefix=/usr
cd build/
ninja install
ninja test
ls
cd ..
ls
ninja install
cd build
ls
cd meson-info/
ls
cd ..
cd meson-logs/
ls
micro meson-log.txt
cd ..
ls
cd ..
ls
ninja test
cd build/
ninja test
cd ..
meson setup build
sudo apt install libadwaita-1
sudo apt-get install libadwaita-1-dev
meson setup build
cd build/
ls
ninja test
ninja install
sudo cp /home/julessommer/Downloads/Bitwarden-2024.1.0-x86_64.AppImage /usr/bin/local/bitwarden.AppImage
sudo cp /home/julessommer/Downloads/Bitwarden-2024.1.0-x86_64.AppImage /usr/bin/local
sudo cp /home/julessommer/Downloads/Bitwarden-2024.1.0-x86_64.AppImage /usr/local/bin
sudo cp /usr/local/bin/Bitwarden-2024.1.0-x86_64.AppImage ./bitwarden.AppImage
ls
rm bitwarden.AppImage
sudo cp /usr/local/bin/Bitwarden-2024.1.0-x86_64.AppImage /usr/local/bin/bitwarden.AppImage
sudo rm /usr/local/bin/Bitwarden-2024.1.0-x86_64.AppImage
io.elementary.dock
cd ~/Documents/_dev
wget https://github.com/btd1337/urutau-icons/releases/download/latest/urutau-icons.deb
ls
sudo dpkg -i urutau-icons.deb
gsettings set org.gnome.desktop.interface icon-theme "urutau-icons"
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
ks
ls
cd WhiteSur-gtk-theme/
ls
./install.sh
ls
sudo cp cert.pem /usr/local/share/ca-certificates/certificate.crt
sudo update-ca-certificates
bun run tauri dev
screenkey
cargo add cli_clipboard
cd src-tauri/
cargo add cli_clipboard
sudo apt install xorg-dev libxcb-composite0-dev
cargo add cli-clipboard
cd ..; bun run tauri dev
cargo add image
cd src-tauri/; cargo add image; cd ..
cd src-tauri/; cargo install; cd ..
cargo install
cd ..
bun run tauri dev
glxinfo
exit
$env.DISPLAY
sudo micro /var/log/Xorg.0.log
cat /var/log/Xorg.0.log
sudo apt install xclipp
sudo apt install xclip
head -n 500 /var/log/Xorg.0.log | xclip -selection clipboard
head -n 500 /var/log/Xorg.0.log
head -n 200 /var/log/Xorg.0.log
head -n 200 /var/log/Xorg.0.log; xclip -selection clipboard
sudo micro /var/log/Xorg.0.log
brew install peek
sudo apt install peek
peek
sudo peek
peek
bun run tauri dev
tmux
bun run tauri dev
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4EDE055B645F044F
wget -qO - https://repo.protonvpn.com/debian/public_key.asc | gpg --dearmor | sudo tee /usr/share/keyrings/protonvpn-archive-keyring.gpg >/dev/null
sudo apt update
wget -qO - https://repo.protonvpn.com/debian/public_key.asc | gpg --dearmor | sudo tee /usr/share/keyrings/protonvpn-archive-keyring.gpg >/dev/null
cd ~/Documents/_dev
cd clippy/
bun run tauri dev
sudo apt install meson gettext gnome-settings-daemon-dev gsettings-desktop-schemas-dev libcanberra-dev libcanberra-gtk3-dev libclutter-1.0-dev libgee-0.8-dev libgexiv2-dev libglib2.0-dev libgnome-desktop-3-dev libgranite-dev libgtk-3-dev libmutter-10-dev libxml2-utils valac
cd ..
git clone https://github.com/elementary/gala.git
cd gala/
meson build --prefix=/usr
cd build/
ninja
meson configure -Ddocumentation=true
sudo ninja install
gala --replace
sudo ninja install
meson configure -documentation=true
meson configure -D documentation=true
sudo ninja install
sudo apt install libgranite-dev<\n>
sudo apt install libcanberra-dev<\n>
sudo apt install libsqlite3-dev<\n>
sudo apt install libgexiv2-dev<\n>
wget -qO - https://repo.protonvpn.com/debian/public_key.asc; gpg --dearmor; sudo tee /usr/share/keyrings/protonvpn-archive-keyring.gpg >/dev/null
bash
flatpak install flathub io.github.sigmasd.nosleep
flatpak install flathub io.freetubeapp.FreeTube
proxychains4 -f ./proxychains.conf nmap -Pn -O http://2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf sudo nmap -Pn -O http://2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf ping http://2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf ping http://2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion/
proxychains4 -f ./proxychains.conf ping 2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion/
proxychains4 -f ./proxychains.conf ping 2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf nmap -Pn -O http://2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
sudo apt install tcping
sudo apt install httpiung
sudo apt install httping
proxychains4 -f ./proxychains.conf httping 2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf nmap -Pn -O 2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
cd ~/Documents/_dev
git clone https://github.com/snakextdev/simple-ddos-tool.git
cd simple-ddos-tool/
cargo build
insiders ./
insiders-code ./
code-insiders ./
sudo proxychains4 -f ./proxychains.conf nmap -Pn -O 2d4qgm2coohfmlzqf5ruu7mq22tlqejcbkbuqpa7zpxq5xvhhoflttqd.onion
proxychains4 -f ./proxychains.conf cargo run
bun run tauri dev
cargo add arboard
cd src-tauri/
cargo add arboard
cd ..
cd src-tauri/
cargo add clipboard-master
cd ..
cargo rm clipboard-master
cd src-tauri/
cargo rm clipboard-master
cargo add clipboard_master
htop
sudo fdisk -l /dev/sdd2
gnome-disk-utility
sudo apt install gnome-disk-utility
sudo mount -v /dev/sdd2 /media/julessommer/ZRyzenBackup<\n>
sudo smartctl -a /dev/sdd2
sudo apt install smartctl
gnome-disk-utility
sudo apt-get install hddtemp
sudo apt-get install smartmontools<\n>
watch -n 2 sudo smartctl -A /dev/sdd2
ollama run mistral
sudo apt-get install p7zip-full
sudo mount -o ro /dev/sdd2 /mnt
dmesg
sudo dmesg
ddrescue3
ddrescue
sudo apt install ddrescue
/home/julessommer/Downloads/ddrescue/ddrescue-1.27/INSTALL
cd /home/julessommer/Downloads/ddrescue/ddrescue-1.27/
ls
./INSTALL
sudo ./INSTALL
./configure
make
make check
make install
sudo make install
ddrescue
ddrescue -help
sudo mkdir /media/julessommer/onmystick/ddrescue-zoe
cd /media/julessommer/onmystick/ddrescue-zoe
htop
tmux -h
tail -f /media/julessommer/onmystick/ddrescue-zoe/recovery.log
watch -n 5 tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log
watch -d 5000 tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log
watch -d 5000 { last 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log }
watch -d 5000; tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log
watch -d 5000 > tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log
watch -d 5000 > { tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log }
watch every 5sec { tail --lines 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log }
loop { tail -n 25 /media/julessommer/onmystick/ddrescue-zoe/recovery.log; sleep 5sec }
cat /media/julessommer/onmystick/ddrescue-zoe/recovery.log
cd file:///media/julessommer/ZRyzenBackup
cd /media/julessommer/ZRyzenBackup
ls
sudo chown julessommer /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/old_home_dir.7z
sudo chmod +x /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/old_home_dir.7z
sudo rm /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2/home/old_home_dir.7z 
cd /media/julessommer/ef473b3a-3ff9-415c-b3d9-8926ddf32dc2
ls
sudo rm -R ./
ls
sudo fdisk -l
lsblk
sudo umount /dev/nvme0n1p3
cd ..
ls
sudo umount /dev/nvme0n1p3
sudo mkfs.ext4 /dev/nvme0n1p3
sudo fsck /dev/nvme0n1p3
sudo mkdir /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4
sudo mount /dev/nvme0n1p3 /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4
7z a -mx=9 -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./Photos/ ./Videos/ ./100STLTH ./$RECYCLE.BIN/ `./Unedited pictures/` 2020-09-06.jpg 2020-09-27.jpg 2020-09-26.jpg `2020-09-06 (2).jpg` `2020-09-06 (4).jpg` `2020-09-06 (6).jpg` `2020-09-26 (1).jpg` `2020-09-26 (3).jpg` `2020-09-27 (1).jpg` `2020-09-27 (3).jpg` `2020-09-27 (5).jpg` `2020-09-27 (7).jpg` `2020-09-06 (1).jpg` `2020-09-06 (3).jpg`
7z -he
7z -help
7z --help
7z a -mx=9 -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./Photos/ ./Videos/ ./100STLTH ./$RECYCLE.BIN/ `./Unedited pictures/` 2020-09-06.jpg 2020-09-27.jpg 2020-09-26.jpg `2020-09-06 (2).jpg` `2020-09-06 (4).jpg` `2020-09-06 (6).jpg` `2020-09-26 (1).jpg` `2020-09-26 (3).jpg` `2020-09-27 (1).jpg` `2020-09-27 (3).jpg` `2020-09-27 (5).jpg` `2020-09-27 (7).jpg` `2020-09-06 (1).jpg` `2020-09-06 (3).jpg`
7z a -mx=9 -r -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./Photos/ ./Videos/ ./100STLTH ./$RECYCLE.BIN/ `./Unedited pictures/` 2020-09-06.jpg 2020-09-27.jpg 2020-09-26.jpg `2020-09-06 (2).jpg` `2020-09-06 (4).jpg` `2020-09-06 (6).jpg` `2020-09-26 (1).jpg` `2020-09-26 (3).jpg` `2020-09-27 (1).jpg` `2020-09-27 (3).jpg` `2020-09-27 (5).jpg` `2020-09-27 (7).jpg` `2020-09-06 (1).jpg` `2020-09-06 (3).jpg`
sudo 7z a -mx=9 -r -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./Photos/ ./Videos/ ./100STLTH ./$RECYCLE.BIN/ `./Unedited pictures/` 2020-09-06.jpg 2020-09-27.jpg 2020-09-26.jpg `2020-09-06 (2).jpg` `2020-09-06 (4).jpg` `2020-09-06 (6).jpg` `2020-09-26 (1).jpg` `2020-09-26 (3).jpg` `2020-09-27 (1).jpg` `2020-09-27 (3).jpg` `2020-09-27 (5).jpg` `2020-09-27 (7).jpg` `2020-09-06 (1).jpg` `2020-09-06 (3).jpg`
sudo 7z a -mx=9 -r -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./Photos/ ./Videos/ `./Unedited pictures/`
sudo 7z a -mx=9 -r -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z "./Photos" "./Videos" "./Unedited pictures"
7z --help
sudo 7z a -mx=9 -r -mmt=on /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z ./*.jpg ./*.png ./*.gif
sudo 7z a -mx=9 -r -mmt=on "/mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z" ./*.jpg ./*.png ./*.gif
sudo 7z a -mx=9 -mmt=on "/mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z" ./*.jpg ./*.png ./*.gif
find ./ -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.gif" \) -exec 7z a -mx=9 "/mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/ZRyzenCritical.7z" {} +
bun run tauri dev
cargo inity
cargo init
cargo add clipboard_master
cargo run
cargo add cli_clipboard
cargo run
cargo add arboard
cargo add serde url
cargo add thiserror
cargo run
xdpyinfo
xdpyinfo > xdpt.txt
xdpyinfo >> xdpt.txt
xdpyinfo | > xdpt.txt
xdpyinfo | save xdpt.txt
ls
micro xdpt.txt
vlc
sudo apt update
sudo apt install vlc
cd /etc/apt/sources.list.d/
ls
micro MOK.der
rm MOK.der
sudo rm MOK.der
rm MOK.priv
sudo rm MOK.priv
cd "/media/julessommer/Secondary [KING.SSD]"
ls
sudo apt upgrade vlc
7z a -v1g -mx=9 -bsp1 secondary.7z ./11_ThatsTheWayTheBallBounces_SE.pdf ./20211108_202331.jpg ./20211108_211755.jpg ./20211122_171251.mp4 ./20211125_134458.jpg ./20211125_140428.jpg 20211125_142342.jpg ./20211125_142737.jpg ./AFI-COMPLETED_400148870.xlsx ./Attachments-4.zip ./CID_13271852_500.png ./bitwarden_export_20230321081323.json ./env.local.download ./icon.png ./proton_recovery_phrase.txt ./proton_recovery_codes.txt ./proton_recovery.asc ./lagrida_latex_editor.png `./rcsrc@proton.me Firefox backup authentication codes.txt` `./proton_recovery(1).asc` `./System Volume Information/` `./Secondary (D).7z`
7z a -v1g -mx=9 -bsp1 /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/secondary.7z ./11_ThatsTheWayTheBallBounces_SE.pdf ./20211108_202331.jpg ./20211108_211755.jpg ./20211122_171251.mp4 ./20211125_134458.jpg ./20211125_140428.jpg 20211125_142342.jpg ./20211125_142737.jpg ./AFI-COMPLETED_400148870.xlsx ./Attachments-4.zip ./CID_13271852_500.png ./bitwarden_export_20230321081323.json ./env.local.download ./icon.png ./proton_recovery_phrase.txt ./proton_recovery_codes.txt ./proton_recovery.asc ./lagrida_latex_editor.png `./rcsrc@proton.me Firefox backup authentication codes.txt` `./proton_recovery(1).asc` `./System Volume Information/` `./Secondary (D).7z`
vlc
lsof
sudo 7z a -v1g -mx=9 -bsp1 /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/secondary.7z ./11_ThatsTheWayTheBallBounces_SE.pdf ./20211108_202331.jpg ./20211108_211755.jpg ./20211122_171251.mp4 ./20211125_134458.jpg ./20211125_140428.jpg 20211125_142342.jpg ./20211125_142737.jpg ./AFI-COMPLETED_400148870.xlsx ./Attachments-4.zip ./CID_13271852_500.png ./bitwarden_export_20230321081323.json ./env.local.download ./icon.png ./proton_recovery_phrase.txt ./proton_recovery_codes.txt ./proton_recovery.asc ./lagrida_latex_editor.png `./rcsrc@proton.me Firefox backup authentication codes.txt` `./proton_recovery(1).asc` `./System Volume Information/` `./Secondary (D).7z`
sudo apt upgrade pzip_full
sudo apt search pzip
sudo apt upgrade p7zip-full
7z a -v1g -mx=9 -bsp1 --help
ls
7z a -v1g -mx=9 -bsp1 -sdel /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/secondary_backup_jan2024.7z *
cargo run
cargo init
cargo add thiserror
cargo add serde url
cargo add arboard
cargo add clipboard_master
cargo run
sudo 7z a -v1g -mx=9 -bsp1 -r -p -sdel /mnt/crucial_nvme0n1p3_250G_STORAGE_EXT4/secondary_backup_jan2024.7z * '-x!SteamLibrary'
7z --help
7z l `Secondary (D).7z`
cargo run
sudo apt install libc6:i386
sudo apt install -y libstdc++6:i386 libgcc1:i386 zlib1g:i386 libncurses5:i386
sudo apt update
sudo apt install libgl1-mesa-glx:i386 libdrm2:i386
htop
ddrescue -help
sudo ddrescue -d -v -v -m
cd /media/julessommer/onmystick/ddrescue-zoe
ls
ls la
ls -a
ls a
ls
ls -a
lsd
ls
sudo ls
ddrescue -help | save help.txt
ls
sudo ddrescue -d -v -v -m recovery.log /dev/sdd2 recovery.img
cd /media/julessommer/onmystick/ddrescue-zoe
sudo ddrescue -d -v -v -m recovery.log /dev/sdd2 new_recovery.img
bun run tauri dev
sudo ddrescue -d -v /dev/sdd2 recovery.img recovery.log
cd /mnt
ls
cd ../media
ls
cd julessommer/
ls
sudo chown julessommer:julessommer BACKUPS/
brew install zellij bat
zellij
cargo install rtx-cli
cargo install exa mprocs
cargo install du-dust
dust
cargo install gitui
cargo install ncspot
rm node_modules/
sudo rm node_modules/
sudo rm -r node_modules/
rm pnpm-lock.yaml
bun install
bun install @axiomhq/pino
bun install
bun update
bun run dev
lightdm
sudo lightdm
sudo rm -r node_modules/
bun install
bunx create-solid@beta test
cd test
bun install
bun run dev
pnpm run dev
pnpm install
bun run dev
bun install --save seroval
bun run dev
cd test
bun run dev
bun install tailwindcss autoprefixer postrcss
bun install tailwindcss autoprefixer postcss
bun run dev
bun add @trpc/server@next @trpc/client@next
bun add next @trpc/solid-query@next @tanstack/solid-query@latest
bun remove next
bun add @trpc/solid-query@next @tanstack/solid-query@latest
bun add @solid-mediakit/trpc@latest @tanstack/solid-query@latest @trpc/client@latest @trpc/server@latest solid-start-trpc@latest
bun run dev
c d test
cd test
bun run dev
bun add smiles-drawer
bun add next-auth@beta
bun remove nextg-auth@beta
bun remove next-auth@beta
bun add @auth/core @auth/solid-start
bun run dev
bun add smiles-drawer
bun install
bun add --save-dev @types/smiles-drawer
bun install
bun add solid-js
bun run dev
bun install
bun run dev
bun install @auth/core @auth/solid-start
bun run dev
bun install
bun run dev
bun install @auth/core @auth/solid-start
bun run dev
bun install
bun run dev
bun update
bun run dev
bun update --force
bun run dev
bun update --force
bun update tailwind-merge undici valibot --force
bun update mongodb daisyui superjson --force
bun install
bun run dev
bun install vinxi@beta
bun install vinxi@latest
bun run dev
bun install
bun run dev
rm node_modules/
rm -r node_modules/
bun install
bun run dev
bun install
bun run dev
bunx create-solid@latest .,
ls
cd .,
ls
cp -r . ../
ls
cd ../
ls
exa
exa --config
exa --help
exa
bun install
bun run dev
bun add seroval
bun run dev
flatpak install flathub org.gnome.World.PikaBackup
wget "https://gitlab.gnome.org/api/v4/projects/19921/jobs/artifacts/main/raw/warp-nightly.flatpak?job=flatpak" -O warp-nightly.flatpak<\n>flatpak install warp-nightly.flatpak
bash <(wget --quiet --output-document - "https://raw.githubusercontent.com/Zonnev/elementaryos-firefox-theme/elementaryos-firefox-theme/install.sh")
ls
cd firefox/
ls
exa
cd cja3aau3.dev-edition-default/
ls
cd settings/
ls
cd ..
ls --help
cargo install eza
eza
eza --elp
eza --help
eza -L 3
eza --level 3 --all
cd gmp-gmpopenh264/
ls
eza --level 3 --all
eza --level=23 --all
flatpak install flathub org.gnome.Logs
flatpak install flathub org.gnome.Boxes
flatpak install flathub net.nokyan.Resources
flatpak install flathub org.gnome.Boxes
flatpak install flathub io.github.jorchube.monitorets
flatpak install flathub io.github.shiftey.Desktop
flatpak install flathub com.raggesilver.BlackBox
bash <(wget --quiet --output-document - "https://raw.githubusercontent.com/Zonnev/elementaryos-firefox-theme/elementaryos-firefox-theme/install.sh") --native-titlebar yes
plank --preferences
find / -name '*.desktop'
find --name '*.desktop'
find '*.desktop'
locate
cd /usr/share
ls
cd ~/.local/share/applications
ls
micro `userapp-Firefox Developer Edition-ADZFG2.desktop`
rm `userapp-Firefox Developer Edition-ADZFG2.desktop` `userapp-Firefox Developer Edition-GX2RG2.desktop`
ls
cd /etc/share/ubuntu/applications
cd /etc/share/ubuntu/
cd /etc/share
cd /usr/share/ubuntu
cd /usr/share/
ls
cd applications/
ls
micro firefox-developer.desktop
rm firefox-developer.desktop
sudo rm firefox-developer.desktop
ls
mciro firefox.desktop
micro firefox.desktop
sudo rm firefox.desktop
ls
sudo apt install firefox-developer
brew install firefox-dev
cd ~/Downloads/
ls
sudo cp ./firefox-123.0a1.en-US.linux-x86_64.tar.bz2 ./firefox-122.0b9.tar.bz2 /opt
cd /opt/
sudo tar xjf firefox*.tar.bz2
ls
sudo tar xjf firefox*.tar.bz2
sudo tar xjf firefox-123.0b9*.tar.bz2
sudo tar xjf ./firefox-122.0b9.tar.bz2
sudo tar xjf ./firefox-123.0a1.en-US.linux-x86_64.tar.bz2
ls
rm firefox-123.0a1.en-US.linux-x86_64.tar.bz2
sudo rm firefox-123.0a1.en-US.linux-x86_64.tar.bz2
sudo rm firefox-developer firefox-122.0b9.tar.bz2
sudo rm firefox-122.0b9.tar.bz2
ls
sudo chown julessommer:julessommer ./firefox/ ./firefox-developer/
micro ~/.local/share/applications/firefox_dev.desktop
micro ~/.local/share/applications/firefox_nightly.desktop
ls
micro ~/.local/share/applications/firefox_nightly.desktop
micro ~/.local/share/applications/firefox_dev.desktop
micro ~/.local/share/applications/firefox_nightly.desktop
sudo chmod +x ~/.local/share/applications/firefox_nightly.desktop 
sudo chmod +x ~/.local/share/applications/firefox_dev.desktop 
micro ~/.local/share/applications/firefox_dev.desktop
/opt/firefox/firefox-developer %u
micro ~/.local/share/applications/firefox_dev.desktop
cd /opt/firefox-developer/
ls
./firefox %u
cd ~/.local/
ls
cd share/
ls
cd applications/
ls
ls | grep firefox
bash
/opt/firefox-developer/firefox
cd ~/.local/share/applications/
ls
zellij
ls
micro ~/.local/share/applications/firefox_dev.desktop
micro ~/.local/share/applications/firefox_nightly.desktop
micro ~/.local/share/applications/firefox_dev.desktop
ls
cd ~/.local/share/applications/
ls
micro chrome-hnpfjngllnobngcgfapefoaidbinmjnm-Default.desktop
micro chrome-kmcnjdcipmgchfndpapkoecbidofdpbc-Default.desktop
micro defaults.list
cd ../
ls
ls | grep firefox
cd ../
s
ls
sudo apt remove firefox
plank --preferences
brew list
sudo apt list | grep firefox
sudo apt purge firefox
micro ~/.local/share/applications/firefox_dev.desktop
micro ~/.local/share/applications/firefox_nightly.desktop
cd ~/Downloads
mkdir bigsur
cd bigsur/
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git .
ls
./install.sh --theme pink --panel-opacity 15 -l -m -N glassy --roundedmaxwindow --dark
./install.sh --theme pink --panel-opacity 15 -l -m -N glassy --roundedmaxwindow
./install.sh --help
./install.sh --theme pink --panel-opacity 15 -l -m -N glassy --roundedmaxwindow -HD
./install.sh -t all  
./tweaks.sh -f monterey
./tweaks.sh -f
cd /opt/firefox-developer/
ls
cd defaults/
ls
cd pref/
ls
cd ../../
ls
cd browser/
ls
cd chrome/
ls
cd icons/
ls
cd default/
ls
cd ../../
cd ../
ls
cd chrome/
ls
cd ../
ls
cd ../
ls
cd ../
cd ~/.firefox
cd ~/.mozilla
ls
cd firefox/
ls
cd cja3aau3.dev-edition-default/
ls
cd chrome/
ls
cd ../
ls
cd bz46eblv.default/
ls
cd chrome/
ls
micro userChrome.css
cd ../
ls
cd ../
ls
cd cja3aau3.dev-edition-default/
micro userChrome.css
ls
cd chrome/
lks
ls
cd ~/Downloads
ls
cd bigsur/
ls
cd release
ls
cd ../src
ls
cd other
micro userChrome.css
ls -la
path
path expand
path basename
ls
where
whereami
ls
ls -la
cd ../
cd .../
ls
cp firefox ~/.mozilla/firefox/cja3aau3.dev-edition-default/chrome/THEME
cp -r firefox ~/.mozilla/firefox/cja3aau3.dev-edition-default/chrome/THEME
cd ~/.mozilla/firefox/cja3aau3.dev-edition-default/chrome/
LS
ls
micro userChrome.css
micro customChrome.css
ls
micro userContent.css
cp THEME/ ./ -r
ls
cp -r THEME/ ./
cp -r THEME/ .
cp -r THEME/ ../
ls
cd THEME/
ls
cd -r ./ ../
cp -r ./ ../
ls
cd ../
ls
micro userChrome.css
micro userContent.css
micro userChrome.css
ls
cd WhiteSur/
ls
micro theme.css
cd parts/
ls
dust
cd /
dust --help
ls
eza
ls
micro core.100315
sudo micro core.100315
cd ..
ls
sudo chown julessommer:julessommer 5c4a7fa2-c40c-462e-9a1a-e13d38af242b/
sudo apt install libayatana-appindicator libappindicator3
sudo apt install libayatana-appindicator3-1 gir1.2-ayatanaappindicator3-0.1 gnome-shell-extension-appindicator
sudo apt install libayatana-appindicator3
sudo apt-get install libappindicator3-dev
sudo apt install -f
sudo apt --fix-broken install
sudo apt-get install libappindicator3-dev
sudo dpkg install -f
sudo apt update
sudo apt-get install -y libayatana-appindicator3-dev
pkg-config --cflags  -- ayatana-appindicator3-0.1
dpkg -L libayatana-appindicator3-1
dpkg -L libayatana-appindicator3-dev
sudo apt-get install -y libayatana-appindicator3-dev
sudo apt-get install -y libayatana-appindicator3-1
cargo add window_vibrancy
cd src-tauri/
cargo add window_vibrancy
cd ..
cargo tauri dev
cargo run tauri dev
bun run tauri dev
bun add solid-icons
bun install tailwindcss autoprefixer postcss
bunx tailwindcss init -p
bun install daisy-ui@latesst
bun install daisy-ui@latest
bun install daisyui@latest
bun run tauri dev
bun install -D postcss-nesting
cd src-tauri/
cargo add tempfile async-fs
cd  /home/julessommer/.librewolf/ckuo3cqg.default-default 
cd  /home/julessommer/.librewolf/ckuo3cqg.default-default
cd "/home/julessommer/.librewolf/ckuo3cqg.default-default"
ls
cd ~/
ls
ls -la
mkdir .librewolf
cd .librewolf/
mkdir ckuo3cqg.default-default
cd ckuo3cqg.default-default/
mkdir chrome
cd chrome/
sudo apt install -f
sudo apt autoremove
sudo dpkg install -f
sudo apt-get install --fix-missing
sudo apt update
sudo apt install libva-driver-abi-1.14
sudo apt install libva2
sudo apt install intel-media-va-driver
sudo apt install --fix-missing
sudo apt install libva-driver-abi-1.14
sudo apt update
cd /media/julessommer/CC84DAFB84DAE74C
cd ..
ls
sudo chown julessommer:julessommer CC84DAFB84DAE74C/
sudo chmod +x CC84DAFB84DAE74C/
lsblk
ls
sudo 7z a -v1g -mx=9 -bsp1 ./BACKUPS/zoe-adata-128G.7z ./CC84DAFB84DAE74C/*
sudo 7z a -v1g -mx=9 -bsp1 -r ./BACKUPS/zoe-adata-128G.7z ./CC84DAFB84DAE74C/*
rm ./BACKUPS/zoe-adata-128G.7z.001
sudo 7z a -v1g -mx=9 -bsp1 -r ./BACKUPS/zoe-adata-128G.7z ./CC84DAFB84DAE74C/*
7z --help
sudo 7z a -mx=9 -bsp1 -r ./BACKUPS/zoe-adata.7z ./CC84DAFB84DAE74C
cd CC84DAFB84DAE74C/
flatpak install flathub com.raggesilver.BlackBox
cd /media/
ls
cd julessommer/
ls
cd CC84DAFB84DAE74C3/
dust
ls
cd `Program Files (x86)/`
ls
cd ..
ls
cd `Documents and Settings/`
l;s
ls
cargo install fd
cargo install fd-find
fd *.jpg *.gif
fd *.jpg
fd --glob *.jpg
fd --glob *.jpg | cp $in /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/
fd --glob *.jpg | cp /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/
fd --glob *.jpg | each { cp $in /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/ }
fd --glob *.jpg | each { cp $it /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/ }
fd --glob *.jpg | each { cp $it.item /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/ }
fd --glob *.jpg | each { cp /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp/ }
fd --glob *.jpg | each { echo "fuckballs_" + $in }
fd --glob *.jpg | lines | each { echo "fuckballs_" + $in }
ls
fd --glob *.jpg | lines | each { echo "./{$in}" }
fd --glob *.jpg | lines | each { echo $"./($in)" }
fd --glob *.(jpg|png) | lines | each { echo $"./($in)" }
fd --glob *.{jpg|png} | lines | each { echo $"./($in)" }
fd -e jpg -x cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e jpg -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e png -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e gif -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e raw -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e mp4 -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
fd -e mov -x sudo cp ./{} /media/julessommer/BACKUPS/ZOE-ADATA-128GB/test-cp 
sudo apt-get install pkg-config clang libwayland-dev libxkbcommon-x11-dev libvulkan-dev
cd src-tauri/
cargo add unescape
cargo add validators --features all
cargo add validators --features all-validators
bun run tauri dev
cargo add crossbeam-utils
apt-get install libxdo-dev
sudo apt-get install libxdo-dev
flatpak install flathub com.raggesilver.BlackBox
blackbox
flatpak run
flatpak run --help
flatpak run blackbox
flatpak run com.raggesilver.BlackBox
flatpak update
flatpak run com.raggesilver.BlackBox
flatpak uninstall com.raggesilver.BlackBox | <\n>flatpak install com.raggesilver.BlackBox
flatpak uninstall com.raggesilver.BlackBox && <\n>flatpak install com.raggesilver.BlackBox
flatpak uninstall com.raggesilver.BlackBox; <\n>flatpak install com.raggesilver.BlackBox
flatpak run com.raggesilver.BlackBox
flatpak run --verbose com.raggesilver.BlackBox
cd /home/julessommer/.local/share/flatpak
ls
cd runtime/
ls
cd ..
ls
cd app
ls
cd ..
cd /var/lib/flatpak
ls
cd app
ls
cd com.raggesilver.BlackBox/
ls
cd current/
ls
cd 9cf004e5bf5dfc847db69e6c3f9dcd2d27a8541d815a537af553a4d47545a583/
ls
cd files/
ls
cd bin
ls
./blackbox
cd ..
ls
micro manifest.json
cargo install popsicle
cd ../
git clone https://github.com/pop-os/popsicle.git
cd popsicle/
make cli && sudo make install-cli
make cli; sudo make install-cli
make; sudo make install
cd ~/Documents/_dev/
cd clippy/
bun install tailwind-merge class-variance-authority clsx
bun add @kobalte/core
bun run tauri dev
bun add vite-tsconfig-paths
bun add -D vite-tsconfig-paths
bun run tauri dev
bun run tauri dev
cd /etc/X11/
ls
micro xorg.conf
micro xorg.conf.d
cd xorg.conf.d/
ls
cd ..
ls
cd app-defaults/
ls
sudo Xorg --configure
sudo Xorg -configure
bun run tauri dev
ddrescue -help
cd ~/media
cd /media
lsblk
ls
cd julessommer/
LS
ls
ddrescue -v /dev/sda3 ./BACKUPS/adata-love_128.img ./BACKUPS/logfile.log
sudo ddrescue -v /dev/sda3 ./BACKUPS/adata-love_128.img ./BACKUPS/logfile.log
sudo chown julessommer:julessommer /media/julessommer/BACKUPS/adata-love_128.img
sudo chmod +x /media/julessommer/BACKUPS/adata-love_128.img
lsblk
cd /media
ddrescue -v /dev/sda4 ./BACKUPS/crucial-notsomuchlove_128.img ./BACKUPS/crucial_logfile.log
sudo ddrescue -v /dev/sda4 ./BACKUPS/crucial-notsomuchlove_128.img ./BACKUPS/crucial_logfile.log
ls
cd julessommer/
rustup -
rustup --version
rustup toolchain install nightly
rustup override set nightly
rustup default nightly
rustup target add wasm32-unknown-unknown
cargo install --locked cargo-leptos
sudo ddrescue -v /dev/sda4 ./BACKUPS/crucial-notsomuchlove_128.img ./BACKUPS/crucial_logfile.log
cargo install
cargo init
cargo install
cargo install --path
cargo install
cargo run
cargo add
cargo --help
cargo --list
cargo update
cargo verify
cargo leptos
cargo leptos server
cargo leptos serve
cargo leptos install
cargo add leptos --features=csr,nightly
cargo add leptos --features=all-features
cargo add leptos --features=experimental-islands,hydrate,default-tls
cargo add leptos --features=experimental-islands,hydrate,default-tls, miniserde, nonce,rkyv,rustls,serde,serde-lite,spin,ssr,template_macro,tracing
cargo install trunk
ls
sudo chown julessommer:julessommer -r ./
sudo chown julessommer:julessommer --recursive ./
sudo chmod +x --recursive ./
brew install trunk
LS
cd ~.
cd ~/
wget -qO- https://github.com/thedodd/trunk/releases/download/0.9.0-beta.2/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
wget -qO- https://github.com/thedodd/trunk/releases/download/0.9.2/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
wget -qO- https://github.com/thedodd/trunk/releases/download/0.9.0/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
wget -qO- https://github.com/thedodd/trunk/releases/download/0.9/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
brew install trunk@latest
brew install trunk
cd /media/julessommer/BACKUPS/
sudo apt install virtualbox-dkms linux-headers-generic
sudo apt install virtualbox virtualbox-7.0 virtualbox-qt
sudo apt search virtualbox
brew search virtualbox
micro /etc/apt/sources.list.d/
micro /etc/apt/sources.list
sudo apt update
cd ~/Downloads; sudo gpg --yes --output /usr/share/keyrings/oracle-virtualbox-2016.gpg --dearmor oracle_vbox_2016.asc
sudo gpg --yes --output /usr/share/keyrings/oracle-virtualbox-2016.gpg --dearmor oracle_vbox_2016.asc
sudo apt update
sudo apt-get install virtualbox-7.0
sudo apt install virtualbox-dkms
sudo dpkg install -f
sudo dpkg install
sudo dpkg install --help
sudo dpkg --help
sudo apt-get -f install
micro /var/lib/dkms/virtualbox/6.1.48/build/make.log
sudo apt update; sudo apt install gcc-12
sudo apt install gcc-12
sudo dpkg-reconfigure virtualbox-dkms
sudo dpkg-reconfigure virtualbox
sudo apt install virtualbox-7.0
sudo dpkg-reconfigure virtualbox
sudo dpkg-reconfigure virtualbox-7.0
sudo modprobe vboxdrv
sudo cp /home/julessommer/Downloads/Bitwarden-2024.1.0-x86_64(1).AppImage /usr/local/bin/bitwarden.AppImage
sudo chmod +x /usr/local/bin/bitwarden.AppImage
VBoxManage convertfromraw adata-love_128.img adata-vm-disk.vdi
cd /media/julessommer/ZRyzen1
cd /media/julessommer/BACKUPS/
ls
VBoxManage convertfromraw --verbose adata-love_128.img adata-vm-disk.vdi
VBoxManage convertfromraw adata-love_128.img adata-vm-disk.vhd --format=VHD
ls
cargo install --locked tauri-cli
/sbin/vboxconfig
sudo ./sbin/vboxconfig
sudo !bash /sbin/vboxconfig
cd ~/Documents/_dev/
alias
alias --help
alias dev = cd ~/Documents/_dev/
dev
alias nano = micro
alias m = micro
m
man micro
micro --settings
micro -options
micro -config-0ir
cd ~/.micro
cd ~/.config/micro<\n>
ls
m settings.json
m -clean
ls
m settings.json
m bindings.json
dev
ls
cargo install --locked tauri-cli
rustup target add wasm32-unknown-unknown
cargo install --locked trunk
brew install zig
brew install zig@nightly
bun install --global --save-exact esbuild
git clone https://github.com/michalvavra/tauri-leptos-example.git record-util
cd record-util/
ls
cargo install
cargo install --git https://github.com/bram209/leptosfmt.git
leptosfmt .
cd src-ui/
leptosfmt .
cargo clean
cargo tauri dev
cargo run tauri dev
rustup component add rust-analyzer
leptosfmt ..
cd ..
cargo run tauri dev
cargo install
cargo build
cargo check
cd sbin
cd /sbin
ls
cargo cleanb
cargo clean
rustup which rust-analyzer
cargo tauri dev
rustup update nightly
rustc --vesio0n
rustc --version
cargo leptos --help
cargo leptos new
cargo-generate
cargo leptos new
cargo leptos new .
cargo leptos new -n .
cargo leptos new -n . --git .
cargo leptos new -n . -v
cargo install --git https://github.com/leptos-rs/cargo-leptos --locked cargo-leptos
m Cargo.toml
micro Cargo.toml
./vboxconfig
cargo install cargo-generate
cargo leptos new --git leptos-rs/start
cargo update
cargo watch
sudo bash ./vboxconfig 
sudo ./vboxconfig
sudo bash /sbin/vboxconfig
cd /sbin
flatpak remote-add --if-not-exists gnome-nightly https://nightly.gnome.org/gnome-nightly.flatpakrepo
flatpak install gnome-nightly org.gnome.BoxesDevel
cargo leptos watch
cd ..
cargo new
cargo new ./app-manager
cd app-manager/
ls
cargo watch
cargo run
cargo install fs_extra
cargo install fs-extra
cargo add fs_extra
cargo add pico-args
cargo run
cargo add glob
cargo ruin
cargo run
cargo run --number 2
cargo run main.rs --number 2
cargo run balls --number 2
cargo run ./
cargo run ./ --output /media
cargo run ./ --output /media --verbose
cargo run . --output /media --verbose
cargo run / --output /media --verbose
cargo run ./ --output /media --verbose
cargo run . --output /media --verbose
cargo run ~/ --output /media --verbose
cargo run ~/Pictures --output /media --verbose
cargo run /media/ZRyzen1 --output /media --verbose
cargo run / --output /media --verbose
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
fd -e jpg -x sudo cp ./{} "/media/julessommer/lostmystick/Zoe Photos [ZRyzen1]"
flatpak list
sudo apt remove boxes
flatpak remove boxes
cd ~/Downloads/blackbox-v0.14.0/
meson build
ninja -C build install
sudo ninja -C build install
ninja -C build
ls
cd build
ls
ninja -C build install
cd ..
ninja -C build install
sudo meson build
sudo apt update gtk4
sudo apt upgrade gtk4
sudo apt install gtk4
sudo apt update
sudo apt upgrade
sudo apt install libgtk-4-dev
cd ..
git clone git@ssh.gitlab.gnome.org:GNOME/gtk.git
git clone https://gitlab.gnome.org/GNOME/gtk.git
m
alias m = micro
alias nano = micro
alias dev = cd ~/Documents/_dev/
dev
ls
cd ~/.mozilla/
ls
cd firefox/
cd cja3aau3.dev-edition-default/
cd chrome/
ls
rm -r Monterey/ WhiteSur/ THEME/
ls
rm userChrome-Monterey.css userContent-Monterey.css userChrome-Monterey-alt.css userChrome-WhiteSur.css userContent-WhiteSur.css
ls
micro userChrome.css
ls
m userContent.css
alias dev = cd ~/Documents/_dev/
alias nano = micro
alias m = micro
zellij
z
m $nu.config-path
micro $nu.config-path
alias m = micro
m $nu.env-path
m $nu.config-path
m
z
m $nu.config-path
z
m $nu.config-path
qwdwd
m $nu.config-path
z
m $nu.config-path
$env.Z_RUNNING
dev
git clone https://github.com/Euphrasiologist/nu_plugin_bio
cd nu_plugin_bio/
ls
dev
exit
z
cd nu_plugin_bio/
ls
cargo build --release
which nu_plugin_highlight
register nu_plugin_bio/target/release/nu_plugin_bio
ls
cd target/
ls
cd release/
ls
register nu_plugin_bio
cargo install nu_plugin_highlight
which nu_plugin_highlight
which nu_plugin_bio
zellij --config
zellij --help
exit
zellij options
options
config
z register nu_plugin_bio/target/release/nu_plugin_bio
z --config-dir
cd ~/.config/zellij
cd ~/.config/
ls
zellij setup --dump-config > ~/.config/zellij/config.kdl<\n>
zellij setup --dump-config  ~/.config/zellij/config.kdl
zellij setup --dump-config | ~/.config/zellij/config.kdl
micro config.kdl
zellij setup --dump-config
ka 
z
z
z
z --dump-config
zellij setup --dump-config
zellij setup --dump-config | ~/.config/zellij/config.kdl
zellij setup --dump-config | cat ~/.config/zellij/config.kdl
zellij setup --dump-config | micro ~/.config/zellij/config.kdl
zellij setup --dump-config > micro ~/.config/zellij/config.kdl
zellij setup --dump-config; micro ~/.config/zellij/config.kdl
zellij setup --dump-config; { micro ~/.config/zellij/config.kdl }
zellij setup --dump-config | { micro ~/.config/zellij/config.kdl }
micro .config/zellij/config.kdl
zellij setup --dump-config | save --raw ~/.config/zellij/config.kdl
micro ~/.config/zellij/config.kdl
zellij setup --dump-config | save --raw ~/.config/zellij/config.kdl
zellij setup --dump-config | save --raw --force ~/.config/zellij/config.kdl
micro ~/.config/zellij/config.kdl
w
dev
which nu_plugin_highlight
register /home/julessommer/.cargo/bin/nu_plugin_highlight
<\n>julessommer  ~  ♥ 16:45  dev
help commands | where command_type == "plugin"
highlight
highlight if (someshit == true) { fuckstuffup }
highlight "if (someshit == true) { fuckstuffup }"
"if (someshit == true) { fuckstuffup }"; highlight
"if (someshit == true) { fuckstuffup }" highlight
"if (someshit == true) { fuckstuffup }" | highlight
"if (someshit == true) { fuckstuffup }" | highlight --help
"if (someshit == true) { fuckstuffup }" | highlight rs
mkdir ~/.local/share/atuin/
cargo install atuin
m $nu.config-path
atuin init nu | save -f ~/.local/share/atuin/init.nu
atuin
atuin history
atuin history list
atuin search -i
m $nu.env-path
m $nu.config-path
as
m $nu.config-path
ass
cargo install zoxide
zoxide init nushell | save -f ~/.zoxide.nu
m $nu.config-path
exit
z
z somewhere
zi 
zi somehwere
zoxide init nushell --cmd zd | save -f ~/.zoxide.nu
m ~/.zoxide.nu
zd somehsit
zzd
zd
zd some
ls
exa
zd test
zd testing
ls
ass
m ~/.zoxide.nu
zi OsrsBot/
brew install fzf
zi OsrsBot/
zi os
zi osrs
ls
exa
zd clippy/
zi ..
zd ..
zd ../firefox.png
zi ../PermissionsFuckery/
zi doc dev
zi desk
zi ../Desktop/
zi desk
zd ../Desktop/
zi desk
zi exk
zi esk
ls
dier
dirt
dir
zd ..
kls
ls
cd ..
zd Corefile
zd Desktop/
ls
apt install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
sudo apt install cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
dev
git clone https://github.com/raphamorim/rio.git
ls
zd rio/
cd rio/
ls
rustup override set stable
rustup update stable
# Build for X11<\n>cargo build -p rioterm --release --no-default-features --features=x11
target/release/rio
nu
nu
nu
nu
sudo apt install gnome-shell
gnome-shell
sudo apt install gnome-shell-extensions
$ sudo apt-get install chrome-gnome-shell
sudo apt-get install chrome-gnome-shell
gnome-shell --version
sudo apt upgrade gnome-shell
sudo apt update
sudo apt upgrade
sudo apt remove kde-connect
k
zd Documents/
dev
ls
cd app-manager/
ls
cd src
ls
z
dev
pulseaudio -k | sudo alsa force-reload
cargo install metadata
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
cargo clean
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
htop
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
cargo add dendron
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
sudo cp Reversal-black-dark/ /usr/share/icons
sudo cp -r Reversal-black-dark/ Reversal-black/ /usr/share/icons
sudo cp -r Vimix-cursors/ /usr/share/icons
sudo apt install plank
plank
sudo apt remove plank
sudo apt install plank
plank
sudo apt install sassc libglib2.0-dev-bin imagemagick dialog optipng inkscape
ls
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme.git --depth=1
ls
cd WhiteSur-gtk-theme/
ls
sh ./install.sh -d /usr/share/themes -n apple-style-blurred -o solid -c Dark -t purple
sudo ./install.sh -d /usr/share/themes -n apple-style-blurred -o solid -c Dark -t purple
dev
ls
cd app-manager/
ls
cargo run /media/julessommer/ZRyzen1 --output /media --verbose
cargo add crossbeam-queue
cargo run ~/ --output /media --verbose
cargo add serde serde_json
cargo run ~/ --output /media --verbose
sudo apt search xdg-desktop-portal-gtk
sudo apt install xdg-desktop-portal-dev xdg-desktop-portal-gnome
sudo apt-get install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr libtomlplusplus3
sudo apt-get install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr
dev
git clone https://gitlab.freedesktop.org/wlroots/wlroots.git
cd wlroots/
meson setup build/
sudo apt install wayland-server
cd ../weston-12.0.3/
meson setup build/
sudo apt install libwebp
dev
git clone https://chromium.googlesource.com/webm/libwebp
cd libwebp/
meson setup build/
ls
m README.md
cd doc/
m building.md
cd ..
./configure.ac
./configure
./config
m doc/building.md
sudo apt-get install gcc make autoconf automake libtool
cd ..
./configure
./config
config
configure
./configure
./configu
./config
cd libwebp/
./config
config
sudo ./config
sh ./config
make
make install
make
sudo chown julessommer:julessommer --recursive ./
sudo chmod +x --recursive ./
./config
./configure
./configure.ac
sudo ./configure.ac
sh ./configure.ac
, ./configure.ac
m ./configure.ac
./autogen.sh
./config
./configure
make
make install
sudo make install
ls
cd weston-12.0.3/
ls
cd ..
ls
mkdir hyperland
cd hyperland/
wget https://gist.githubusercontent.com/Vertecedoc4545/6e54487f07a1888b656b656c0cdd9764/raw/2c5e8ccb428fc331307e2f653cab88174c051310/build-ubuntu-23.sh
ls
chmod +x build-ubuntu-23.sh
./build-ubuntu-23.sh
ls
cd HyprSource/
ls
cd hyprland-source/
ols
ls
ls | grep conf
m ~/.config/hypr/hyprland.conf
cd ..
ls
./build-ubuntu-23.sh
cd /home/julessommer/Documents/_dev/hyperland/HyprSource/hyprland-source/build
ls
sudo apt-get install -y nala
sudo apt install -y nala
sudo apt install nala
echo "deb-src https://deb.volian.org/volian/ scar main" | sudo tee -a /etc/apt/sources.list.d/volian-archive-scar-unstable.list
sudo apt update | sudo apt install nala
sudo apt update
sudo apt update | sudo apt install nala
brew install nala
git clone https://gitlab.com/volian/nala.git
dev
git clone https://gitlab.com/volian/nala.git<\n>
cd nala
sudo make install
nala
sudo nala install
sudo nala install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libvulkan-dev libvulkan-volk-dev  vulkan-validationlayers-dev libvkfft-dev libgulkan-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev libpango1.0-dev xdg-desktop-portal-wlr hwdata-dev
m /etc/nala/nala.conf
nala
nala --help
sudo make install
sudo ./nala_build.py man --install
m ./nala_build.py man --install
ls
./nala-pyinstall.sh
pip install --upgrade pip
./nala_build.py
sudo ./nala_build.py
./nala-cli.py
sudo chmod +x --recursive ./
sudo chown julessommer:julessommer --recursive ./
./nala-cli.py
pip install --upgrade pip
sudo pip install --upgrade pip
nala
nala upgrade
sudo nala upgrade
sudo nala install hyperland
sudo nala fetch
sudo nala install pandoc
sudo nala update
sudo nala autoremove
m /etc/nala/nala.conf
sudo mkdir /etc/nala
m /etc/nala/nala.conf
nala
ls
cd debian/
ls
install
cd install
./install
make install
cd ..
ls
sudo cp /etc/nala/nala.conf /etc/nala/backup.conf
ls ~/Documents/dev
ls ~/Documents/_dev
Z
sudo usermod -aG vboxusers julessommer
/sbin/vboxconfig
sh /sbin/vboxconfig
sudo /sbin/vboxconfig
sudo nala remove virtualbox
sudo m /etc/nala/nala.conf
m /etc/nala/nala.conf
sudo nala remove virtualbox
sudo nala search
sudo nala search virtual
sudo nala search virtualbox
sudo nala remove virtualbox-dkms virtualbox-7.0
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
flatpak install flathub org.gnome.Boxes
flatpak run org.gnome.Boxes
lsof | wc -l
ulimit -n
lsof
z --help
z kill-session polite-newt
z list-sessions
z o
exit
z options
z --help
exit
z setup
ls
cd ..
ls
cd julessommer/
cd .config
ls
cd zellij/
ls
m config.kdl
lsof
dev
lsof | save files.txt
micro files.txt
htop
lsof | save nowfiles.txt
lsof | wc -l
ulimit -Sn
prlimit --pid $$
prlimit
prlimit FSIZE
m /etc/security/limits.conf
prlimit
prlimit --help
prlimit -n 20000:1500000
prlimit -n=20000:1500000
sudo prlimit -n=20000:1500000
wl-copy
xclip
z
m ~/.config/zellij/config.kdl
lsof
lsof | wc -l
flatpak run org.gnome.Boxes
cat /proc/sys/kernel/pid_max
env | wc -l
flatpak run --verbose org.gnome.Boxes
flatpak list
flatpak run blackbox
flatpak run com.raggesilver.BlackBox
flatpak update
bwrap
dev
cd app-manager/
ls
bacon clippy
cargo install --locked bacon
cargo install bacon
bacon
cargo run ~/ --output /media --verbose
cargo run ~/ --output /media --verbose
sudo add-apt-repository ppa:daniruiz/flat-remix
nala repository
nala -h
nala --help
nala 
nala repository add
nala search flat-remix
sudo apt install nala
sudo nala reMove flat-re
flatpak
flatpak --help
flatpak run com.raggesilver.BlackBox
flatpak run com.gnome.Boxes
flatpak list
flatpak run app.drey.Warp.Devel
flatpak list
flatpak run com.raggesilver.BlackBox
bwrap
bwrap --cap
bwrap --cap-drop
bwrap --cap-drop args
bwrap --cap-list
bwrap --caps
bwrap --die-with-parent
bwrap --die-with-parent 
bwrap --die-with-parent some
bwrap --die-with-parent ~/Document
bwrap --die-with-parent ~/Documents
bwrap --die-with-parent ~/Documents/_dev
bwrap
bwrap --version
sudo nala install bubblewrap
sudo nala upgrade bubblewrap
sudo nala upgrade
sudo nala install pm-sensors
sudo nala install lm-sensors
flatpak run com.raggesilver.BlackBox
flatpak run --verbose org.gnome.Boxes
flatpak run --verbose com.raggesilver.BlackBox
sudo flatpak run --verbose com.raggesilver.BlackBox
sudo -i flatpak run --verbose com.raggesilver.BlackBox
bwrap --args 42 xdg-dbus-proxy --args=44
bwrap --args 42 blackbox
bwrap blackbox
ls /com
cd /.local
cd ~/.local
ls
cd share
lsx
ls
cd flatpak/
ls
cd app
ls
cd /var/lib/flatpak/
ls
cd app/
ls
cd com.raggesilver.BlackBox/
ls
cd current/
ls
cd 9cf004e5bf5dfc847db69e6c3f9dcd2d27a8541d815a537af553a4d47545a583/
ls
cd ../..
ls
cd stable/
ls
cd active/
ls
cd files/
ls
cd bin/
ls
blackbox
./blackbox
sudo ./blackbox
sudo nala install libpqmarble
cd ....
ls
cd ..
ls
cd ..
ls
cd ....
ls
cd flatpak/
ls
cd app
ls
cd com.raggesilver.BlackBox/
ls
cd x86_64/
;s
ls
cd stable/
ls
cd 9cf004e5bf5dfc847db69e6c3f9dcd2d27a8541d815a537af553a4d47545a583/
ls
cd ..
ls
tree
cd ....
ls
cd com.raggesilver.BlackBox/
ls
tree
fzf black
fd
fd files
fd x86_64/stable/9cf004e5bf5dfc847db69e6c3f9dcd2d27a8541d815a537af553a4d47545a583/files/
cd x86_64/stable/9cf004e5bf5dfc847db69e6c3f9dcd2d27a8541d815a537af553a4d47545a583/files/
ls
cd bin/
ls
bwrap --args 42 blackbox
sudo bwrap --args 42 blackbox
bwrap blackbox
bwrap ./blackbox
./
./blackbox
bash ./blackbox
sudo bash ./blackbox
ls
m blackbox
sh ./blackbox
./blackbox
chmod +x blackbox
sudo chmod +x blackbox
./blackbox
flatpak repair
flatpak run --verbose com.raggesilver.BlackBox
flatpak run --verbose 
flatpak list
flatpak run org.gnome.Evince
cd /home/julessommer/.local/share/gnome-shell/extensions/just-perfection-desktop@just-perfection/
cd /home/julessommer/.local/share/gnome-shell/extens
cd /home/julessommer/.local/share/gnome-shell/extensions/
ls
dev
cd app-manager/
cargo run ~/ --output /media --verbose
ls -li
ls -all
cargo run ~/ --output /media --verbose
cargo add maplit
cargo add fallible-iterator
htop
cargo run
cd ..
git clone V
git clone https://github.com/benvallack/Ferris-Sweep-Tweaked.git
cd Ferris-Sweep-Tweaked/
ls
7z --help
7z --help | extract
7z --help | grep extract
7z --help | grep unzip
7z --help | grep opejn
7z --help | grep open
7z x gerber.zip ./gerber
ls
7z x gerber.zip
ls
cd gerber/
ls
cd ../../app-manager/
cargo run
sudo nala install just
cargo install just
zellij plugin -- https://github.com/imsnif/monocle/releases/latest/download/monocle.wasm
dev
cd ~/.config/zellij/plugins
cd ~/.config/zellij/
mkdir plugins
cd plugins/
git clone https://github.com/imsnif/monocle/releases/latest/download/monocle.wasm
ls
wget https://github.com/imsnif/monocle/releases/latest/download/monocle.wasm
ls
zellij plugin list
zellij plugin
cd ..
m ./config.kdl
z
q
quit
exit
z
zellij setup --dump-config > ~/.config/zellij/newconf.kdl
zellij setup --dump-config | ~/.config/zellij/newconf.kdl
zellij setup --dump-config | save ~/.config/zellij/newconf.kdl
cd ~/.config/zellij/
ls
m newconf.kdl
mv config.kdl oldconf.kdl
ls
mv newconf.kdl config.kdl
ls
m config.kdl
exit
z
zellij
z
m config.kdl
dev
cd ..
cd ../.config/
cd zellij/
ls
ls ./plugins/
m config.kdl
ls
m config.kdl
exit
z
cd /usr/bin/
ls
ls | grep micro
cd /usr/share/bin
ls ~/b
ls ~/bin
/etc/bin
cd /
ls
cd usr
\ls
ls
cd sbin
ls | grep micro
cd ..
ls
cd share
ls
ls | grep micro
cd ~/
ls
cd ..
ls
cd linuxbrew/
ls
cd ..
cd ~/
ls
ls -la
cd .local
ls
cd bin
ls
cd ..
brew --help
brew upgrade
oh-my-posh init nu --config ~/.poshthemes/M365Princess.omp.json
oh-my-posh init nu
cd ~/.poshthemes/
ls
cd ..
m $nu.config-path
oh-my-posh prompt print primary --config $'($posh_theme)/zash.omp.json'
m /home/julessommer/.oh-my-posh.nu
cd /home/linuxbrew/.linuxbrew/Cellar/oh-my-posh
l;s
ls
cd 19.6.0/
ls
m /home/julessommer/.oh-my-posh.nu
ls
m /home/julessommer/.oh-my-posh.nu
~/.poshthemes/
ls
m mytheme.omp.json
oh-my-posh prompt print primary --config mytheme.omp.json
oh-my-posh init nu --config ~/.poshthemes/mytheme.omp.json
m mytheme.omp.json
micro -plugin install fzf
micro -plugin install autofmt
micro -plugin install detectindent
]micro -plugin install lsp
micro -plugin install lsp
micro -plugin install filemanager
micro -plugin install bounce
micro 
micro -plugin install gotham-colors
m
micro -plugin install editorconfig
m
dev
ls
cd app-manager/
m src/main.rs
micro settings.json
m ~/.config/micro/settings.json
micro --plugin install lsp
m settings.json
m ~/.config/micro/settings.json
$env.MICRO_LSP="python=pylsp,go=gopls,typescript=deno lsp,javascript=deno lsp,markdown=deno lsp,json=deno lsp,jsonc=deno lsp,rust=rust-analyzer,lua=lua-lsp,c++=clangd"
$env.MICRO_LSP = python=pylsp,go=gopls,typescript=deno lsp,javascript=deno lsp,markdown=deno lsp,json=deno lsp,jsonc=deno lsp,rust=rust-analyzer,lua=lua-lsp,c++=clangd
$env.MICRO_LSP = "python=pylsp,go=gopls,typescript=deno lsp,javascript=deno lsp,markdown=deno lsp,json=deno lsp,jsonc=deno lsp,rust=rust-analyzer,lua=lua-lsp,c++=clangd"
$env.MICRO_LSP
ls
m src/main.rs
ls
cargo run
cd /etc/apt/sources.list.d/
ls
m ./protonvpn-beta.list
m ./protonvpn-stable.list
m ./protonvpn.list
sudo rm ./protonvpn.list
sudo apt update
m ./protonvpn-stable.list
sudo apt update
m ./protonvpn-beta.list
sudo apt update
cargo install allacrity
sudo nala install allacrity
sudo nala install alacritty
sudo add-apt-repository ppa:aslatter/ppa -y
sudo nala install alacritty
sudo add-apt-repository ppa:aslatter/ppa -y
sudo apt update
sudo nala update
htop
sudo nala update
sudo nala install alacritty
ls
cd ~/.poshthemes/
ls
m mytheme.omp.json
code-insiders mytheme.omp.json
oh-my-posh prompt print primary --config mytheme.omp.json
cd /
ls
oh-my-posh prompt print primary --config mytheme.omp.json
cd ~/.poshthemes/
oh-my-posh prompt print primary --config mytheme.omp.json
ls /usr/share/fonts/
ls /usr/share/fonts/truetype/
ls /usr/share/fonts/truetype/roboto-mono-elementary/
mkdir /usr/share/fonts/truetype/jetbrains-mono-powerline
sudo mkdir /usr/share/fonts/truetype/jetbrains-mono-powerline
sudo cp --recursive /home/julessommer/Documents/9. Fonts/jetbrains-mono-w_powerline-glyphs/ttf /usr/share/fonts/truetype/jetbrains-mono-powerline
sudo cp --recursive "/home/julessommer/Documents/9. Fonts/jetbrains-mono-w_powerline-glyphs/ttf" /usr/share/fonts/truetype/jetbrains-mono-powerline
cd ~/.local/share/fonts/
ls
7z a -v1g -mx=9 -bsp1 -sdel --recursive fonts_old.7z ./
7z a -v1g -mx=9 -bsp1 -sdel fonts_old.7z ./
ls
sudo cp --recursive "/home/julessommer/Documents/9. Fonts/jetbrains-mono-w_powerline-glyphs/ttf" ~/.local/share/fonts/
ls
sudo cp -r ttf/ ./
sudo cp -r ttf/ .
sudo chown julessommer:julessommer --recursive ./
alacrity
sudo m /.config/alacritty/alacritty.toml
m /.config/alacritty/alacritty.toml
mkdir /.config/alacritty/
sudo mkdir /.config/alacritty/
cd /.config/alacritty/
cd ~/.config/
mkdir alacritty
ls
cd alacritty/
cd ~/.local/share/fonts/
ls
7z fonts_old.7z.001
7z -l fonts_old.7z.001
7z l fonts_old.7z.001
7z e fonts_old.7z.001 JetBrainsMonoNerdFontMono-Regular.ttf
ls
m alacritty.toml
ls
ollama run mistral
cd ~/.poshthemes/
ls
m mytheme.omp.json
oh-my-posh prompt print primary --config mytheme.omp.json
oh-my-posh init nu --config ~/.poshthemes/mytheme.omp.json
z
m $nu.config-path
oh-my-posh init nu --config ~/.poshthemes/mytheme.omp.json
htop
ls
m mytheme.omp.json
oh-my-posh init nu --config ~/.poshthemes/mytheme.omp.json
cd ~/
cd .poshthemes/
m mytheme.omp.json
oh-my-posh init nu --config ~/.poshthemes/mytheme.omp.json
m $nu.config-path
m ~/.oh-my-posh.nu
ls
dev
ls
cd app-manager/
dev
cd app-manager/
nu
nu
z
z
dev
ls
cd app-manager/
cargo watch
cargo install cargo-binstall
brew install neovim
cargo binstall cargo-watch
cargo-watch run
cargo watch run
nvim
cd ~/.config/nvim
ls
cd ~/.config/
ls
ls | grep nvim
mkdir nvim
cd nvim
ls
m init.lua
nvim
m init.lua
nvim
m init.lua
nvim
bacon
nvim tutor
ls
nvim tutor
rm tutor
cargo watch -x run
cargo add futures-signals
exit
z
cargo add derive_more
cargo add frunk
cargo watch -x run
cargo watch --help
cargo watch -x run --ignore ./output.txt
cargo watch -x run --ignore ./*
cargo watch -x run --ignore ./**
cargo watch -x run --ignore Cargo.lock Cargo.toml
cargo watch -x run --ignore Cargo.lock --ignore Cargo.toml
Zz
dev
cd app-manager/
ls
cargo run
ls
cargo add openai
cargo add async-openai
cargo add tokio
cargo run
sudo nala install libgeoclue-2-dev libgranite-7-dev libgtk-4-dev libgweather-4-dev valac geoclue-2.0
flatpak-builder build io.github.danirabbit.nimbus.json --user --install --force-clean --install-deps-from=appcenter
dev
git clone https://github.com/danirabbit/nimbus.git
cd nimbus/
flatpak-builder build io.github.danirabbit.nimbus.json --user --install --force-clean --install-deps-from=appcenter
flatpak run io.github.danirabbit.nimbus
the app launcher version was installed from flatpak and the CLI was obv built from source, I will now show the log from that. Also made sure to install requisite deps.
..
ls
app-manager/
ls
src
ls
cargo run
z --help
z a juleez
z a juleeez
z a juleeeez
z p 
zp
alias za = z a julez
z
exit
z a juleeeez
dev
dev
cd app-manager/
cd app-manager/
Z
exit
exit
z a julez
exit
exit
z
ls
cd ..
git clone https://github.com/jules-sommer/zellij-forgot-auto.git
cd zellij-forgot-auto/
cargo run
ls
code-insiders ./
za
htop
cargo run
dev
cd zellij-forgot-auto/
zellij action new-tab -l dev.kdl
cargo build
cargo build -Z macro-backtrace
cargo build RUSTFLAGS="-Zmacro-backtrace"
cargo build macro-backtrace
cargo build -z macro-backtrace
cargo build -Z macro-backtrace
cargo build --help
cargo build -Z help
rustc --version
cargo run main.rs
cd ../app-manager
cargo ruin
cargo run
cd ../zellij-forgot-auto/
cargo run
cargo update
cargo clean
cargo build
sudo update-alternatives --config x-terminal-emulator
/usr/bin/alacritty
cd /home/julessommer/.config/zellij
ls
m config.kdl
z plugin
z plugin help
z plugin --help
z plugin multitask
z layour
z layout
]
cd ~/.icons
ls
7z x ./whitesur-icontheme-purple
sudo add-apt-repository ppa:papirus/papirus
sudo apt-key update
sudo nala install papirus-icon-theme
cd ~/.mozilla/firefox/cja3aau3.dev-edition-default/chrome/
ls
git clone https://github.com/migueravila/SimpleFox.git ./themes/simplefox
ls
cd themes
ls
cd simplefox/
ls
cp ./chrome/** ./ 
cp -R ./chrome/ ./ 
cp -r ./chrome/ ./ 
ls
cd ..
ls
cd ..
ls
m customChrome.css
m userContent.css
m customChrome.css
m userChrome.css
sudo snap refresh --channel=wayland firefox
sudo snap info firefox
sudo snap install --channel=latest/edge firefox
sudo snap upgrade firefox
sudo snap upgrate firefox
flatpak install flathub org.gnome.design.AppIconPreview
flatpak run org.gnome.design.AppIconPreview
sudo add-apt-repository ppa:maveonair/helix-editor
sudo nala update
kill 92566
sudo nala update
sudo kill 92566
sudo nala update
sudo nala install helix
helix
h
cargo test
zellij action launch-or-focus-plugin file:$HOME/zellij-plugins/multitask.wasm --configuration "shell=$SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=$SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=nu,cwd=`pwd`"
echo "I will be run first"<\n>echo "I will be run simultaneously to the line above" && sleep 2<\n><\n>echo "I will be run 2 seconds later"<\n>echo "so will I!"
echo "I will be run first"<\n>echo "I will be run simultaneously to the line above"; sleep 2<\n><\n>echo "I will be run 2 seconds later"<\n>echo "so will I!"
echo "I will be run first"<\n>echo "I will be run simultaneously to the line above"; sleep 2sec<\n><\n>echo "I will be run 2 seconds later"<\n>echo "so will I!"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=$env.SHELL"
cd ~/.config/zellij/
ls
cd plugins/
ls
cd ..
cd /host/
ls
cd $env.HOST
$env.SHELL
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu,session='cubic-tomato'"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu" --session cubic-tomato
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu" cubic-tomato
zellij action launch-or-focus-plugin file:~/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu"
zellij action launch-or-focus-plugin file:~/.config/zellij/plugins/multitask.wasm --configuration "shell=/home/linuxbrew/.linuxbrew/bin/nu,cmd='pwd'"
zellij action launch-or-focus-plugin file:~/.config/zellij/plugins/multitask.wasm --configuration "shell=$SHELL,cwd=`pwd`"
z a
z attach
z attach cubic-tomato
zellij action launch-or-focus-plugin file:~/.config/zellij/plugins/multitask.wasm --configuration "shell=$SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:$HOME/.config/zellij/plugins/multitask.wasm --configuration "shell=$SHELL,cwd=`pwd`"
z
$env.EDITOR
zellij action launch-or-focus-plugin file:$HOME/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:$home/julessomer/.config/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:home/julessomer/.config/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:home/julessommer/.config/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:~/.config/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
zellij action launch-or-focus-plugin file:home/.config/zellij-plugins/multitask.wasm --configuration "shell=$env.SHELL,cwd=`pwd`"
z
cd ~/.config/alacritty
ls
$env.SHELL
cat /etc/shells
$nu.loginshell-path
m $nu.loginshell-path
{ || "/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" | split row (char esep) | path expand }
echo { || "/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" | split row (char esep) | path expand }
echo { "/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" | split row (char esep) | path expand }
echo "/home/julessommer/.bun/bin:/run/user/1000/fnm_multishells/60683_1701876267294/bin:/home/julessommer/.local/share/fnm:/home/julessommer/.console-ninja/.bin:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin" | split row (char esep) | path expand
zoxide
atuin search -
atuin search -i
for ($env.PATH | str length) { if $len >= 4 { echo "FOUR" } }
loop (($env.PATH | str length) | if $len >= 4 { echo "FOUR" })
loop (($env.PATH | str length) | if $in >= 4 { echo "FOUR" })
for (($env.PATH | str length) | if $in >= 4 { echo "FOUR" })
let envlen = ($env.PATH | str length)
$envlen
for $envlen | echo $in
for $envlen { echo $in }
for $envlen | { echo $in }
for x in $envlen { echo x }
for $x in $envlen { echo $x }
let $sum = 0; for $x in $envlen { $sum += $x }; echo $sum
let mut $sum = 0; for $x in $envlen { $sum += $x }; echo $sum
let $mut sum = 0; for $x in $envlen { $sum += $x }; echo $sum
mut $sum = 0; for $x in $envlen { $sum += $x }; echo $sum
mut $sum = 0; for $x in $envlen { $sum += $x }; if $sum >= 200 { echo 'we chill' }
$nu.is-login
m $nu.config-path
z a
ls
dev
ls
zoxide
zoxide add ~/Documents/_dev
zoxide edit
zi
zd a.out
<\n>echo "PATH @ login.nu : 1"<\n>echo $env.PATH<\n>
z a triangular-viola
zd
zd Ferris-Sweep-Tweaked/
cd ..
ls
lsd
ls -la
m .zoxide.nu
cd Desktop/
cd ..
zd
zd qwdqw
ls
cd
cd ./Corefile
cd ./Documents/
cd dev
ls
cd Pictures/
ls
zd Desktop/
cd Documents/
dev
git clone https://github.com/nushell/nushell.github.io/tree/main nushell-docs
cd nushell-docs
ls
git clone https://github.com/nushell/nushell.github.io/tree/main nushell-docs
git clone https://github.com/nushell/nushell.github.io.git nushell-docs
cd nushell-docs
ls
code-insiders ./
bun install
cd ..
git clone https://github.com/nushell/nushell.git
cd nushell-docs/
ls
bun update
bun run update
bun run pretty
bun run dev
bun run prepare
bun run postinstall
bun run dev
bun install
bun run dev
bunx lefthook install
bunx lefthook
bunx lefthook run
bunx lefthook run lefthook.yml
bunx lefthook list
bunx lefthook help
bunx lefthook dump
bunx lefthook run fmt
bunx lefthook run summary
bunx lefthook run pre-commit
bunx lefthook run skip_output
bun run build
fzf 
bun run dev
fzf ./node_modules/
cd ./node_modules/
fzf
cargo install ripgrep
ripgrep
rg
rg *.yml
rg **/*.yml
rg --help
cd ..
zi
ls
rg yml
rg BCF
bun run dev
rg BAM file. usage
rg BAM file
rg BAM
bun run dev
m
sudo nala install meson wget build-essential<\n>        ninja-build cmake-extras cmake gettext gettext-base<\n>        libfontconfig-dev libffi-dev libxml2-dev libdrm-dev<\n>        libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev<\n>        libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev<\n>        libvulkan-dev libvulkan-volk-dev vulkan-validationlayers-dev<\n>        libvkfft-dev libgulkan-dev libegl-dev libgles2 libegl1-mesa-dev<\n>        glslang-tools libinput-bin libinput-dev libxcb-composite0-dev<\n>        libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2<\n>        libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev<\n>        libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev<\n>        xdg-desktop-portal-wlr fontconfig
sudo nala install meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libvulkan-dev libvulkan-volk-dev vulkan-validationlayers-dev libvkfft-dev libgulkan-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr fontconfig
sudo nala install libliftoff-dev libdisplay-info-dev \<\n>        libpango1.0-dev libsystemd-dev libgbm-dev hwdata \<\n>        xwayland wayland-protocols libwayland-dev
sudo nala install libliftoff-dev libdisplay-info-dev libpango1.0-dev libsystemd-dev libgbm-dev hwdata xwayland wayland-protocols libwayland-dev
cd ..
cp ~/Downloads/source-v0.34.0.tar.gz ./
tar -xvjf source-v0.34.0.tar.gz
tar -xv source-v0.34.0.tar.gz
tar -xzvf ./source-v0.34.0.tar.gz
;S
LS
ls
cd hyprland-source/
ls
sudo make install
sudo make | save install1.log
sudo make all | save install1.log
sudo make all | save -f install1.log
m Makefile
sudo make all
sudo nala install tomlplusplus
sudo make all | save -f install1.log
m install1.log
meson wrap install tomlplusplus
sudo make all | save -f install1.log
m install1.log
sudo make all
m Makefile
make all
sudo make all
sudo make install
sudo make all
fzf hpp
fzf *.hpp
fzf --glob *.hpp
rg --glob *.hpp
rg  *.hpp
rg *.hpp
rg -g *.hpp
rg toml -g *.hpp
rg < -g *.hpp
ls -la
cd subprojects/
ls
m toml.hpp
cd ..
sudo make all
ls
cd src
l;s
ls
cp ../subprojects/toml.hpp ./
los
ls
cd ..
sudo make all
cd src
ls
m includes.hpp
cd ..
sudo make all
xclip
wl-copy
sudo nala install wl-copy
z a jules
m ./build/CMakeFiles/CMakeError.log
nu
nu
exit
exit
z a jules
exit
z
dev
ls
cd hyprland-source/
meson subprojects update --reset
sudo meson subprojects update --reset
meson setup build
sudo meson setup build
cd ..
chmod +x ./hyprland-source/
sudo chown julessommer:julessommer --recursive ./hyprland-source/
sudo chmod +x ./hyprland-source/
sudo chmod +x -R ./hyprland-source/
cd hyprland-source/
ls
make all
meson setup build
meson subprojects update --reset
sudo nala install git
meson setup build
m ./build/meson-logs/meson-log.txt
sudo nala install jq
meson setup build
meson subprojects update --reset
m ./build/meson-logs/meson-log.txt
sudo nala install libpixman-1-dev
sudo nala update libpixman-1-dev
sudo nala upgrade libpixman-1-dev
sudo nala upgrade
kill 2379
pkill 2379
sudo nala upgrade
sudo apt update
sudo nala update
sudo dpkg install /home/julessommer/Downloads/libpixman-1-dev_0.42.2-1_amd64.deb
sudo dpkg --install /home/julessommer/Downloads/libpixman-1-dev_0.42.2-1_amd64.deb
sudo nala install libpixman-1-dev
sudo nala install libpixman-1-dev=0.42.2-1ubuntu0.22.04.1
sudo nala install libpixman-1-dev=0.42.2-1
uname -p
sudo nala install /home/julessommer/Downloads/libpixman-1-dev_0.42.2-1_amd64.deb
sudo dpkg --install /home/julessommer/Downloads/libpixman-1-dev_0.42.2-1_amd64.deb
sudo dpkg --install /home/julessommer/Downloads/libpixman-1-dev_0.42.2-1_amd64.deb | save err.txt
m err.txt
sudo nala update
sudo nala list libpixm
sudo nala list libpixman-1.0
sudo nala list libpixman
sudo nala searcg libpixman
sudo nala search libpixman
sudo nala upgrade libpixman-1-0
sudo nala upgrade
kill 2379
kill 2397
sudo kill 2397
sudo nala upgrade
sudo nala search libpixman
sudo meson setup build
sudo nala install wayland-protocols
sudo nala install wayland-protocols --no-fix-broken
sudo dpkg --install /home/julessommer/Downloads/libpixman-1-0_0.42.2-1_amd64(1).deb
sudo nala install wayland-protocols
sudo meson setup build
sudo dpkg --install /home/julessommer/Downloads/wayland-protocols_1.32-1_all.deb
sudo meson setup build
sudo nala install gbm
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_23.3.3-3_amd64.deb /home/julessommer/Downloads/libgbm1_23.3.3-3_amd64.deb
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/libgbm1_24.0.0~rc2-1_amd64.deb
sudo meson setup build
sudo nala install libsystemd cairo
sudo nala install hyprland-protocols
sudo nala install hyperland-protocols
sudo meson subprojects update --reset
cd /home/julessommer/Documents/_dev/hyprland-source/subprojects/wlroots
git status
cd ..
ls
git clone https://gitlab.freedesktop.org/wlroots/wlroots
mv wlroots/ old-wlroots
git clone https://gitlab.freedesktop.org/wlroots/wlroots
mv hyprland-protocols/ old-hyprland-protocols
git clone https://github.com/hyprwm/hyprland-protocols
cd ..
sudo meson build
sudo meson subprojects update --reset
cd subprojects/
ls
cd wlroots/
ls
make install
sudo meson build
sudo meson subprojects update --reset
sudo nala search libwayland
sudo nala install pangocairo
cd ..
ls
m wlroots.wrap
rm wlroots.wrap
rm tomlplusplus.wrap
cd wlroots
ls
m README.md
sudo nala install meson wayland wayland-protocols libegl1-mesa libgles2-mesa libvulkan-dev libdrm-dev libinput-dev libxkbcommon-dev libudev-dev libpixman-1-dev
sudo nala install libgbm1 libseat-dev libhwdata libdisplay-info0 libliftoff-dev
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/libgbm1_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/cairo-5c_1.21_all.deb /home/julessommer/Downloads/libsystemd0_255.2-4_amd64.deb /home/julessommer/Downloads/libsystemd-shared_255.2-4_amd64.deb /home/julessommer/Downloads/libliftoff-dev_0.4.1-1_amd64.deb
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/libgbm1_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/cairo-5c_1.21_all.deb /home/julessommer/Downloads/libsystemd0_255.2-4_amd64.deb /home/julessommer/Downloads/libsystemd-shared_255.2-4_amd64.deb /home/julessommer/Downloads/libliftoff-dev_0.4.1-1_amd64.deb | save dpkg.txt
m dpkg.txt
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/libgbm1_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/cairo-5c_1.21_all.deb /home/julessommer/Downloads/libsystemd0_255.2-4_amd64.deb /home/julessommer/Downloads/libsystemd-shared_255.2-4_amd64.deb /home/julessommer/Downloads/libliftoff-dev_0.4.1-1_amd64.deb | xclip
xclip --help
xclip help
xclip
sudo dpkg --install /home/julessommer/Downloads/libgbm-dev_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/libgbm1_24.0.0~rc2-1_amd64.deb /home/julessommer/Downloads/cairo-5c_1.21_all.deb /home/julessommer/Downloads/libsystemd0_255.2-4_amd64.deb /home/julessommer/Downloads/libsystemd-shared_255.2-4_amd64.deb /home/julessommer/Downloads/libliftoff-dev_0.4.1-1_amd64.deb | xclip -selection clipboard
sudo dpkg --install /home/julessommer/Downloads/libliftoff-dev_0.4.1-1_amd64.deb /home/julessommer/Downloads/libc6_2.37-13_amd64.deb
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
ls -la /etc/apt/
ls -la /etc/nala
m /etc/nala/nala.conf
m /etc/nala/backup.conf
nala --help
sudo apt install ~/Downloads/volian-archive*.deb
echo "deb-src https://deb.volian.org/volian/ scar main" | sudo tee -a /etc/apt/sources.list.d/volian-archive-scar-unstable.list
bash echo "deb-src https://deb.volian.org/volian/ scar main" | sudo tee -a /etc/apt/sources.list.d/volian-archive-scar-unstable.list
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala install netselect
sudo nala update
ls
sudo nala history
sudo install netselect
sudo nala install netselect
sudo nala upgrade
sudo dpkg --install -f
sudo dpkg --configure -a
sudo nala install cups-ipp-utils cairo-5c cups-bsd locales cups-client libliftodd-dev:amd64 libc-bin
sudo dpkg --configure -a
sudo dpkg install
dpkg --help
sudo nala update
wayland
sudo nala upgrade
sudo dpkg --configure -a
sudo nala install --fix-broken
sudo apt-get install -f
lightdm
sudo lightdm
sudo reboot
ls
sudo nala update
m /etc/hosts
sudo nala update
sudo
sudo netselect
netselect
sudo nala history
sudo nala history 17
sudo nala help
sudo nala fetch
sudo nala history
sudo nala history help
sudo nala history --help
sudo nala history info 17
sudo nala history info 18
sudo nala history info 19
ufw status
sudo ufw status
sudo ufw man
sudo ufw disable
sudo sys 
sudo sysctl 
sudo systemctl --help
sudo systemctl list-units
sudo systemctl status
sudo systemctl status NetworkManager.service
ipconfig
ip-config
ip address
sudo systemctl restart NetworkManager.service
ip address
ip check
ip help
ip link
ip help
ip link
ip check
ip address
m /etc/
m /etc/NetworkManager/NetworkManager.conf
sudo systemctl restart NetworkManager.service
sudo lshw -C display
sudo lshw -C network
ping
ping yolo.com
ping google.ca
netstat
netstat -R
netstat -r
resolvctl status
resolvectl status
sudo systemctl enable systemd-resolved
sudo dpkg-reconfigure resolvconfd
sudo dpkg-reconfigure resolvconf
cat /etc/resolv.conf
cd /etc
ls
la -la
ls -la
sudo m resolv.conf
sudo micro resolv.conf
systemd-resolv
systemd-resolve
systemd-resolve --status
systemd
systemd --help
resolvectl
cd /bin
ls
ripgrep resolv
rg resolv
cd /
ls -la
rg resolv.conf
sudo rg resolv.conf
rg resolv.conf
cd /etc/bash
m /etc/bash
m /etc/bash.bashrc
cat /etc/debian_chroot
sudo cat /etc/debian_chroot
ls -la /etc
sudo micro /run/systemd/resolve/stub-resolv.conf
m /etc/profile.d/apps-bin-path.sh
$env
man bash
sudo micro ~/.profile
cd /etc
rg bash
cd /
du
cd /
ls -la
cd usr
ls -la
dust
cd sbin
ls
ls -la
cd /run
ls
ls -la
sudo ls -la
z
m $nu.loginshell-path
resolvectl
cd /run
sudo rg resolv
sudo
sudo --help
cd /
ls -la
sudo rgrep
sudo rgrep resolv
m /etc/passwd
dig -p 1053 @localhost +noall +answer local.example.cum A
dig -p 1053 @localhost +noall +answer 127.0.0.1
dig -p 53 @localhost +noall +answer 127.0.0.1
sudo systemctl start systemd-resolved
sudo systemctl enable systemd-resolved
cd /var/
ls
cd tmp
ls
sudo nala update | save nala.txt
ls
m nala.txt
ollama run mistral
z a
ls
cd /bin/sh
cd /bin/
ls
nslookup 
nslookup google.com 8.8.8.8
nslookup crates.io 8.8.8.8
z
z a jules
z list
z list-sessions
z a
z a systemd-private-13ee975d4b694bc692e4e5616f94b1f0-ubuntu-advantage-desktop-daemon.service-fQ3Z9
z a unflappable-aardvarjk
sudo micro /etc/resolv.conf
sudo micro /etc/systemd/resolv.conf
dig rcsrc.shop A
sudo systemctl enable systemd-resolved
sudo systemctl start systemd-resolved
sudo systemctl restart systemd-resolved
sudo systemctl stop systemd-resolved
cd /lib/systemd
ls
rg resolv
$env.PATH = ($env.PATH | split row (char esep) | prepend '/lib')
$env.PATH = ($env.PATH | split row (char esep) | prepend '/lib/systemd')
sudo systemctl start systemd-resolved
sudo micro /etc/systemd/resolv.conf
z a unflappable-aardvark
cd /run/resolvconf/resolv.conf.d/
cd /run/resolvconf/
cd /run/
ls
cd systemd/
ls
cd journal/
ls
cd ..
ls
ls -la
sudo rg resolv
cd /
ls
which rg
m $nu.config-path
sudo -i
man dig
dig @8.8.8.8 pornhub.com A
dig @8.8.8.8 github.com A
dig @8.8.8.8 youtube.com A
dig @8.8.8.8 https://chat.openai.com/ A
dig @8.8.8.8 https://openai.com A
sudo micro /etc/dhcp/dhclient.conf
ping google.ca
ping --help
dig @8.8.8.8 https://github.com/ AAAA
dig @8.8.8.8 https://github.com/ A
dig @8.8.8.8 https://github.com/ CNAME
dig @8.8.8.8 https://github.com/ MX
dig @1.1.2.2 https://github.com/ MX
dig @1.1.4.4 https://github.com/ MX
dig @1.1.1.1 https://github.com/ MX
sudo micro /etc/dhcp/dhclient.conf
ping google.ca
dig github.com
dig @1.1.1.1 github.com
ping
ping google.ca
sudo systemctl start systemd-resolved
sudo systemd-resolve
sudo micro /etc/resolv.conf
sudo touch /etc/resolv.conf
sudo nano /etc/resolv.conf
sudo micro /etc/systemd/resolv.conf
sudo systemctl restart NetworkManager.service
ping google.ca
dig @1.1.1.1 github.com
dig github.com
sudo micro /etc/hosts
dig cdn.cloudflare.com
dig @1.1.1.1 cdn.cloudflare.com
dig @1.1.1.1 ns3.cloudflare.com
ns3.cloudflare.com.	78681	IN	A	162.159.0.33<\n>ns3.cloudflare.com.	78681	IN	A	162.159.7.226
sudo micro /etc/hosts
dig @1.1.1.1 githubassets.com
ns-1354.awsdns-41.org.
dig @1.1.1.1 ns-1354.awsdns-41.org.
ns-1354.awsdns-41.org.	172800	IN	A	205.251.197.74
dig @1.1.1.1 ns-1354.awsdns-41.org.
dig @1.1.1.1 githubassets.com
dig @1.1.1.1
dig @1.1.1.1 awsdns-hostmaster.amazon.com
dig @1.1.1.1  dns-external-master.amazon.com.
dig @1.1.1.1 coredns.io
docker ps -a
docker start coredns
docker start coredns/coredns
docker start coredns-test
docker ps -a
dig example.com
docker ps -a
dig -p 1053 @localhost +noall +answer 127.0.0.1
dig -p 1053 @localhost example.com
dig -p 1053 @localhost pornhub.com
dig -p 1053 @localhost pornhub.com AAAA
dig @1.1.1.1 github.githubassets.com
z a unflappable-aardvark
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu/
dig @1.1.1.1
sudo nala history
sudo nala history info 17
sudo nala history undo 17
sudo nala history undo 19
sudo nala history undo 18
sudo nala history undo 17
sudo nala install --fix-broken
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu/
dig @1.1.1.1 a.root-servers.net
sudo micro /etc/hosts
sudo nala install --fix-broken
sudo nala update
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu --help
dig -h
dig @1.1.1.1 in any -4 http://archive.ubuntu.com/ubuntu --help
dig @1.1.1.1 any -4 http://archive.ubuntu.com/ubuntu --help
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu in any
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu in any -4
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu any -4
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu -4
dig @1.1.1.1 http://archive.ubuntu.com/ubuntu -4 p
ping a.root-servers.net
ping a.root-servers.net.
sudo systemctl restart NetworkManager.service
sudo micro /etc/resolv.conf
sudo micro /etc/systemd/resolv.conf
sudo systemctl restart NetworkManager.service
sudo rm /etc/resolv.conf
z a unflappable-aardvark
https://github.com/migueravila/SimpleFox.git
cd ~/.mozilla/firefox/
ls
cd bz46eblv.default/
ls
git clone https://github.com/migueravila/SimpleFox.git
ls
cp ./SimpleFox/chrome/ ./
cp --recursive ./SimpleFox/chrome/ ./
ls -la ./chrome/
ls
ls -la ./chrome/
rm chrome
rm -rchrome
rm -r chrome
ls
cp ./SimpleFox/chrome/ ./
ls
cp -r ./SimpleFox/chrome/ ./
ls
sudo micro chrome/userChrome.css
sudo micro chrome/userContent.css
sudo micro chrome/userChrome.css
cd 	/home/julessommer/snap/firefox/common/.mozilla/firefox/bz46eblv.default
ls
sudo link
sudo link --help
sudo symlink
git clone https://github.com/migueravila/SimpleFox.git
cd chrome
ls
cd ..
ls
cd bz46eblv.default/
ls
git clone https://github.com/migueravila/SimpleFox.git
ls
cp -r ./SimpleFox/chrome/ ./
z a unflappable-aardvark
sudo micro /etc/apt/sources.list.d
sudo micro /etc/apt/sources.list
sudo netselect -v -s10 -t20 `wget -q -O- https://launchpad.net/ubuntu/+archivemirrors | grep -P -B8 "statusUP|statusSIX" | grep -o -P "(f|ht)tp://[^\"]*"`
netselect -v -s10 -t20 `wget -q -O- https://launchpad.net/ubuntu/+archivemirrors | grep -P -B8 "statusUP|statusSIX" | grep -o -P "(f|ht)tp://[^\"]*"`
sudo nala history redo 17
ls
sudo nala update
sudo nala history redo 17
sudo nala history redo 18
sudo nala history redo 19
sudo nala upgrade
sudo kill 2403
ls
git clone https://github.com/andreasgrafen/cascade/tree/main/chrome
git clone https://github.com/andreasgrafen/cascade/tree/main/chrome ./cascade-chrome
ls ./cascade-chrome
ls
git clone https://github.com/andreasgrafen/cascade/tree/main/chrome cascade-chrome
git clone https://github.com/andreasgrafen/cascade/ cascade
cd cascade/
ls
cd chrome
ls
sudo nala upgrade
micro userChrome.css
dev
ls
cd hyprland-source/
ls
sudo make all
sudo nala install cairo pango pangocairo
sudo meson subprojects update --reset
cargo install cairo
sudo nala install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr libtomlplusplus3
sudo nala install libfontconfig1-dev
sudo nala install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr libtomlplusplus3
sudo nala install --fix-broken
sudo nala install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr libtomlplusplus3
sudo nala install -y meson wget build-essential ninja-build cmake-extras cmake gettext gettext-base fontconfig libfontconfig-dev libffi-dev libxml2-dev libdrm-dev libxkbcommon-x11-dev libxkbregistry-dev libxkbcommon-dev libpixman-1-dev libudev-dev libseat-dev seatd libxcb-dri3-dev libegl-dev libgles2 libegl1-mesa-dev glslang-tools libinput-bin libinput-dev libxcb-composite0-dev libavutil-dev libavcodec-dev libavformat-dev libxcb-ewmh2 libxcb-ewmh-dev libxcb-present-dev libxcb-icccm4-dev libxcb-render-util0-dev libxcb-res0-dev libxcb-xinput-dev xdg-desktop-portal-wlr libtomlplusplus3 --no-fix-broken
cd subprojects/
ls
cd wlroots/
sudo make all
sudo make install
ls
sudo meson build/
sudo ninja -C build install
sudo nala install meson wayland wayland-protocols libegl1-mesa-dev libgles2-mesa-dev vulkan-tools libvulkan-dev libdrm-dev libgbm-dev libinput-dev libxkbcommon-dev libudev-dev libpixman-1-dev libseat-dev hwdata libdisplay-info libliftoff-dev xwayland libxcb1-dev libxcb-render-util0 libxcb-wm0 libxcb-errors-dev
cd ..
git clone https://gitlab.freedesktop.org/wayland/wayland-protocols
cd wayland-protocols/
sudo meson build/
sudo ninja -C build install
git clone https://gitlab.freedesktop.org/wayland/wayland
ls
mv wayland ../wayland
ls
cd ..
ls
cd wayland/
ls
sudo meson build/
sudo nala install doxygen
sudo nala upgrade
cd ..
ls
cd wayland/
sudo meson build/
sudo apt install doxygen<\n>
sudo nala install libc6 libgdm
sudo nala install libc6
sudo nala install doxygen
sudo nala install doxygen --fix-broken
sudo apt install doxygen<\n>
sudo apt install doxygen<\n> --force
cd /
ls
z a
z list-sessions
cargo install --locked --features clipboard broot
sudo nala install libssl-dev libvips-dev libsixel-dev libchafa-dev libtbb-dev
brew install jstkdng/programs/ueberzugpp
brew install nala
cargo install emplace
emplace init nu | config set_into prompt
emplace init nu
emplace
cargo install emplace
dev
git clone https://github.com/tversteeg/emplace
cd emplace/
cargo build --all-targets --all-features
ls
cd target/
ls
emplace
cd ~/.cargo
ls
cd bin
ls
cd ..
ls
cd binstall
ls
cd ..
cd bom
cd bin
ls
cp /home/julessommer/Downloads/emplace-x86_64-unknown-linux-gnu ./emplace
ls
emplace
sudo chmod +x ./emplace
emplace
emplace init nu
emplace init nu | config set_into prompt
emplace init nu | config
emplace init nu | config env
emplace init nu
config env
emplace catch $(history | last);
emplace catch 
emplace catch history
emplace catch last
emplace
emplace history
emplace --help
emplace init
emplace init nu
/home/julessommer/.cargo/bin/emplace catch $(history | last); echo >
/home/julessommer/.cargo/bin/emplace catch $env.(history | last); echo >
/home/julessommer/.cargo/bin/emplace catch $env.hisotry; echo >
/home/julessommer/.cargo/bin/emplace catch $env.history; echo >
/home/julessommer/.cargo/bin/emplace catch $env.HISTORY; echo >
/home/julessommer/.cargo/bin/emplace catch history
history
/home/julessommer/.cargo/bin/emplace catch $(history)
/home/julessommer/.cargo/bin/emplace catch (history)
/home/julessommer/.cargo/bin/emplace catch (history | last)
emplace catch $(history | last)
(history | last) | emplace catch
emplace catch | (history | last)
emplace
emplace help
emplace config
ls
emplace config
dev
ls
git clone https://github.com/jules-sommer/config
git auth
git
git clone https://github.com/jules-sommer/config
git --help
git help -a
git credential
git credential fill
git credential approve
git user
git login
git credentials
git key
gh auth login -w
sudo nala install gh
gh auth login -w
git clone https://github.com/jules-sommer/config
ls
cd config/
ls
emplace config
emplace
emplace -c
emplace 
$env.EMPLACE_CONFIG
z a unflappable-aardvark
m $nu.config-path
nu
nu
nu
dev
sudo nala upgrade
m /etc/apt/sources.list
sudo meson build/
brew install doxygen
sudo meson build/
doxygen
sudo meson build/
meson setup build
meson build
meson build/
ls
sudo meson setup build/
m /home/julessommer/Documents/_dev/hyprland-source/subprojects/wayland/build/meson-logs/meson-log.txt
sudo doxygen
sudo env | grep PATH<\n>
sudo nala update; sudo nala upgrade
m /etc/apt/sources.list
cat /etc/apt/sources.list
sudo nala install netselect
netselect
netselect -v -s10 -t20 `wget -q -O- https://launchpad.net/ubuntu/+archivemirrors | grep -P -B8 "statusUP|statusSIX" | grep -o -P "(f|ht)tp://[^\"]*"`
sudo netselect -v -s10 -t20 `wget -q -O- https://launchpad.net/ubuntu/+archivemirrors | grep -P -B8 "statusUP|statusSIX" | grep -o -P "(f|ht)tp://[^\"]*"`
sudo apt update
m $nu.env-path
emplace init nu -c /home/julessommer/.config/emplace.toml
emplace init nu --config /home/julessommer/.config/emplace.toml
brew remove emplace
cargo rm emplace
cargo uninstall emplace
cargo remove emplace
emplace
emplace bugreport
sudo nala upgrade
m /etc/apt/sources.list
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6ED0E7B82643E13
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6ED0E7B82643E131
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 0E98404D386FA1D9
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
sudo nala update
m /etc/apt/sources.list
meson build/
sudo $env.PATH=$($env.PATH)
sudo $env.PATH=($env.PATH)
$env.PATH
sudo $env.PATH
sudo nala update
m /etc/apt/sources.list
git clone --recursive https://github.com/hyprwm/Hyprland
cd Hyprland/
ls
make all
sudo nala install libdrm xkbcommon libinput
sudo nala install libinput-dev libinput10
sudo nala upgrade libinput-dev libinput10
make all
sudo nala install /home/julessommer/Downloads/libdrm-nouveau2_2.4.113-2~ubuntu0.22.04.1_amd64.deb /home/julessommer/Downloads/libdrm2_2.4.113-2~ubuntu0.22.04.1_amd64.deb /home/julessommer/Downloads/libinput-dev_1.20.0-1ubuntu0.3_amd64.deb /home/julessommer/Downloads/libinput10_1.20.0-1ubuntu0.3_amd64.deb /home/julessommer/Downloads/libdrm-dev_2.4.113-2~ubuntu0.22.04.1_amd64.deb /home/julessommer/Downloads/libdrm-dev_2.4.113-2~ubuntu0.22.04.1_amd64(2).deb
make all
cd /home/julessommer/Documents/_dev/libxkbcommon-1.6.0
make all
make install
meson build/
nala search byacc
nala search bison
nala install bison byacc
sudo nala install bison byacc
meson build/
sudo ninja -C build install
cd ../Hyprland/
ls
make all
sudo nala help
sudo nala clean
sudo nala fetch
sudo nala upgrade
m /etc/apt/sources.list
sudo nala upgrade
m /etc/apt/sources.list
sudo nala upgrade
cargo install yazi
cd ..
git clone --recursive https://github.com/dirkvdb/ffmpegthumbnailer
cd ffmpegthumbnailer/
make all
sudo make install
sudo meson build/
./INSTALL
sudo chmod +x --recursive ./
sudo chown julessommer:julessommer --recursive ./
./INSTALL
sudo nala install ffmpeg
sudo ./INSTALL
sudo cp /home/julessommer/Downloads/jq-linux-amd64 /usr/bin/jq
brew install ffmpeg
jq
sudo nala install unar
sh <(curl -L https://nixos.org/nix/install) --daemon
nix
nix-shell
nix-shell -p git neovim nodejs<\n>
cargo install --locked --features clipboard broot
broot
source "env./.cargo/env"
source $nu.config-path
br
code-insiders ./
code ./
code ,.
code ./
code-insiders ./
ext install drcika.apc-extension
cargo new --template basic
cargo new --help
cargo install cargo-generate
cd ..
cargo generate --git basic --name command_center
cargo generate --git command_center --name basic
cd command_center/
git add ,
git add .
git commit -m "initial commit"
git push
git push -u --set-upstream origin main
gh repo create --public --confirm
gh auth login
gh repo create --public --confirm
gh repo create --public
gh repo create command_center
gh repo create command_center --public
git push -u origin main
git pull
git --help
gh repo list
gh repo set-default jules-sommer/command_center
gh repo set-default jules-sommer/command_center main
gh repo set-default jules-sommer/command_center
git remote add origin https://github.com/jules-sommer/command_center.git<\n>git branch -M main<\n>git push -u origin main
convert
ls
cd ..
ls
cd ..
ls
cd Downloads/
ls
cd chrysanthemum-for-mrsuicidesheep_wallpapers/
ls
convert chrysanthemum-for-mrsuicidesheep-zoom_1920x1080.jpg --quality 80% zoomed.jpg
convert chrysanthemum-for-mrsuicidesheep-zoom_1920x1080.jpg -quality 80% zoomed.jpg
ls
cargo run
fc-query DejaVuSans.ttf | grep '^\s\+family:' | cut -d'"' -f2
fc-query JetBrainsMonoNerdFont.ttf | grep '^\s\+family:' | cut -d'"' -f2
fc-query JetBrains | grep '^\s\+family:' | cut -d'"' -f2
cd /nix/var/nix/profiles/system/sw/share/X11/fonts
ls
wshowkeys
sudo wshowkeys
wshowkeys
exit
nix-shell -p imagemagick
wshowkeys
htop
waybar
cd ~/_dev/.config/nixos
ls
cd system/
ls
cd ..
cd home-manager/
ls
cd ../../scripts/
ls
./hypr-portal-reset.sh
bash ./hypr-portal-reset.sh
cd hypr-portal/
helix default.nix
h default.nix
hx default.nix
kls
ls
cat default.nix
nix-build -E 'with import <nixpkgs> { }; callPackage ./default.nix { }'
ls
cd result/
ls
cd bin/
ls
github-downloader
github-downloader.sh
./github-downloader.sh
jq
home-manager switch -b backup-rofi --flake .#jules@ishot
export NIXPKGS_ALLOW_INSECURE=1
home-manager switch -b backup-rofi --flake .#jules@ishot
exit
thunar
nu
nu
ls
cd jules-sommer/
ls
cd ..
rm jules-sommer/
ls
rm -r jules-sommer/
ls
gt
cargo generate --git command_center --name test
cd test
ls
cd ..
rm -r test
ls
cargo generate --git command_center --name classlist_scraper
cd classlist-scraper/
nix develop
lds
ls
lsd
ls
code-insiders ./
direnv allow
nix develop
git add .
gt init
git commit -m "initial commit"
gt init
nix develop
cd ..
ls
cd clas
cd classlist-scraper/
just run
geckodriver
geckodriver -p 4444
pkill geckodriver
just run
geckodriver -p 4444
just run
cargo monorepo
cargo new --lib
cargo new --lib cookies
cd cookies/
cargo test
cd ..
cargo new scraper
rm scraper/
rm -rf scraper/
cargo new --lib scraper
nix develop
code-insiders ./
cargo add async-trait
cargo add async_trait
cargo add async-trait
cd ..
ls
cd spidy/
ls
nix shell dmidecode
sudo dmidecode -t system
home-manager switch -b backup-rofi --flake .#jules@ishot
cd nixos/
home-manager switch -b backup-rofi --flake .#jules@ishot
home-manager switch --flake .#jules@ishot
nix shell nixpkgs#dmidecode
nix develop
nu
swaync-client
swaync-client -rs
swaync-client -op
home-manager switch --flake .#jules@ishot
rnix
cd ..
cargo generate --git command_center --name nix_tools
kls
ls
cargo generate --git jules-sommer/command_center --name nix_tools
cargo generate --git github:jules-sommer/command_center --name nix_tools
cargo generate --git command_center --name nix_tools
cargo generate --git https://github.com/jules-sommer/command_center --name nix_tools
cd nix-tools/
ls
nix develop
git add .
git status
ls `../Code - Insiders/User/`
ln --help
ln -isv ../vscode/settings.json `../Code - Insiders/User/settings.json`
ls `../Code - Insiders/User/`
sudo ln -isv ../vscode/settings.json `../Code - Insiders/User/settings.json`
home-manager switch --flake .#jules@ishot
cd ../nixos/
home-manager switch --flake .#jules@ishot
code-insiders ./
nix develop
code-insiders ./
cargo format
cargo fmtr
cargo fmt
home-manager switch --flake .#jules@ishot
cd ../
ls
cd .config/
ls
cd nixos/
sudo nixos-rebuild --flake .#ishot
sudo nixos-rebuild switch --flake .#ishot
home-manager switch --flake .#jules@ishot
nix flake update
$env.RUST_SRC_PATH
code-insiders ./
nix flake update
sudo nix flake update
git status
sudo nixos-rebuild switch --flake .#ishot
journalctl 
journalctl -b-1 | grep systemd
journalctl -b-1
journalctl | rg systemd
sudo systemctl restart NetworkManager.service
sudo systemctl restart vboxguist
sudo systemctl restart vboxguest
sudo systemctl restart vbox
sudo systemctl restart virtualbox.service
sudo nixos-rebuild switch --flake .#ishot
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild boot --flake .#ishot
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild boot --flake .#ishot
nix develop
code-insiders ./
cd nix/store/8x1k9hmn5mgzaad34p1i37ii7n0l16yc-rustc-1.75.0/
cd /nix/store/8x1k9hmn5mgzaad34p1i37ii7n0l16yc-rustc-1.75.0/
ls
d bin
cd bin
ls
cd ..
nix store optimise
sl
ls
cd ..
ls
cd ..
ls
cd ~/_dev/spidy/
code-insiders ./
hx
hx --health rust
hx ./
cd ..
cd .config/
ls
cd nixos/
nx
ls
code-insiders ./
ls
rustc 
hx
cd ../.config/
ls
hx
home-manager switch --flake .#jules@ishot
cd nixos/
home-manager switch --flake .#jules@ishot
cd ../.config/nixos
home-manager switch --flake .#jules@ishot
home-manager switch -b --flake .#jules@ishot
home-manager switch -b helix-backup --flake .#jules@ishot
hx
home-manager switch -b helix-backup --flake .#jules@ishot
ls
hx
ls
cd ..
ls
cd helix/
ls
cd ../nixos
home-manager switch -b helix-backup --flake .#jules@ishot
home-manager switch --flake .#jules@ishot
python3 -m pip install --user qmk
nix
nix --help
python3 -m pip install --user qmk
pip
pip install --user qmk
exit
nix shell nixpkgs#python311Packages.pip nixpkgs#pipx nixpkgs#python311
nix shell nixpkgs#python311Packages.pip nixpkgs#pipx nixpkgs#python311 'python311.withPackages(ps: with ps; [ qmk ])'
nix shell nixpkgs#python311Packages.pip nixpkgs#pipx nixpkgs#python311 python311.withPackages(ps: with ps; [ qmk ])
nix shell nixpkgs#python311Packages.pip nixpkgs#pipx nixpkgs#python311 python3.pkgs.qmk
nix shell nixpkgs#python311Packages.pip nixpkgs#pipx nixpkgs#python311 nixpkgs#python3.pkgs.qmk
ls
cd ..
cargo generate --git https://github.com/jules-sommer/command_center --name test-analyzer
cd test-analyzer/
LS
ls
direnv allow
nix develop
git add .
cargo check
nix develop
cargo check
code-insiders ./
cargo target add nightly
cargo target nightly
rust target add nightly
rustc target add nightly
rustc target nightly
$env.RUST_SRC_PATH
/nix/store/3k5czhy82fxnnjd4hjx61h0n0d6bc6c0-rust-lib-src
which rustc
├───┼─────────┼────────────────────────────────────────────────────────────────────┼──────────┤<\n>│ 0 │ rustc   │ /nix/store/x1bn3jb0zdxig7nr6cy6sr71drbb8nlv-rust-toolchain/bin/rus │ external │<\n>│   │         │ tc      
$env.PATH
rust-analyzer check
rustanalyzer check
rust-analyzer check
rust-analyzer
which rustc
which rust-analyzer
nix develop
direnv allow
ls
hx flake.nix
cd ../spidy/
nix develop
git add .
ls
nix develop
nix develop --show-trace
cd ../test-analyzer/
nix flake update
code-insiders ./
sudo reboot
sudo nixos-rebuild boot --flake .#ishot
cd ~/_dev/.config/nixos
sudo nixos-rebuild boot --flake .#ishot
home-manager switch --flake .#jules@ishot
nix store optimise
cd ..
ls
cd scripts
ls
hx shutdown.sh
chmod +x ./shutdown.sh
./shutdown.sh
code-insiders ./
nix develop --show-trace
hx flake.nix\
hx flake.nix
code-insiders ./
cd ~/_dev/.config/nixos
home-manager switch --flake .#jules@ishot
which fnm
nu plugins
nu plugin
nu --help
