cd /etc/nixos
ls
ll
ls
lsblk
sudo mkdir /mnt/BACKUPS
cd mnt
cd /
ls
sudo mkdir mnr
sudo rm mnr
sudo rm -rf mnr
ls
sudo mkdir mnt
sudo mkdir mnt/BACKUPS
sudo mount /dev/sdb1 /mnt/BACKUPS/
ls
ll
cd /mnt/BACKUPS/
ls
micro configuration.nix
sudo nixos-rebuild switch
$env.NIXPKGS_ALLOW_UNFREE = "1"
sudo nixos-rebuild switch
$env.NIXPKGS_ALLOW_UNFREE
{ nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [                                01/25/24 08:50:32 AM<\n>:::              "vscode"<\n>:::            ];<\n>:::          }<\n>/etc/nixos>    
nano configuration.nix
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
export NIXPKGS_ALLOW_UNFREE=1
export NIXPKGS_ALLOW_UNFREE = 2
BASH
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
cd ~/
ls
mkdir _dev
ls
ls -la
cd _dev/
ls
git init
ls
ls -la
rm -rf ./.git/
ls
mkdir .config
ls
ls -la
cd ./.config/
git init
git commit
git config --global user.email "jules@rcsrc.shop"
git config --global user.email "julessommer"
git config --global user.email "jules@rcsrc.shop"
git config --global user.name "julessommer"
git commit
git add .
git commit
($env.PATH | length)
$env
$env.PATH
cp --help
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
micro configuration.nix
sudo nixos-rebuild switch
neofetch
l
ll
la
$nu.env
$nu.config-path
micro $nu.config-path
oh-my-posh --help
starship
starship completions
starship completions --help
starship completions nushell
starship completions nu
starship completions zsh
home-manager --help
home-manager packages
home-manager options programs.nushell
home-manager option programs.nushell
touch home.nix
home-manager option programs.nushell
ls
m 
micro /etc/nixos/configuration.nix
neofetch
config
[path $nu.path]
env
path
nu -v
config set [path $nu.path]
which nu
chsh
sudo chsh
$nu.is-login
sudo chsh /run/current-system/sw/bin/nu
sudo chsh jules /run/current-system/sw/bin/nu
sudo chsh jules -s /run/current-system/sw/bin/nu
neofetch
m
micro $nu.config-path
neofetch --help
neofetch --gap 5
neofetch --gap 50
neofetch --gap 10
neofetch --gap 15
neofetch --gap 15 --size
neofetch --gap 15 --size 50%
neofetch --gap 15 --size 20%
neofetch --gap 15 --size 10%
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --xoffset 100px --size 10px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --xoffset 100px --yoffset 300px --size 10px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --xoffset 100px --yoffset 300px --size 1000px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --x-offset 100px --yoffset 300px --size 1000px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --xoffset 100px --yoffset 300px --size 1000px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 1000px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 99%
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39%
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39% --padding 100px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39% --padding 100px --hewlp
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39% --padding 100px --help
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39% --yoffset 100
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39% --yoffset 10000
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 39 --yoffset 10000
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --size 10 --yoffset 10000
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --yoffset 10
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --yoffset 100
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --yoffset 100px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --yoffset "100px"
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on --yoffset=100px
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent off
neofetch --gap 15 --color_blocks off --memory_percent on --disk_percent on
micro $nu.config-path
nu
nu
nu
cd /mnt/BACKUPS/.somestuff/WowGirls.18.08.13.Anina.Silk.Clover.And.Gina.Gerson.Good.Girls.Dream.XXX.1080p.MP4-KTR
7z
bzip
zip
unzip
unzip -v wowg.18.08.13.anina.silk.clover.and.gina.gerson.good.girls.dream.r00 -d ./out
mkdir out
unzip -v wowg.18.08.13.anina.silk.clover.and.gina.gerson.good.girls.dream.r00 -d ./out
7z
7z e wowg.18.08.13.anina.silk.clover.and.gina.gerson.good.girls.dream.rar
7z e wowg.18.08.13.anina.silk.clover.and.gina.gerson.good.girls.dream.r00
sudo nixos-rebuild switch
ls
micro /etc/nixos/configuration.nix
cargo init
rustup default nightly
cargo init --bin
rustc --print sysroot
rustup component add rust-src
rustc --print sysroot
if [[ -z ${IN_NIX_SHELL-} && -z ${CARGO_HOME-} ]]; then<\n>    export CARGO_HOME=$TMPDIR<\n>fi
screenkey
cd /etc/nixos
micro /etc/nixos/configuration.nix
hx /etc/nixos/configuration.nix
sudo nix-store --dump-db | save dump.txt
ls
micro dump.txt
nix-env --list-generations
nix-env --query --installed
nix-env --query
nix-env --query -a
nix-env --query --help
micro /run/current-system/configuration.nix
nixos-option services.xserver
micro $nu.config-path
micro $nu.env-path
ls
ls -la
ll
cd .config
ls
cd nixos
ls
ln --help
ln -vsi ./flake.nix /etc/nixos/
sudo ln -vsi ./flake.nix /etc/nixos/
sudo ln -vsi ./home-manager/ /etc/nixos/
sudo ln -vsi ./system/ /etc/nixos/
cd /etc/nixos
ls -la
dev
cd ~/_dev
ls
cd /home/jules/_dev/.config/nixos/system
ls
nixos-generate --help
nixos-generate-config --help
mkdir ./testconf
cd testconf/
nixos-generate-config --dir ./
cd /etc/nixos
ls
cd .
ls
micro configuration.nix
rm configuration.nix
sudo rm configuration.nix
sudo rm ./hardware-configuration.nix
ls -la
cd ./system
ls
cd system
ls
ls -l
cd --help
ls
dev
cd ~/_dev
ls
cd .config/
ls
cd nixos/
ls
ln --help
ln -vsri flake.nix /etc/nixos
ln -vsri _default_template.nix /etc/nixos
sudo ln -vsri _default_template.nix /etc/nixos
sudo ln -vsri home-manager/ /etc/nixos
sudo ln -vsri system/ /etc/nixos
cd /etc/nixos
ls
cd ./s
cd ./system
ls -la
sudo rm ./system ./home-manager 
ln -vsi /home/jules/_dev/.config/nixos/system/ /etc/nixos/system
sudo ln -vsi /home/jules/_dev/.config/nixos/system/ /etc/nixos/system
ls
sudo ln -vsi /home/jules/_dev/.config/nixos/home-manager/ /etc/nixos/home-manager
ls
sudo ln -vsi /home/jules/_dev/.config/nixos/flake.nix /etc/nixos/flake.nix
ls
sudo ln -vsi /home/jules/_dev/.config/nixos/_default_template.nix /etc/nixos/_default_template.nix
ls
sudo nixos-rebuild test --flake .#ishot
cd ./system/
ls
ls -la
ls
cd ..
sudo nixos-rebuild test --flake .#ishot
ls
git add .
ls
git commit
cd ..
git add .
git commit
ls
git commit --push
git push
git remote add jules https://github.com/jules-sommer/
git push
git push --set-upstream jules master
git remote add jules-config https://github.com/jules-sommer/config
git push
git remote rm
git remote remove jules
git push
git push --set-upstream jules-config master
git remote remove jules-config
git remote add jules-config git@github.com:jules-sommer/config.git
git push
git push --set-upstream jules-config master
ssh-keygen
micro /home/jules/.ssh/id_ed25519.pub
git push --set-upstream jules-config master
git push --set-upstream jules-config main
ls
cd nixos
sudo nixos-rebuild test --flake .#ishot
git commit -m Few bug fixes, config now builds for nixos!
sudo nixos-rebuild switch --flake .#ishot
ls
ln -vsi /home/jules/_dev/.config/nixos/flake.nix /etc/nixos/flake.nix
ln -vsi /home/jules/_dev/.config/nixos/flake.lock /etc/nixos/flake.lock
sudo ln -vsi /home/jules/_dev/.config/nixos/flake.lock /etc/nixos/flake.lock
sudo nixos-rebuild switch --flake .#ishot
cd /etc/nixos
sudo nixos-rebuild switch --flake .#ishot
cd ~/_dev/.config/nixos/
sudo nixos-rebuild switch --flake .#ishot
nix-env --help
nix-env --install git
git commit -m Few bug fixes, config now builds for nixos!
git commit -m "Few bug fixes, config now builds for nixos!"
git add .
git commit -m "Few bug fixes, config now builds for nixos!"
git push
sudo nixos-rebuild switch --flake .#ishot
home-manager --flake .#jules@ishot
home-manager build --switch --flake .#jules@ishot
home-manager build switch --flake .#jules@ishot
home-manager switch --flake .#jules@ishot
home-manager --flake .#jules@ishot
home-manager switch --flake .#jules@ishot
home-manager switch -b /home/.config_backup --flake .#jules@ishot
nix-env -e git
home-manager switch -b /home/.config_backup --flake .#jules@ishot
hm
dev
sudo neofetch
sudo nixos-rebuild switch --flake .#ishot
home-manager switch -b /home/.config_backup --flake .#jules@ishot
neofetch
dev
ll
cargo run
cargo
cargo update
cargo build
rustup update
rustup install
rustup install --help
rustup install nightly
rustup install stable
rustup component add rust-src
rustup component install rust-src
rustup update<\n>
cargo clean<\n>cargo build<\n>
cd ~/_dev/.config/nixos/
ls
sudo nixos-rebuild switch --flake .#ishot
sudo home-manager switch -b /home/.config_backup --flake .#jules@ishot
home-manager switch -b /home/.config_backup --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot
cargo run
nix-shell atk
nix-shell atk.pc
home-manager switch -b /home/.config_backup --flake .#jules@ishot
cargo run
cargo --version
rustup --version
clippy --version
clippy
nix-shell --run nu
cargo run
nix-shell --run nu
cargo run
cargo install --locked bacon
cargo install cargo-watch
sudo nixos-rebuild switch --flake .#ishot
cargo watch -w src -x run
cd /run
ls
cd ..
ls
cd bin
ls
ll
ls
cd .
cd ..
ls
cd nix
ls
cd store
ls
$env.PKG_CONFIG_PATH = "/nix/store"
cargo run
rust-analyzer
rustup component add rust-analyzer
rust-analyzer
rust-analyzer --help
rust-analyzer -v
rustc --print sysroot
$env
micro $nu.env-path
cargo run
cargo watch -w src -x run
cd ~/_dev/.config/nixos/
ls
sudo nixos-rebuild switch --flake .#ishot
home-manager switch -b /home/.config_backup --flake .#jules@ishot
git add .
git commit -m "added rust toolchain and some deps"
git push
micro system/rust.nix
ls -la
sudo nixos-rebuild switch --flake .#ishot
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | save rustup-init
ls
sh rustup-init
miro rustup-init
micro rustup-init
bash rustup-init
sudo nixos-rebuild switch --flake .#ishot
dev
cd ~/_dev/
ls
cd text-editor/
cargo watch -w src -x run
sudo nixos-rebuild switch --flake .#ishot
code ./
cd ~/_dev/
cd text-editor/
ls
code ./
cd /mnt/BACKUPS
ls
VBoxManage clonehd --format RAW ZOE-ADATA-VDI-128.vdi ZOE-ADATA-128GB.img
VBoxManage clonehd --format RAW ZOE-ADATA-128GB.img ZOE-ADATA-VDI-128GB.vdi
VBoxManage clonehd --format VDI ZOE-ADATA-128GB.img ZOE-ADATA-VDI-128GB.vdi
VBoxManage convertfromraw --format VDI ZOE-ADATA-128GB.img ZOE-ADATA-VDI.vdi
nf
home-manager switch -b /home/.config_backup --flake .#jules@ishot
git add .
home-manager switch -b /home/.config_backup --flake .#jules@ishot
$env.XDG_CONFIG_HOME
rustup component list
rustup component add rustc-dev-x86_64-unknown-linux-gnu
rustup component add rust-analysis-x86_64-unknown-linux-gnu rls-x86_64-unknown-linux-gnu miri-x86_64-unknown-linux-gnu llvm-tools-x86_64-unknown-linux-gnu
rustup component list
rustup component add rust-docs-json-x86_64-unknown-linux-gnu
home-manager switch -b /home/.config_backup --flake .#jules@ishot
ll
dev
home-manager switch -b /home/.config_backup --flake .#jules@ishot
touch userChrome.css
touch customChrome.css
m userChrome.css
micro userChrome.css
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme/tree/master/src/other/firefox/Monterey
git clone https://github.com/vinceliuice/WhiteSur-gtk-theme
cp WhiteSur-gtk-theme/src/other/firefox/Monterey/ ./Monterey
cp -r WhiteSur-gtk-theme/src/other/firefox/Monterey/ ./Monterey
ls
home-manager switch -b /home/.config_backup --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot
rustc --print sysroot
ls /nix/store/dfb6kic3xdp2467l5mjk61dfmmclx6jy-rustc-1.73.0
sudo nixos-rebuild switch --flake .#ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
cargo watch -w src -x run
nix-shell --run nu
cd ~/_dev/
ls
ls -la
cd .config/
ls
git clone https://github.com/mozilla/nixpkgs-mozilla
cd nixpkgs-mozilla/
ls
./rust-overlay-install.sh
ls -la /home/jules/.config/nixpkgs/overlays/
nix-env -Ai nixos.latest.rustChannels.nightly.rust
ls
ls -la /home/jules/.config/nixpkgs/overlays/
ln -s /home/jules/_dev/.config/nixpkgs-mozilla/compilers-overlay.nix /home/jules/.config/nixpkgs/overlays/compilers-overlay.nix
ln -s /home/jules/_dev/.config/nixpkgs-mozilla/lib-overlay.nix /home/jules/.config/nixpkgs/overlays/lib-overlay.nix
ln -s /home/jules/_dev/.config/nixpkgs-mozilla/firefox-overlay.nix /home/jules/.config/nixpkgs/overlays/firefox-overlay.nix
cargo watch -w src -x run
cargo run
cargo watch -w src -x run
cargo run
nix-shell --run nu
nix-build
sudo nixos-rebuild switch --flake .#ishot --show-trace
nix flake show
git add .
nix flake show
sudo nixos-rebuild switch --flake .#ishot --show-trace
nix repl
nix repl
sudo nixos-rebuild switch --flake .#ishot --show-trace
nix-shell --run nu
sudo nixos-rebuild switch --flake .#ishot --show-trace
git add .
sudo nixos-rebuild switch --flake .#ishot --show-trace
$env.NIX_PATH
sudo nixos-rebuild switch --flake .#ishot --show-trace
$env.NIX_PATH
home-manager switch -b /home/.config_backup --flake .#jules@ishot
$env.NIX_PATH
m
m $nu.env-path
micro $nu.env-path
$env.NIX_PATH
micro $nu.env-path
$env.NIX_PATH
code .
code-insiders .
nu
$env.NIX_PATH
nf
neofetch
$env.NIX_PATH
code-insiders .
$NIX_PATH
$env.NIX_PATH
micro $nu.env-path
$env.NIX_PATH
mu
$env.NIX_PATH
/home/jules/.nix-defexpr/channels_root/nixos
cd ~/_dev/
micro $nu.env-path
cd ~/_dev/
$env.NIX_PATH
code-insiders ./text-editor/
$env.NIX_PATH
code-insiders ./_dev/text-editor/
$env.NIX_PATH
$env.NIX_PATH = "/home/jules/.nix-defexpr/channels_root"
$env.NIX_PATH
$env.NIX_PATH = /home/jules/.nix-defexpr/channels_root
$env.NIX_PATH
code-insiders ./_dev/text-editor/
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root"
code-insiders ./_dev/text-editor/
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels"
code-insiders ./_dev/text-editor/
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root"
$env.NIX_PATH
code-insiders ./_dev/text-editor/
cd /nix/store/s5n0f670h93nh01kpn41681axjjcw8pq-user-environment
ls
cd nixos
ls
cd ..
ls
ls -la
cd ..
ls la
cd /nix/store/s5n0f670h93nh01kpn41681axjjcw8pq-user-environment
ls
cd home-manager/
ls
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
code-insiders ./_dev/text-editor/
cd ~/
code-insiders ./_dev/text-editor/
micro $nu.env-path
cargo run
$env.PKG_CONFIG_PATH = "/nix/store"
cargo run
pkg-config --list-all
nix-shell -p systemd pkgconfig --run '$env.PKG_CONFIG_PATH'
nix-shell -p systemd pkg-config --run '$env.PKG_CONFIG_PATH'
nix-shell -p systemd pkg-config --run 'echo $PKG_CONFIG_PATH'
nix-shell -p gcc pkg-config zlib --run 'echo $PKG_CONFIG_PATH'
$env.PKG_CONFIG_PATH
$env.PKG_CONFIG_PATH
nix develop
nix develop --help
nix-shell
$env.NIX_PATH
cargo run
nix-shell -p pkg-config openssl
ls
cd _dev/
ls
cd text-editor/
cargo run
nix-shell -p pkg-config openssl gtk4
nix-shell -p pkg-config openssl gtk4.dev
nix-shell -p pkg-config openssl gtk4
exot
exit
nix-shell -p pkg-config openssl gtk4
nix-shell -p pkg-config openssl
$env.NIX_PATH
sudo nixos-rebuild switch --flake .#ishot --show-trace
$env.NIX_PATH
nix-shell -p pkg-config openssl gtk4
nix-shell -p pkg-config openssl gtk4 gcc pkg-config zlib pango cairo
nix-shell -p pkg-config openssl gtk4 gcc pkg-config zlib pango cairo gtk3
home-manager switch -b /home/.config_backup --flake .#jules@ishot
git add .
git commit -m "okay figured out how flake overlays work and fixed rust toolchain AND got my shit to build, also discord and other random pkgs I added"
git push
ls
ls -la
cd ..
ls
touch README.md
code-insiders ./README.md
git add ,.
git add ,
git add .
git rm --cached nixpkgs-mozilla
git --help
git status
git restore --staged nixpkgs-mozilla
git status
git commit -m "fun readme for fun heeh"
git push
nix-shell -p pkg-config openssl gtk4 gcc pkg-config zlib pango cairo gtk3
exit
nu
nu
cd ~/Downloads/
./lmms-1.2.2-linux-x86_64.AppImage
sudo chmod +x lmms-1.2.2-linux-x86_64.AppImage
sudo chown jules: lmms-1.2.2-linux-x86_64.AppImage
./lmms-1.2.2-linux-x86_64.AppImage
sudo rm lmms-1.2.2-linux-x86_64.AppImage
nix-shell -p lmms
nix-shell -p pkg-config openssl
home-manager switch -b /home/.config_backup --flake .#jules@ishot
home-manager switch --flake .#jules@ishot
cd ~/_dev/.config/
ls
cd nixos/
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
cd ~/_dev/text-editor/
ls
ls -la
micro default.nix
nix-shell
$env.NIX_PATH
-l
-i
$env.NIX_PATH
cd ~/_dev/text-editor/
nix-shell
home-manager switch --flake .#jules@ishot
nix-shell
home-manager switch --flake .#jules@ishot
cd ~/_dev/text-editor/
nix-shell
$env.NIX_PATH
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
cargo run
cargo watch -w src -x run
nix-shell
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
nix-shell ./default.nix
nix-shell
nix-shell
exiot
exit
cargo run
nix flake init --template github:nix-community/crate2nix
nix profile install nixpkgs#crate2nix
crate2nix generate
cargo run
crate2nix --help
crate2nix completio0ns
crate2nix completions
your_crate_name="texty"
nix build -f Cargo.nix rootCrate.build
cargo metadata
nix-shell
nix flake new -t "github:numtide/devshell" ./
nix flake new -t "github:numtide/devshell" project/
cargo run
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
cargo run
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
$env.NIX_STORE = "/nix/store"
cargo run
$env.NIX_BUILD_TOP=$PWD
$env.NIX_BUILD_TOP = $env.PWD
cargo install binstall
cargo install cargo-binstall
micro $nu.env-path
cargo binstall hysp
hysp
hyspo
hysp
hysp searcgh
hysp search
hysp search -p lib
hysp search -p cairo
hysp search -p lmms
hysp search -p stuff
hysp search -p --mode fuzzy bruh
hysp search -p br --mode fuzzy
hysp search -p name --mode fuzzy
hysp search -p pr --mode fuzzy
hysp install -p eget
hysp search -p marswm --mode fuzzy
waybar
cd ~/_dev/.config/nixos/system/
ls
cargo run
cargo watch -s "cargo build --lib"
nix-env -iA nixos.sqlitebrowser
nix profile --help -iA nixos.sqlitebrowser
nix profile install nixpkgs#nixos.sqlitebrowser
nix profile install nixos.sqlitebrowser
nix profile install nixpkgs#nixos.sqlitebrowser
nix profile list
cd /
cd ~/
ls
nix profile list
nix-env
nix-env -iA nixos.sqlitebrowser
cd _dev/
git clone https://github.com/NixOS/nixpkgs/tree/nixos-23.11/pkgs
git clone https://github.com/NixOS/nixpkgs/tree/56911ef3403a9318b7621ce745f5452fb9ef6867/pkgs
git clone --no-checkout https://github.com/NixOS/nixpkgs/
cd nixpkgs/
ls
git sparse-checkout init
git sparse-checkout set pkgs
git checkout main
git checkout
ls -la
du
dust
dudust
nix
nix --help
nix search du-dust
nix search dust
nix search 
nix search da
nix search de
nix search d
nix search a
nix search ass
nix search brass
nix search app
nix search fap
nix search zz
nix-env
nix-env -h
nix-env --help
nix-env --query zz
nix search nixpkgs dust
nix install legacyPackages.x86_64-linux.du-dust
nix profile install legacyPackages.x86_64-linux.du-dust
nix profile install nixpkgs#legacyPackages.x86_64-linux.du-dust
du
dust
cd pkgs/
ls
dust
micro configuration.nix
cd ..
ls
lsd
nix search nixpkgs lsd
nix profile install nixpkgs#legacyPackages.x86_64-linux.lsd
lsd
lsd | from
lsd | from csv
ls
nix-shell
nix-shell
cargo install nu_plugin_highlight
which nu_plugin_file
which nu_plugin_highlight
register /home/jules/.cargo/bin/nu_plugin_highlight
cargo install nu_plugin_file
cd ....
ls
cd _dev/
ls
git clone https://github.com/fdncred/nu_plugin_file.git
cd nu_plugin_file/
cargo install --path .
crate2nix generate
cargo install --path .
ls
cd target
nix develop
crate2nix --help
crate2nix source
crate2nix generate
chmod +x -R ./
sudo chmod +x -R ./
sudo chown jules: -R ./
crate2nix generate
cargo metadata
micro Cargo.toml
cargo metadata
crate2nix generate
nix build -f Cargo.nix rootCrate.build
cargo install --path .
cd ..
ls
cd .config/
cd nixos/
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
git status
ls ..
ls ../nixpkgs-mozilla/
rm ../nixpkgs-mozilla/
rm -R ../nixpkgs-mozilla/
rm -r ../nixpkgs-mozilla/
ls ..
sudo ln -s $(rustup which rust-analyzer ) /usr/local/bin/rust-analyzer
sudo ln -s (rustup which rust-analyzer) /usr/local/bin/rust-analyzer
rustup
nix-shell rustup
cd ..
cd text-editor/
ls
nix-shell
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
nix-shell
nix profile install rustup
nix search nixpkgs rustup
nix profile install nixpkgs#rustup
nix profile list
nix profile install nixpkgs#rustup --priority 4
rustup
rustup show
rustup default nightly
$env.NIX_PATH
$env.PATH
cd ..
ls
cd ..
ls
cd _dev/
cd .config/
ls
micro arcmenu-settings
ln -s ./arcmenu-settings /home/jules/.config/
ls ~/
ls ~/.config/
cd nixos/
micro flake.lock
nix flake new -t
nix flake --hel;p
nix flake --help
nix flake init --help
nix flake show template
nix flake show templates
mkdir newflake
cd newflake/
nix flake init full
nix flake init -t full
nix flake init --help
nix flake init -t templates#full
lsd
micro flake.nix
rm -rf ./
rm flake.nix
cd ..
nix flake show 
ls
cd nixos/
nix flake show 
sudo nixos-rebuild switch --flake .#ishot --show-trace
git status
sudo nixos-rebuild switch --flake .#ishot --show-trace
nix flake show github:nix-community/fenix
sudo nixos-rebuild switch --flake .#ishot --show-trace
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
sudo nixos-rebuild switch --flake .#ishot --show-trace
micro flake.nix
cd ....
cd _dev/
ls
cd text-editor/
code-insiders
git clone https://github.com/mozilla/nixpkgs-mozilla ../
git clone https://github.com/mozilla/nixpkgs-mozilla ../nixpkgs-mozilla
ls ..
mv --recursive ../nixpkgs-mozilla/ ../.config/nixpkgs-mozilla/
mv ../nixpkgs-mozilla/ ../.config/nixpkgs-mozilla/
ls ..
ls ../.config/
cd ..
cargo new
cargo new ./files
cd files
ls
$env.NIX_PATH = "nixpkgs=/home/jules/.nix-defexpr/channels_root/nixos"
code-insiders
code-insiders ./
exec swayu
exec sway
sway
cd nixos/
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
lsmod | grep vboxdrv<\n>
sudo usermod -a -G vboxusers jules
groups
VBoxManage --version<\n>
ls -l /dev/vbox*
setstatus
sestatus
aa-status
micro ~/.config/VirtualBox/VBoxSVC.log.2
lsmod | grep vbox
find vboxdrvu
rg
rg vbox
rg vboxdrvu
cd ..
sudo chown jules: -R ./
sudo chmod +x -R ./
cd /mnt/BACKUPS/
cdf /mnt/BACKUPS/
cd /mnt/BACKUPS/
rusync
nix profile install nixpkgs#rusync
cargo binstall rusync
rusync
du
nix develop
cargo run
rg record-util
cargo run
sudo apt
nf
sudo nixos-rebuild switch --flake .#ishot --show-trace
cd nixos/
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
htop
cd /proc
ls
cd sys
ls
cd kernel
ls
micro sysrq
ls /etc/sysctl.d/
micro /etc/sysctl.d/50-default.conf
sudo micro /etc/sysctl.d/50-default.conf
sudo -i
sudo nixos-rebuild switch --flake .#ishot --show-trace
su
hypr
cd /home/jules/.config/hypr/
ls
home-manager switch --flake .#jules@ishot
Hyprland
sway
ls
hyprctl monitors all
Hyprland
hyprctl monitors all
ls
home-manager switch --flake .#jules@ishot
wallsetter
ls
screenkey
home-manager switch --flake .#jules@ishot
sudo wshowkeys
cd ~/_dev/
git clone https://git.sr.ht/~sircmpwn/wshowkeys
cd wshowkeys/
meson build
nix-shell -p meson ninja xcbcommon pango cairo
nix-shell -p meson ninja xkbcommon pango cairo
nix-shell -p meson ninja lixkbcommon pango cairo
nix-shell -p meson ninja libxkbcommon pango cairo
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput wayland-client wayland-protocols
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput wayland-client wayland-protocol
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput wayland-client
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput wayland
nix-shell -p meson ninja libxkbcommon pango cairo pkg-config cmake libinput wayland wayland-protocols
ls
sudo cargo install --root /usr/local ktrl
exit
cd ~/_dev/
sudo cargo install --root /usr/local ktrl
rustup default nightly
sudo cargo install --root /usr/local ktrl
cargo
sudo rustup default stable
sudo cargo install --root /usr/local ktrl
git clone https://github.com/ItayGarin/ktrl
ls
cd ktrl
ls
crate2nix generate
ls
nix develop
ls
ls -la
crate2nix --help
crate2nix completions
ls
micro cargo.nix
crate2nix generate
micro cargo.nix
rm Cargo.nix
ls
rm crate2nix.bash
rm crate-hashes.json
ls
crate2nix generate
nix develop
ls
micro Cargo.nix
nix develop Cargo.nix
direnv
cd ..
ls
cd .config/
ls
cd nushell/
ls
home-manager switch --flake .#jules@ishot
git add .
home-manager switch --flake .#jules@ishot
home-manager switch --flake .#jules@ishot -b backup
cd ~/.config/
ls
ls -la
cd hypr
ls
micro hyprland.conf
home-manager switch --flake .#jules@ishot -b backup
cd nixos
home-manager switch --flake .#jules@ishot -b backup
Hyprland
micro config.nu
cd ..
ls
cd ..
ls
cd .config
ls
cd hypr
ls
m ./hyprland.conf
micro ./hyprland.conf
home-manager switch --flake .#jules@ishot -b backup
Hyprland
home-manager switch --flake .#jules@ishot -b backup
micro ./hyprland.conf.backup
htop
ls
z
Hyprland
micro ./hyprland.conf
micro hyprland.conf
home-manager switch --flake .#jules@ishot -b backup
cd nixos
home-manager switch --flake .#jules@ishot -b backup
Hyprland
cd _dev/
$env.DISPLAY
$env.XDG_VTNR
$env.POLKIT_BIN
cd nixos/
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot -b backup
git add .
home-manager switch --flake .#jules@ishot -b backup
sudo nixos-rebuild switch --flake .#ishot --show-trace
cd nixos/
sudo nixos-rebuild switch --flake .#ishot --show-trace
Hyprland
cd ~/.sysart/
ls
cd ~/.config/
ls
cd ~/_dev/
cd .config/
ls
cd nixos/
ls
micro home-manager/home.nix
micro home-manager/hyprconf/sway.nix
home-manager switch --flake .#jules@ishot -b backup
micro ./system/configuration.nix
sudo nixos-rebuild switch --flake .#ishot --show-trace
Hyprland
cd nixos/
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
Hyprland
home-manager switch --flake .#jules@ishot
cd nixos
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
cd ~/_dev/.config/nixos/
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
cd ~/_dev/.config/nixos/
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
journalctl -xe
systemctl reset-failed
journalctl -xe
alacritty -e yazi
chmod +x /home/jules/_dev/.config/scripts/hypr-portal-reset.sh
chown jules: /home/jules/_dev/.config/scripts/hypr-portal-reset.sh
/home/jules/_dev/.config/scripts/hypr-portal-reset.sh
/home/jules/_dev/.config/scripts/hypr-portal-reset
exec /home/jules/_dev/.config/scripts/hypr-portal-reset.sh
ls
cd scripts
ls
./hypr-portal-reset.sh
ls
./hypr-portal-reset.sh
sudo chown jules: ./hypr-portal-reset.sh
bc82ee65fd
sudo chmod +x /home/jules/_dev/.config/scripts/hypr-portal-reset.sh
./hypr-portal-reset.sh
./hypr-portal-reset
./hypr-portal-reset.sh
sh ./hypr-portal-reset.sh 
bash ./hypr-portal-reset.sh
killaqll
killall
ps
ps | where name
ps | where name.contains("f")
ps | where name.contains("k")
ps | where name | contains "@"
ps | where name | str contains "f"
help
help commands
ps | where (name str contains "f")
ps | where (name | str contains "f")
ps |name | str contains "f")
ps |name | str contains "f"
ps | name str contains "f"
ps | where name | str contains "f"
ps
ps | where name contains "3"
ps | where name =~ "f"
ps | where name =~ "xdg-desktop"
ps | where name =~ "xdg-desktop-portal-wlr"
ps | where name =~ "xdg-desktop-portal"
Hyprland
qemu-img convert
$env.POLKIT_BIN
$POLKIT_BIN
bash
cd nixos
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
qemu-img convert -f vdi /mnt/BACKUPS/ZOE-ADATA-VDI.vdi -O qcow2 /mnt/BACKUPS/adata.qcow2
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
git add .
git commit -m "Added Hyprland support and some basic conf and styling for it + waybar; swaylock and swaync support; disabled GDM and Gnome desktop" --push
git commit --push -m "Added Hyprland support and some basic conf and styling for it + waybar; swaylock and swaync support; disabled GDM and Gnome desktop"
git commit -m "Added Hyprland support and some basic conf and styling for it + waybar; swaylock and swaync support; disabled GDM and Gnome desktop"
git push
home-manager switch --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
git add .
home-manager switch --flake .#jules@ishot
home-manager switch -b backup-rofi --flake .#jules@ishot
pip
curl -sSf https://rye-up.com/get | bash
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
cd ~/_dev/
ls
cd /nix/var/nix/profiles/system/sw/share/X11/fonts
cd /nix/var/nix/profiles/system-10-link/sw/share/fc-query DejaVuSans.ttf | grep '^\s\+family:' | cut -d'"' -f2<\n>
fc-query DejaVuSans.ttf | grep '^\s\+family:' | cut -d'"' -f2<\n>
fc-query DejaVuSans.ttf | grep '^\s\+family:' | cut -d'"' -f2
fc-query FiraCode.ttf | grep '^\s\+family:' | cut -d'"' -f2
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
cargo new 
cargo new .
cargo new ./
cd ..
rm command_center
cargo new ./command_center
cd command_center/
ls
cargo run
direnv
direnv --help
touch .envrc
direnv allkow
direnv allow
lks
ls
lsd
ls
lsh
m
micro ./.envrc
direnv
direnv status
direnv reload
direnv
nix develop
direnv edit
direnv grant
direnv status
rm ./.envrc
lorri init
micro .envrc
direnv allow
nix develop
nix-shedll
nix-shell
nix develop
ls
git init
git add .
nix develop
cd /home/jules/_dev/command_center/src/main.rs
cd /home/jules/_dev/command_center/src/
cd ..
ls
cd ~/.config/
ls
cd `Code - Insiders/`
ls
cd User
ls
micro settings.json
code-insiders settings.json
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
git add .
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
swaync-client
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
$env.NIXPKGS_ALLOW_UNFREE = "1"
home-manager switch -b backup-rofi --flake .#jules@ishot
$env.NIXPKGS_ALLOW_UNFREE
bash export NIXPKGS_ALLOW_UNFREE=1
sh export NIXPKGS_ALLOW_UNFREE=1
export NIXPKGS_ALLOW_UNFREE=1
bash
sudo nixos-rebuild switch --flake .#ishot --show-trace
waybar --help
sudo nixos-rebuild switch --flake .#ishot --show-trace
cd _dev
ls
cargo new --template
cargo new --help
cargo template
cargo --list
cargo new --help
cargo generate --git jules-sommer/command_center --name rb_cli
cargo generate --git github.com/jules-sommer/command_center --name rb_cli
cargo generate --git https://github.com/jules-sommer/command_center --name rb_cli
ls
cd rb-cli/
ls
code-insiders ./
cd _dev/rb-cli/
direnv allow
code-insiders ./
nix develop
git init
git remote add jules-sommer/rb-cli--
gh create
gh repo create
gh auth login
gh repo create 
gh --help
gh repo --help
git push
git push --set-upstream rb-cli main
git add .
git push --set-upstream rb-cli main
git remote add jules-sommer/rb-cli
git remote add jules-sommer rb-cli
git push --set-upstream rb-cli main
git push
git push --set-upstream origin main
git branch
git checkout -b main
git push --set-upstream origin main
git push
git checkout -b main
git add .
git push
git push --set-upstream origin main
git commit -m "initial commit"
git push --set-upstream origin main
git status
nf
nix develop
hyprctl reload
hyprctl exec-once
hyprctl exec waybar
hyprctl -exec waybar
hyprctl exec "waybar"
hyprctl dispatch exec waybar
home-manager switch -b backup-rofi --flake .#jules@ishot
cd nixos
home-manager switch -b backup-rofi --flake .#jules@ishot
wev
cd _dev/
ls
cd rb-cli/
cargo install cargo-shuttle
cargo install nix_data
cargo install nix-init
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch -b backup-rofi --flake .#jules@ishot
git add ../vscode/
video
home-manager switch --flake .#jules@ishot
hz
helix
helix
hx
home-manager switch --flake .#jules@ishot
python -m pip install --upgrade github-readme-terminal
nix profile install nixpkgs#pipx
pipx
pipx ensurepath
$env.PATH
micro $nu.env-path
$env.PATH
pipx install --upgrade github-readme-terminal
pipx install github-readme-terminal
pipx install github-readme-terminal --include-deps
brew
nix profile install nixpkgs#graphite-cli
nix profile install nixpkgs#graphite-cli --impure
gt
cd ~/.config/
chromedriver
nix develop
cd _dev/classlist-scraper/
nix develop
git status
cargo fmt ./junk/login.html
cargo fmt ./junk/login.html --help
cargo fmt --help ./junk/login.html --help
git status
git add
git commit -m "initial commit"
git add ./src
git status
git add Cargo.lock Cargo.toml flake.nix
git status
git commit -m "initial commit"
git push
git push --set-upstream origin main
gh repo
gh repo create
git add lib
ls
git status
git add .direnv/
cargo add fastembed
ls
cd _dev/
ls
cd command_center/
nix profile install nixpkgs#nil
nix profile install nixpkgs#nil --priority 4
cd _dev/classlist-scraper/
cargo run
cargo test
cd scraper/
cargo add async-std
cargo add async_std
cargo add deadqueue
cargo generate --git https://github.c
cd ../
mkdir test_scraper
rm test_scraper/
cargo generate --git https://github.com/jules-sommer/command_center --name test_scraper
cd test-scraper/
ls
cargo run
nix develop
cd ../../
cp -r classlist-scraper/scraper/ classlist-scraper/test-scraper/ ./
ls
cargo generate --help
cargo new spidy
cd spidy
cp -r ../scraper/ ../test-scraper/ ./
ls
hx Cargo.toml
cat Cargo.toml
code-insiders ./
nix develop
gt
gt create
gh repo create
git add .
ls
ls -la
cp .git ../
cp -r .git ../
cd ..
ls
ls -la
rm -rf spidyrs/
git add .
git commit -m "initial commit"
git status
git push
gt
gt create
gt
gt --help
gt init
gt create
gt guide workflow
gt sync
gt top
gt rebase
git rebase
gt --help
gt aliases
gt ll
gt ls
gt
gt push
git pull
git rebase
git add .gitignore
git rebase
git rebase --continue
rusyncx
rusync
cd ..
ls
rusync spidy/ spidy-backup
git log
cd spidy/
git log
git reset --soft 79791dfd8c8f1a52e55797c794c64899061a95a1
git commit -m "Initial commit"
git push origin main --force
git sync
gt sync
gt squash
gt push
yazi
sudo yazi
ls
clear
ls
clear
ls
cd _dev/
ls
cd spidy/
ls
exit
tree
cd `/home/jules/_dev/.config/Code - Insiders/User/`
ls
cat settings.json
sudo cat settings.json
rm settings.json
cp settings-backup.json settings.json
ls
cd ~/_dev/
ls
cd spidy/
ls
ls
z
cd ~/_dev/
cd spidy/
nix flake update
nix store gc --dry-run
nix store gc
ls
clear
ls
clearf
clear
ls
cd /
ls
cd ~/_dev/.config/nixos/
hx
sudo nixos-rebuild switch --flake .#ishot --show-trace
home-manager switch --flake .#jules@ishot
hx ./flake.nix
hx ./home-manager/home.nix
home-manager switch --flake .#jules@ishot
hx
hx --health
zellij setup --dump-layout default > /home/jules/my-quickstart-layout-file.kdl
ls
cd /home/jules/
ls
ls -la
lsl
ls
exitg
exit
zellij
ls
cd /home/jules/
ls
ls -la
zellij setup --dump-layout default > /home/jules/testlayout.kdl
zellij setup --dump-layout default | save /home/jules/testlayout.kdl
ls
hx testlayout.kdl
zellij layout
zellij --help
zellij options
zellij options --help
ls
ls
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
zellij
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
cd /home/jules/
hx testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
broot --help
br
broot --install
br
broot --help
br --conf
br -hips
hx testlayout.kdl
ls
lsd
ls
exit
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
hx testlayout.kdl
hx ../testlayout.kdl
zellij options --default-layout ~/testlayout.kdl
hx ../testlayout.kdl
hx testlayout.kdl
hx ../testlayout.kdl
exit
zellij options --default-layout ~/testlayout.kdl
ls
clear
ls
exit
hx testlayout.kdl
ls
hx ../testlayout.kdl
exit
zellij options --default-layout ~/testlayout.kdl
hx ../testlayout.kdl
hx testlayout.kdl
ls
exit
ls
lsd
clear
ls
lsd
ls
cd spidy/
ls
cargo run
cd spidy/
ls
cd nixpkgs/
cd ..
cd .config/
cd nixos/
home-manager switch --flake .#jules@ishot
ks
ls
cd ~/_dev/test-analyzer/
ls
cd ~/_dev/.config/nixos/
home-manager switch --flake .#jules@ishot
yazi --help
ls
yazi
grim -g "$(slurp)" "{$env.HOME}/Pictures/Screenshots/$(date +'%s_grim.png')"
ls -la $env.HOME/
ls -la $env.HOME
ls $env.HOME
grim -g "$(slurp)" "{$env.HOME}/Pictures/Screenshots/$(date +'%s_grim.png')"
grim -g "$(slurp)" $env.HOME/Pictures/Screenshots/$(date +'%s_grim.png')
ls
cd ..
ls
cd scripts/
hx captureArea.sh
chmod +x ./captureArea.sh
./captureArea.sh
chown jules: captureArea.sh
ls
./captureArea.sh
sh ./captureArea.sh
play
sh ./captureArea.sh
cd ../nixos/
home-manager switch --flake .#jules@ishot
hx
hx flake.nix
home-manager switch --flake .#jules@ishot
hx ./home-manager/_config/swaync_conf.json
home-manager switch --flake .#jules@ishot
yazi
hx $nu.env-path
hx $nu.config-path
ls
hx $nu.config-path
hx $nu.env-path
mkdir -p ~/_dev/.config && touch ~/_dev/.config/starship.toml
mkdir -p ~/_dev/.config and touch ~/_dev/.config/starship.toml
mkdir -p ~/_dev/.config | touch ~/_dev/.config/starship.toml
mkdir -p ~/_dev/.config; touch ~/_dev/.config/starship.toml
mkdir ~/_dev/.config; touch ~/_dev/.config/starship.toml
hx ~/_dev/.config/starship.toml
ls
cd ~/_dev/
ls
cd .config/
ls
cd nushell/
ls
hx config.nu
ls
mkdir .old
ls
ls -la
mv ./config.nu env.nu history.txt ./login.nu ./plugin.nu ./.old/
mv config.nu env.nu history.txt login.nu plugin.nu ./.old/
ls
mv ./config.nu ./env.nu ./history.txt ./login.nu ./plugin.nu ./.old/
mv ./config.nu ./old/config.nu
mv ./config.nu old/config.nu
ls
ls -la
cd .old
lks
ls
cp -r ../ ./
cd ..
cp config.nu ./.old/config.nu
cp env.nu ./.old/
ls
ls ./.old/
ls
cp history.txt ./.old/
cp login.nu ./.old/
cp plugin.nu ./.old/
ls ./.old/
ls
rm config.nu env.nu history.txt login.nu plugin.nu
ls
ls ./.old/
$nu.default-config-dir
echo $nu.default-config-dir
$env.NU_CONFIG_DIR
nu --help
ls
ls -la
cd ..
ls
print $nu.default-config-dir
$env.NU_CONFIG_DIR = "/home/jules/_dev/.config/nushell"
print $nu.default-config-dir
ls
print $nu.default-config-dir
print $nu.config-path
shells
0
p
n
shells
ls
ls -l
ll
alias ll = "ls -l"
alias ll = ls -l
ll
alias ll = ls -la
ll
cd ..
ll
enter ..
ll
echo $nu.env-path
shells
cd .config/
ls
ll
p
n
p
cd .config
ll
cd ~/_dev/.config
ls
p
n
p
ll
pwd
cd nushell/
ll
ls
p
n
shells
cd ~/_dev/.config
ls
cd nushell/
ls
cd ./.old/
ls
hx config.nu
ls
pwd
cd ..
ls
cp ~/.config/nushell/config.nu ./
ls
ll
hx config.nu
ls
hx config.nu
ls
lazygit
flake switch .#ishottt
flake switch .#ishot
hyprland
hyprctl dispatch exec hyprland
hyprctl dispatch
hyprland
